!function(t) {
    var e = {};
    function i(s) {
        if (e[s])
            return e[s].exports;
        var n = e[s] = {
            i: s,
            l: !1,
            exports: {}
        };
        return t[s].call(n.exports, n, n.exports, i),
        n.l = !0,
        n.exports
    }
    i.m = t,
    i.c = e,
    i.d = function(t, e, s) {
        i.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: s
        })
    }
    ,
    i.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    i.t = function(t, e) {
        if (1 & e && (t = i(t)),
        8 & e)
            return t;
        if (4 & e && "object" == typeof t && t && t.__esModule)
            return t;
        var s = Object.create(null);
        if (i.r(s),
        Object.defineProperty(s, "default", {
            enumerable: !0,
            value: t
        }),
        2 & e && "string" != typeof t)
            for (var n in t)
                i.d(s, n, function(e) {
                    return t[e]
                }
                .bind(null, n));
        return s
    }
    ,
    i.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return i.d(e, "a", e),
        e
    }
    ,
    i.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    i.p = "/",
    i(i.s = 86)
}([function(t, e) {
    function i(e) {
        return t.exports = i = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        }
        ,
        i(e)
    }
    t.exports = i
}
, function(t, e) {
    t.exports = function(t, e) {
        if (!(t instanceof e))
            throw new TypeError("Cannot call a class as a function")
    }
}
, function(t, e) {
    function i(t, e) {
        for (var i = 0; i < e.length; i++) {
            var s = e[i];
            s.enumerable = s.enumerable || !1,
            s.configurable = !0,
            "value"in s && (s.writable = !0),
            Object.defineProperty(t, s.key, s)
        }
    }
    t.exports = function(t, e, s) {
        return e && i(t.prototype, e),
        s && i(t, s),
        t
    }
}
, function(t, e, i) {
    var s = i(7)
      , n = i(8);
    t.exports = function(t, e) {
        return !e || "object" !== s(e) && "function" != typeof e ? n(t) : e
    }
}
, function(t, e, i) {
    var s = i(25);
    t.exports = function(t, e) {
        if ("function" != typeof e && null !== e)
            throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }),
        e && s(t, e)
    }
}
, function(t, e) {
    t.exports = function(t, e, i) {
        return e in t ? Object.defineProperty(t, e, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = i,
        t
    }
}
, function(t, e, i) {
    var s = i(37);
    function n(e, i, r) {
        return "undefined" != typeof Reflect && Reflect.get ? t.exports = n = Reflect.get : t.exports = n = function(t, e, i) {
            var n = s(t, e);
            if (n) {
                var r = Object.getOwnPropertyDescriptor(n, e);
                return r.get ? r.get.call(i) : r.value
            }
        }
        ,
        n(e, i, r || e)
    }
    t.exports = n
}
, function(t, e) {
    function i(t) {
        return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        }
        : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
        )(t)
    }
    function s(e) {
        return "function" == typeof Symbol && "symbol" === i(Symbol.iterator) ? t.exports = s = function(t) {
            return i(t)
        }
        : t.exports = s = function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : i(t)
        }
        ,
        s(e)
    }
    t.exports = s
}
, function(t, e) {
    t.exports = function(t) {
        if (void 0 === t)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t
    }
}
, function(t, e, i) {
    "use strict";
    i.d(e, "b", (function() {
        return b
    }
    )),
    i.d(e, "a", (function() {
        return S
    }
    ));
    var s = i(11)
      , n = i.n(s)
      , r = i(5)
      , a = i.n(r)
      , o = i(1)
      , l = i.n(o)
      , h = i(2)
      , c = i.n(h)
      , u = i(3)
      , p = i.n(u)
      , d = i(0)
      , f = i.n(d)
      , m = i(4)
      , g = i.n(m);
    function y(t, e) {
        var i = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var s = Object.getOwnPropertySymbols(t);
            e && (s = s.filter((function(e) {
                return Object.getOwnPropertyDescriptor(t, e).enumerable
            }
            ))),
            i.push.apply(i, s)
        }
        return i
    }
    function v(t) {
        for (var e = 1; e < arguments.length; e++) {
            var i = null != arguments[e] ? arguments[e] : {};
            e % 2 ? y(Object(i), !0).forEach((function(e) {
                a()(t, e, i[e])
            }
            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : y(Object(i)).forEach((function(e) {
                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
            }
            ))
        }
        return t
    }
    var b = {
        ready: "VideoPlayer:ready",
        timeUpdate: "VideoPlayer:timeUpdate",
        valoumeChange: "VideoPlayer:volumeChange",
        play: "VideoPlayer:play",
        playing: "VideoPlayer:playing",
        pause: "VideoPlayer:paused",
        volumeChange: "VideoPlayer:volumeChange",
        enterFullscreen: "VideoPlayer:enterFullscreen",
        exitFullscreen: "VideoPlayer:exitFullscreen",
        ended: "VideoPlayer:ended",
        error: "VideoPlayer:error",
        quartileCompleted: "VideoPlayer:quartileCompleted",
        timeIntervalUpdate: "VideoPlayer:timeIntervalUpdate"
    }
      , w = {
        playingInterval: 5,
        playbackPosition: 0,
        quartilePosition: -1
    }
      , S = function(t) {
        function e() {
            return l()(this, e),
            p()(this, f()(e).apply(this, arguments))
        }
        return g()(e, t),
        c()(e, [{
            key: "connectedCallback",
            value: function() {
                this.intervals = v({}, w)
            }
        }, {
            key: "init",
            value: function() {
                this.platform = this.getPlatformName()
            }
        }, {
            key: "onReady",
            value: function() {
                this.emit(b.ready)
            }
        }, {
            key: "onPlay",
            value: function() {
                this.emit(b.playing)
            }
        }, {
            key: "onTimeUpdate",
            value: function() {
                this.sendVideoPlaybackIntervalEvents(),
                this.emit(b.timeUpdate)
            }
        }, {
            key: "onMute",
            value: function() {
                this.emit(b.volumeChange)
            }
        }, {
            key: "onPause",
            value: function() {
                this.emit(b.pause)
            }
        }, {
            key: "onEnded",
            value: function() {
                this.intervals = v({}, w),
                this.emit(b.ended)
            }
        }, {
            key: "onError",
            value: function() {
                this.emit(b.error)
            }
        }, {
            key: "onVolumneChange",
            value: function() {
                this.emit(b.volumeChange)
            }
        }, {
            key: "play",
            value: function() {}
        }, {
            key: "pause",
            value: function() {}
        }, {
            key: "playPause",
            value: function() {
                this.getAttribute("data-playback-paused") ? this.play() : this.pause()
            }
        }, {
            key: "sendVideoPlaybackIntervalEvents",
            value: function() {
                if (this.duration && 0 !== this.duration) {
                    for (var t = this.currentTime / this.duration * 100; this.currentTime > this.intervals.playbackPosition + 2 * this.intervals.playingInterval; )
                        this.intervals.playbackPosition += this.intervals.playingInterval;
                    this.currentTime >= this.intervals.playbackPosition + this.intervals.playingInterval && (this.intervals.playbackPosition += this.intervals.playingInterval,
                    this.emit(b.timeIntervalUpdate));
                    var e = null;
                    if (t >= this.intervals.quartilePosition)
                        if (-1 === this.intervals.quartilePosition) {
                            if (t >= this.intervals.quartilePosition + 25)
                                for (this.intervals.quartilePosition = 0; t >= this.intervals.quartilePosition; )
                                    this.intervals.quartilePosition += 25
                        } else
                            e = this.intervals.quartilePosition,
                            this.intervals.quartilePosition += 25,
                            100 === this.intervals.quartilePosition && (this.intervals.quartilePosition = 95);
                    null !== e && (95 === e && (e = 100),
                    this.emit(b.quartileCompleted, {
                        quartile: e
                    }))
                }
            }
        }, {
            key: "getDisplayQuartile",
            value: function(t) {
                return -1 === t ? 0 : 50 === t ? 25 : 75 === t ? 50 : 95 === t ? 75 : 100
            }
        }, {
            key: "getCategory",
            value: function() {}
        }, {
            key: "getCredit",
            value: function() {}
        }, {
            key: "getDateline",
            value: function() {}
        }, {
            key: "getIsAutoPlay",
            value: function() {}
        }, {
            key: "getOwnerSite",
            value: function() {}
        }, {
            key: "getPlatformName",
            value: function() {}
        }, {
            key: "getPlayerHeight",
            value: function() {}
        }, {
            key: "getPlayerWidth",
            value: function() {}
        }, {
            key: "getPlayerResolution",
            value: function() {
                return this.getPlayerWidth() + " x " + this.getPlayerHeight()
            }
        }, {
            key: "getPlayListTagsosition",
            value: function(t) {
                for (var e = document.querySelector("[data-playlist]"), i = e.querySelectorAll(".PlaylistItem"), s = e.querySelector("[data-video-id='".concat(t, "']")), n = 0; n < i.length; n++)
                    if (s === i[n])
                        return n
            }
        }, {
            key: "getSource",
            value: function() {}
        }, {
            key: "getVideoFileType",
            value: function() {}
        }, {
            key: "getVideoStatus",
            value: function() {
                return this.getAttribute("data-playback-playing") ? "Playing" : this.getAttribute("data-playback-paused") ? "Paused" : this.getAttribute("data-playback-ended") ? "Ended" : null
            }
        }, {
            key: "getVideoUuid",
            value: function() {}
        }, {
            key: "getVolume",
            value: function() {}
        }, {
            key: "getStartVolume",
            value: function() {}
        }, {
            key: "onVideoFullscreen",
            value: function() {}
        }, {
            key: "onEnterFullScreen",
            value: function() {
                this.emit(b.enterFullscreen)
            }
        }, {
            key: "onExitFullscreen",
            value: function() {
                this.emit(b.exitFullscreen)
            }
        }, {
            key: "emit",
            value: function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , i = new window.CustomEvent(t,{
                    bubbles: !0,
                    detail: e
                });
                this.dispatchEvent(i)
            }
        }, {
            key: "videoId",
            get: function() {
                return this.getAttribute("video-id")
            }
        }, {
            key: "videoTitle",
            get: function() {
                return this.getAttribute("video-title")
            }
        }, {
            key: "playerId",
            get: function() {
                return this.getAttribute("player-id")
            }
        }, {
            key: "autoplay",
            get: function() {
                return this.hasAttribute("autoplay")
            }
        }, {
            key: "disableClickToPlay",
            get: function() {
                return this.hasAttribute("disable-click-to-play")
            }
        }, {
            key: "muted",
            get: function() {
                return this.hasAttribute("muted")
            }
        }, {
            key: "loop",
            get: function() {
                return this.hasAttribute("loop")
            }
        }, {
            key: "poster",
            get: function() {
                return this.getAttribute("poster")
            }
        }, {
            key: "video",
            get: function() {
                return {
                    id: this.videoId,
                    videoPlatform: this.platform,
                    seekSeconds: this.seekSeconds,
                    title: this.videoTitle,
                    inPlaylist: document.querySelector("bsp-playlist"),
                    playListTagsosition: n()(document.querySelectorAll("bsp-playlist-item")).findIndex((function(t) {
                        return t.isCurrent
                    }
                    )),
                    duration: this.duration,
                    playerWidth: this.getPlayerWidth(),
                    playerHeight: this.getPlayerHeight(),
                    playerResolution: this.getPlayerResolution(),
                    isAutoPlay: this.getIsAutoPlay(),
                    startVolume: this.getStartVolume(),
                    volume: this.getVolume(),
                    isFullscreen: this.onVideoFullscreen(),
                    videoUuid: this.getVideoUuid(),
                    videoFileType: this.getVideoFileType(),
                    videoInitiation: this.getAttribute("data-playback-started") || !1,
                    credit: this.getCredit(),
                    ownerSite: this.getOwnerSite(),
                    videoClassification: this.getCategory(),
                    source: this.getSource(),
                    location: this.getDateline(),
                    videoStatus: this.getVideoStatus(),
                    quartile: this.getDisplayQuartile(this.intervals.quartilePosition)
                }
            }
        }]),
        e
    }(window.HTMLElement)
}
, function(t, e, i) {
    !function(e) {
        var i, s, n = !1;
        function r(t) {
            if ("undefined" != typeof document && !n) {
                var e = document.documentElement;
                s = window.pageYOffset,
                document.documentElement.scrollHeight > window.innerHeight ? e.style.width = "calc(100% - " + function() {
                    if (void 0 !== i)
                        return i;
                    var t = document.documentElement
                      , e = document.createElement("div");
                    return e.setAttribute("style", "width:99px;height:99px;position:absolute;top:-9999px;overflow:scroll;"),
                    t.appendChild(e),
                    i = e.offsetWidth - e.clientWidth,
                    t.removeChild(e),
                    i
                }() + "px)" : e.style.width = "100%",
                e.style.position = "fixed",
                e.style.top = -s + "px",
                e.style.overflow = "hidden",
                n = !0
            }
        }
        function a() {
            if ("undefined" != typeof document && n) {
                var t = document.documentElement;
                t.style.width = "",
                t.style.position = "",
                t.style.top = "",
                t.style.overflow = "",
                window.scroll(0, s),
                n = !1
            }
        }
        var o = {
            on: r,
            off: a,
            toggle: function() {
                n ? a() : r()
            }
        };
        void 0 !== t.exports ? t.exports = o : e.noScroll = o
    }(this)
}
, function(t, e, i) {
    var s = i(38)
      , n = i(39)
      , r = i(40);
    t.exports = function(t) {
        return s(t) || n(t) || r()
    }
}
, function(t, e, i) {
    "use strict";
    var s = i(1)
      , n = i.n(s)
      , r = i(5)
      , a = i.n(r)
      , o = i(7)
      , l = i.n(o);
    function h(t, e, i, s, n) {
        return Array.isArray(s) || (s = []),
        s = s.slice(),
        i = "string" == typeof n ? function(t, e, i, s) {
            var n = "object" === l()(t) ? t : document.querySelector(t);
            return function(t) {
                for (var e = n.querySelectorAll(i), r = t.target, a = 0, o = e.length; a < o; a++)
                    for (var l = r, h = e[a]; l && l !== n; ) {
                        if (l === h)
                            return s.call(h, t);
                        l = l.parentNode
                    }
            }
        }(t, 0, n, i) : i,
        t.addEventListener(e, i),
        s.push({
            target: t,
            name: e,
            listener: i
        }),
        s
    }
    i.d(e, "a", (function() {
        return c
    }
    ));
    var c = function t() {
        var e = this;
        n()(this, t),
        a()(this, "addListener", (function(t, i, s, n) {
            e.list = h(t, i, s, e.list, n)
        }
        )),
        a()(this, "removeListeners", (function() {
            e.list.map((function(t) {
                t.target.removeEventListener(t.name, t.listener)
            }
            )),
            delete e.list
        }
        )),
        this.list = []
    }
}
, function(t, e, i) {
    "use strict";
    function s(t, e) {
        if (t <= 0)
            return e;
        var i, s, n = 0;
        return function() {
            if (s = arguments,
            !i) {
                var r = this
                  , a = +Date.now()
                  , o = t - a + n;
                o <= 0 ? (n = a,
                e.apply(r, s)) : i = setTimeout((function() {
                    n = a,
                    i = null,
                    e.apply(r, s)
                }
                ), o)
            }
        }
    }
    i.d(e, "a", (function() {
        return s
    }
    ))
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return S
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(8)
      , p = i.n(u)
      , d = i(4)
      , f = i.n(d)
      , m = i(5)
      , g = i.n(m)
      , y = i(12)
      , v = i(10)
      , b = i.n(v)
      , w = i(20)
      , S = function(t) {
        function e() {
            var t;
            return n()(this, e),
            (t = l()(this, c()(e).call(this))).tracker = new y.a,
            t.open = t.open.bind(p()(t)),
            t.close = t.close.bind(p()(t)),
            t._onClose = [],
            t
        }
        return f()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                this.tracker.addListener(this, e.events.open, this.open)
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                this.tracker.removeListeners()
            }
        }, {
            key: "open",
            value: function() {
                this.setAttribute(e.attributes.isOpen, !0),
                this.tracker.addListener(this, "click", this.close),
                b.a.on()
            }
        }, {
            key: "close",
            value: function(t) {
                t.target === this && (this.pauseChildPlayers(),
                this.removeAttribute(e.attributes.isOpen),
                b.a.off())
            }
        }, {
            key: "pauseChildPlayers",
            value: function() {
                try {
                    var t = Array.from(this.querySelectorAll(w.a.name));
                    t && t.map((function(t) {
                        return t.pause()
                    }
                    ))
                } catch (t) {
                    console.error("PsModal.close error: ", t)
                }
            }
        }]),
        e
    }(window.HTMLElement);
    g()(S, "name", "ps-modal"),
    g()(S, "attributes", {
        modalId: "data-modal-id",
        isOpen: "data-is-open"
    }),
    g()(S, "events", {
        open: "psmodal:open",
        close: "psmodal:close"
    })
}
, function(t, e) {
    var i;
    i = function() {
        return this
    }();
    try {
        i = i || Function("return this")() || (0,
        eval)("this")
    } catch (t) {
        "object" == typeof window && (i = window)
    }
    t.exports = i
}
, function(t, e, i) {
    !function(e) {
        "use strict";
        var s = i(42)
          , n = function(t, e, i) {
            var n, r, a, o, l = {}, h = 0, c = 0, u = {
                sensitivity: 7,
                interval: 100,
                timeout: 0
            };
            function p(e, i, s) {
                var l = function(t) {
                    n = t.clientX,
                    r = t.clientY
                };
                return c && (c = clearTimeout(c)),
                s ? (a = e.clientX,
                o = e.clientY,
                t.addEventListener("mousemove", l, !1),
                1 !== h && (c = setTimeout((function() {
                    !function t(e, i, s) {
                        c && (c = clearTimeout(c));
                        if (Math.abs(a - n) + Math.abs(o - r) < u.sensitivity)
                            return h = 1,
                            i.call(e, s);
                        a = n,
                        o = r,
                        c = setTimeout((function() {
                            t(e, i, s)
                        }
                        ), u.interval)
                    }(t, i, e)
                }
                ), u.interval))) : (t.removeEventListener("mousemove", l, !1),
                1 === h && (c = setTimeout((function() {
                    !function(t, e, i) {
                        c && (c = clearTimeout(c)),
                        h = 0,
                        e.call(t, i)
                    }(t, i, e)
                }
                ), u.timeout))),
                this
            }
            function d(t) {
                p(t, e, !0)
            }
            function f(t) {
                p(t, i)
            }
            return l.options = function(t) {
                u = s({}, u, t)
            }
            ,
            l.remove = function() {
                t && (t.removeEventListener("mouseover", d, !1),
                t.removeEventListener("mouseout", f, !1))
            }
            ,
            t && (t.addEventListener("mouseover", d, !1),
            t.addEventListener("mouseout", f, !1)),
            l
        };
        e.hoverintent = n,
        t.exports && (t.exports = n)
    }(this)
}
, function(t, e, i) {
    t.exports = i(43)
}
, function(t, e, i) {
    var s, n, r;
    /*!
 * Flickity hash v1.0.3
 * Enable hash navigation for Flickity
 */
    window,
    n = [i(51)],
    void 0 === (r = "function" == typeof (s = function(t) {
        "use strict";
        t.createMethods.push("_createHash");
        var e = t.prototype;
        e._createHash = function() {
            this.options.hash && (this.connectedHashLinks = [],
            this.onHashLinkClick = function(t) {
                t.preventDefault(),
                this.selectCell(t.currentTarget.hash),
                history.replaceState(null, "", t.currentTarget.hash)
            }
            .bind(this),
            this.on("activate", this.activateHash),
            this.on("deactivate", this.deactivateHash))
        }
        ,
        e.activateHash = function() {
            if (this.on("change", this.onChangeHash),
            void 0 === this.options.initialIndex && location.hash) {
                var t = this.queryCell(location.hash);
                t && (this.options.initialIndex = this.getCellSlideIndex(t))
            }
            this.connectHashLinks()
        }
        ,
        e.deactivateHash = function() {
            this.off("change", this.onChangeHash),
            this.disconnectHashLinks()
        }
        ,
        e.onChangeHash = function() {
            var t = this.selectedElement.id;
            if (t) {
                var e = "#" + t;
                history.replaceState(null, "", e)
            }
        }
        ,
        e.connectHashLinks = function() {
            for (var t = document.querySelectorAll("a"), e = 0; e < t.length; e++)
                this.connectHashLink(t[e])
        }
        ;
        var i = document.createElement("a");
        return e.connectHashLink = function(t) {
            t.hash && (i.href = t.href,
            i.pathname == location.pathname && this.queryCell(t.hash) && (t.addEventListener("click", this.onHashLinkClick),
            this.connectedHashLinks.push(t)))
        }
        ,
        e.disconnectHashLinks = function() {
            this.connectedHashLinks.forEach((function(t) {
                t.removeEventListener("click", this.onHashLinkClick)
            }
            ), this),
            this.connectedHashLinks = []
        }
        ,
        t
    }
    ) ? s.apply(e, n) : s) || (t.exports = r)
}
, function(t, e, i) {
    var s, n;
    !function(r, a) {
        s = [i(52)],
        void 0 === (n = function(t) {
            return function(t, e) {
                "use strict";
                var i = {
                    extend: function(t, e) {
                        for (var i in e)
                            t[i] = e[i];
                        return t
                    },
                    modulo: function(t, e) {
                        return (t % e + e) % e
                    }
                }
                  , s = Array.prototype.slice;
                i.makeArray = function(t) {
                    return Array.isArray(t) ? t : null == t ? [] : "object" == typeof t && "number" == typeof t.length ? s.call(t) : [t]
                }
                ,
                i.removeFrom = function(t, e) {
                    var i = t.indexOf(e);
                    -1 != i && t.splice(i, 1)
                }
                ,
                i.getParent = function(t, i) {
                    for (; t.parentNode && t != document.body; )
                        if (t = t.parentNode,
                        e(t, i))
                            return t
                }
                ,
                i.getQueryElement = function(t) {
                    return "string" == typeof t ? document.querySelector(t) : t
                }
                ,
                i.handleEvent = function(t) {
                    var e = "on" + t.type;
                    this[e] && this[e](t)
                }
                ,
                i.filterFindElements = function(t, s) {
                    t = i.makeArray(t);
                    var n = [];
                    return t.forEach((function(t) {
                        if (t instanceof HTMLElement)
                            if (s) {
                                e(t, s) && n.push(t);
                                for (var i = t.querySelectorAll(s), r = 0; r < i.length; r++)
                                    n.push(i[r])
                            } else
                                n.push(t)
                    }
                    )),
                    n
                }
                ,
                i.debounceMethod = function(t, e, i) {
                    i = i || 100;
                    var s = t.prototype[e]
                      , n = e + "Timeout";
                    t.prototype[e] = function() {
                        var t = this[n];
                        clearTimeout(t);
                        var e = arguments
                          , r = this;
                        this[n] = setTimeout((function() {
                            s.apply(r, e),
                            delete r[n]
                        }
                        ), i)
                    }
                }
                ,
                i.docReady = function(t) {
                    var e = document.readyState;
                    "complete" == e || "interactive" == e ? setTimeout(t) : document.addEventListener("DOMContentLoaded", t)
                }
                ,
                i.toDashed = function(t) {
                    return t.replace(/(.)([A-Z])/g, (function(t, e, i) {
                        return e + "-" + i
                    }
                    )).toLowerCase()
                }
                ;
                var n = t.console;
                return i.htmlInit = function(e, s) {
                    i.docReady((function() {
                        var r = i.toDashed(s)
                          , a = "data-" + r
                          , o = document.querySelectorAll("[" + a + "]")
                          , l = document.querySelectorAll(".js-" + r)
                          , h = i.makeArray(o).concat(i.makeArray(l))
                          , c = a + "-options"
                          , u = t.jQuery;
                        h.forEach((function(t) {
                            var i, r = t.getAttribute(a) || t.getAttribute(c);
                            try {
                                i = r && JSON.parse(r)
                            } catch (e) {
                                return void (n && n.error("Error parsing " + a + " on " + t.className + ": " + e))
                            }
                            var o = new e(t,i);
                            u && u.data(t, s, o)
                        }
                        ))
                    }
                    ))
                }
                ,
                i
            }(r, t)
        }
        .apply(e, s)) || (t.exports = n)
    }(window)
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return y
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(6)
      , p = i.n(u)
      , d = i(4)
      , f = i.n(d)
      , m = i(5)
      , g = i.n(m)
      , y = function(t) {
        function e() {
            var t;
            return n()(this, e),
            (t = l()(this, c()(e).call(this))).playing = !1,
            t.player = null,
            t.selectors = {
                targetId: "YouTubeVideoPlayer-%id%"
            },
            t
        }
        return f()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                p()(c()(e.prototype), "init", this).call(this),
                this.init()
            }
        }, {
            key: "init",
            value: function() {
                this.stateChangeHandlers = {
                    0: this.onPlayerEnd.bind(this),
                    1: this.onPlayerPlaying.bind(this),
                    2: this.onPlayerPaused.bind(this)
                },
                this.videoId = this.getAttribute("data-video-id"),
                window.YouTubeAPIReady ? this.initPlayer() : (window.loadingYTPlayers ? window.loadingYTPlayers.push(this) : window.loadingYTPlayers = [this],
                window.onYouTubeIframeAPIReady || (window.onYouTubeIframeAPIReady = function() {
                    window.YouTubeAPIReady = !0,
                    window.loadingYTPlayers.forEach((function(t) {
                        return t.initPlayer()
                    }
                    )),
                    window.loadingYTPlayers = []
                }
                ,
                this.loadYouTubeApi()))
            }
        }, {
            key: "initPlayer",
            value: function() {
                var t = this.selectors.targetId.replace("%id%", this.playerId);
                this.player = new window.YT.Player(t,{
                    videoId: this.videoId,
                    events: {
                        onStateChange: this.onStateChange.bind(this)
                    }
                }),
                this.setupTimeTracking(),
                p()(c()(e.prototype), "onVideoReady", this).call(this)
            }
        }, {
            key: "getVideoDuration",
            value: function() {
                return void 0 === this.player.getDuration ? 0 : this.player.getDuration()
            }
        }, {
            key: "loadYouTubeApi",
            value: function() {
                var t = document.createElement("script");
                t.src = "https://www.youtube.com/iframe_api";
                var e = document.getElementsByTagName("script")[0];
                e.parentNode.insertBefore(t, e)
            }
        }, {
            key: "onStateChange",
            value: function(t) {
                var e = t.data;
                this.stateChangeHandlers[e] && this.stateChangeHandlers[e]()
            }
        }, {
            key: "onPlayerPlaying",
            value: function(t) {
                this.playing ? p()(c()(e.prototype), "onVideoPlay", this).call(this, t) : (this.playing = !0,
                p()(c()(e.prototype), "onVideoStart", this).call(this, t))
            }
        }, {
            key: "onPlayerPaused",
            value: function(t) {
                p()(c()(e.prototype), "onVideoPause", this).call(this, t)
            }
        }, {
            key: "onPlayerEnd",
            value: function(t) {
                this.playing = !1,
                p()(c()(e.prototype), "onVideoEnd", this).call(this, t)
            }
        }, {
            key: "setupTimeTracking",
            value: function() {
                var t = this;
                window.setInterval((function() {
                    t.getAttribute("data-playback-playing") && p()(c()(e.prototype), "onVideoTimeUpdate", t).call(t, {
                        secondsElapsed: t.player.getCurrentTime()
                    })
                }
                ), 1e3)
            }
        }, {
            key: "play",
            value: function() {
                this.player.playVideo()
            }
        }, {
            key: "pause",
            value: function() {
                this.player.pauseVideo()
            }
        }, {
            key: "getPlatformName",
            value: function() {
                return "youtube"
            }
        }]),
        e
    }(i(9).a);
    g()(y, "name", "ps-youtubeplayer")
}
, function(t, e, i) {
    var s, n;
    !function(r, a) {
        s = [i(35), i(44), i(19), i(53), i(54), i(55)],
        void 0 === (n = function(t, e, i, s, n, a) {
            return function(t, e, i, s, n, r, a) {
                "use strict";
                var o = t.jQuery
                  , l = t.getComputedStyle
                  , h = t.console;
                function c(t, e) {
                    for (t = s.makeArray(t); t.length; )
                        e.appendChild(t.shift())
                }
                var u = 0
                  , p = {};
                function d(t, e) {
                    var i = s.getQueryElement(t);
                    if (i) {
                        if (this.element = i,
                        this.element.flickityGUID) {
                            var n = p[this.element.flickityGUID];
                            return n.option(e),
                            n
                        }
                        o && (this.$element = o(this.element)),
                        this.options = s.extend({}, this.constructor.defaults),
                        this.option(e),
                        this._create()
                    } else
                        h && h.error("Bad element for Flickity: " + (i || t))
                }
                d.defaults = {
                    accessibility: !0,
                    cellAlign: "center",
                    freeScrollFriction: .075,
                    friction: .28,
                    namespaceJQueryEvents: !0,
                    percentPosition: !0,
                    resize: !0,
                    selectedAttraction: .025,
                    setGallerySize: !0
                },
                d.createMethods = [];
                var f = d.prototype;
                s.extend(f, e.prototype),
                f._create = function() {
                    var e = this.guid = ++u;
                    for (var i in this.element.flickityGUID = e,
                    p[e] = this,
                    this.selectedIndex = 0,
                    this.restingFrames = 0,
                    this.x = 0,
                    this.velocity = 0,
                    this.originSide = this.options.rightToLeft ? "right" : "left",
                    this.viewport = document.createElement("div"),
                    this.viewport.className = "flickity-viewport",
                    this._createSlider(),
                    (this.options.resize || this.options.watchCSS) && t.addEventListener("resize", this),
                    this.options.on) {
                        var s = this.options.on[i];
                        this.on(i, s)
                    }
                    d.createMethods.forEach((function(t) {
                        this[t]()
                    }
                    ), this),
                    this.options.watchCSS ? this.watchCSS() : this.activate()
                }
                ,
                f.option = function(t) {
                    s.extend(this.options, t)
                }
                ,
                f.activate = function() {
                    this.isActive || (this.isActive = !0,
                    this.element.classList.add("flickity-enabled"),
                    this.options.rightToLeft && this.element.classList.add("flickity-rtl"),
                    this.getSize(),
                    c(this._filterFindCellElements(this.element.children), this.slider),
                    this.viewport.appendChild(this.slider),
                    this.element.appendChild(this.viewport),
                    this.reloadCells(),
                    this.options.accessibility && (this.element.tabIndex = 0,
                    this.element.addEventListener("keydown", this)),
                    this.emitEvent("activate"),
                    this.selectInitialIndex(),
                    this.isInitActivated = !0,
                    this.dispatchEvent("ready"))
                }
                ,
                f._createSlider = function() {
                    var t = document.createElement("div");
                    t.className = "flickity-slider",
                    t.style[this.originSide] = 0,
                    this.slider = t
                }
                ,
                f._filterFindCellElements = function(t) {
                    return s.filterFindElements(t, this.options.cellSelector)
                }
                ,
                f.reloadCells = function() {
                    this.cells = this._makeCells(this.slider.children),
                    this.positionCells(),
                    this._getWrapShiftCells(),
                    this.setGallerySize()
                }
                ,
                f._makeCells = function(t) {
                    return this._filterFindCellElements(t).map((function(t) {
                        return new n(t,this)
                    }
                    ), this)
                }
                ,
                f.getLastCell = function() {
                    return this.cells[this.cells.length - 1]
                }
                ,
                f.getLastSlide = function() {
                    return this.slides[this.slides.length - 1]
                }
                ,
                f.positionCells = function() {
                    this._sizeCells(this.cells),
                    this._positionCells(0)
                }
                ,
                f._positionCells = function(t) {
                    t = t || 0,
                    this.maxCellHeight = t && this.maxCellHeight || 0;
                    var e = 0;
                    if (t > 0) {
                        var i = this.cells[t - 1];
                        e = i.x + i.size.outerWidth
                    }
                    for (var s = this.cells.length, n = t; n < s; n++) {
                        var r = this.cells[n];
                        r.setPosition(e),
                        e += r.size.outerWidth,
                        this.maxCellHeight = Math.max(r.size.outerHeight, this.maxCellHeight)
                    }
                    this.slideableWidth = e,
                    this.updateSlides(),
                    this._containSlides(),
                    this.slidesWidth = s ? this.getLastSlide().target - this.slides[0].target : 0
                }
                ,
                f._sizeCells = function(t) {
                    t.forEach((function(t) {
                        t.getSize()
                    }
                    ))
                }
                ,
                f.updateSlides = function() {
                    if (this.slides = [],
                    this.cells.length) {
                        var t = new r(this);
                        this.slides.push(t);
                        var e = "left" == this.originSide ? "marginRight" : "marginLeft"
                          , i = this._getCanCellFit();
                        this.cells.forEach((function(s, n) {
                            if (t.cells.length) {
                                var a = t.outerWidth - t.firstMargin + (s.size.outerWidth - s.size[e]);
                                i.call(this, n, a) || (t.updateTarget(),
                                t = new r(this),
                                this.slides.push(t)),
                                t.addCell(s)
                            } else
                                t.addCell(s)
                        }
                        ), this),
                        t.updateTarget(),
                        this.updateSelectedSlide()
                    }
                }
                ,
                f._getCanCellFit = function() {
                    var t = this.options.groupCells;
                    if (!t)
                        return function() {
                            return !1
                        }
                        ;
                    if ("number" == typeof t) {
                        var e = parseInt(t, 10);
                        return function(t) {
                            return t % e != 0
                        }
                    }
                    var i = "string" == typeof t && t.match(/^(\d+)%$/)
                      , s = i ? parseInt(i[1], 10) / 100 : 1;
                    return function(t, e) {
                        return e <= (this.size.innerWidth + 1) * s
                    }
                }
                ,
                f._init = f.reposition = function() {
                    this.positionCells(),
                    this.positionSliderAtSelected()
                }
                ,
                f.getSize = function() {
                    this.size = i(this.element),
                    this.setCellAlign(),
                    this.cursorPosition = this.size.innerWidth * this.cellAlign
                }
                ;
                var m = {
                    center: {
                        left: .5,
                        right: .5
                    },
                    left: {
                        left: 0,
                        right: 1
                    },
                    right: {
                        right: 0,
                        left: 1
                    }
                };
                f.setCellAlign = function() {
                    var t = m[this.options.cellAlign];
                    this.cellAlign = t ? t[this.originSide] : this.options.cellAlign
                }
                ,
                f.setGallerySize = function() {
                    if (this.options.setGallerySize) {
                        var t = this.options.adaptiveHeight && this.selectedSlide ? this.selectedSlide.height : this.maxCellHeight;
                        this.viewport.style.height = t + "px"
                    }
                }
                ,
                f._getWrapShiftCells = function() {
                    if (this.options.wrapAround) {
                        this._unshiftCells(this.beforeShiftCells),
                        this._unshiftCells(this.afterShiftCells);
                        var t = this.cursorPosition
                          , e = this.cells.length - 1;
                        this.beforeShiftCells = this._getGapCells(t, e, -1),
                        t = this.size.innerWidth - this.cursorPosition,
                        this.afterShiftCells = this._getGapCells(t, 0, 1)
                    }
                }
                ,
                f._getGapCells = function(t, e, i) {
                    for (var s = []; t > 0; ) {
                        var n = this.cells[e];
                        if (!n)
                            break;
                        s.push(n),
                        e += i,
                        t -= n.size.outerWidth
                    }
                    return s
                }
                ,
                f._containSlides = function() {
                    if (this.options.contain && !this.options.wrapAround && this.cells.length) {
                        var t = this.options.rightToLeft
                          , e = t ? "marginRight" : "marginLeft"
                          , i = t ? "marginLeft" : "marginRight"
                          , s = this.slideableWidth - this.getLastCell().size[i]
                          , n = s < this.size.innerWidth
                          , r = this.cursorPosition + this.cells[0].size[e]
                          , a = s - this.size.innerWidth * (1 - this.cellAlign);
                        this.slides.forEach((function(t) {
                            n ? t.target = s * this.cellAlign : (t.target = Math.max(t.target, r),
                            t.target = Math.min(t.target, a))
                        }
                        ), this)
                    }
                }
                ,
                f.dispatchEvent = function(t, e, i) {
                    var s = e ? [e].concat(i) : i;
                    if (this.emitEvent(t, s),
                    o && this.$element) {
                        var n = t += this.options.namespaceJQueryEvents ? ".flickity" : "";
                        if (e) {
                            var r = o.Event(e);
                            r.type = t,
                            n = r
                        }
                        this.$element.trigger(n, i)
                    }
                }
                ,
                f.select = function(t, e, i) {
                    if (this.isActive && (t = parseInt(t, 10),
                    this._wrapSelect(t),
                    (this.options.wrapAround || e) && (t = s.modulo(t, this.slides.length)),
                    this.slides[t])) {
                        var n = this.selectedIndex;
                        this.selectedIndex = t,
                        this.updateSelectedSlide(),
                        i ? this.positionSliderAtSelected() : this.startAnimation(),
                        this.options.adaptiveHeight && this.setGallerySize(),
                        this.dispatchEvent("select", null, [t]),
                        t != n && this.dispatchEvent("change", null, [t]),
                        this.dispatchEvent("cellSelect")
                    }
                }
                ,
                f._wrapSelect = function(t) {
                    var e = this.slides.length;
                    if (!(this.options.wrapAround && e > 1))
                        return t;
                    var i = s.modulo(t, e)
                      , n = Math.abs(i - this.selectedIndex)
                      , r = Math.abs(i + e - this.selectedIndex)
                      , a = Math.abs(i - e - this.selectedIndex);
                    !this.isDragSelect && r < n ? t += e : !this.isDragSelect && a < n && (t -= e),
                    t < 0 ? this.x -= this.slideableWidth : t >= e && (this.x += this.slideableWidth)
                }
                ,
                f.previous = function(t, e) {
                    this.select(this.selectedIndex - 1, t, e)
                }
                ,
                f.next = function(t, e) {
                    this.select(this.selectedIndex + 1, t, e)
                }
                ,
                f.updateSelectedSlide = function() {
                    var t = this.slides[this.selectedIndex];
                    t && (this.unselectSelectedSlide(),
                    this.selectedSlide = t,
                    t.select(),
                    this.selectedCells = t.cells,
                    this.selectedElements = t.getCellElements(),
                    this.selectedCell = t.cells[0],
                    this.selectedElement = this.selectedElements[0])
                }
                ,
                f.unselectSelectedSlide = function() {
                    this.selectedSlide && this.selectedSlide.unselect()
                }
                ,
                f.selectInitialIndex = function() {
                    var t = this.options.initialIndex;
                    if (this.isInitActivated)
                        this.select(this.selectedIndex, !1, !0);
                    else {
                        if (t && "string" == typeof t)
                            if (this.queryCell(t))
                                return void this.selectCell(t, !1, !0);
                        var e = 0;
                        t && this.slides[t] && (e = t),
                        this.select(e, !1, !0)
                    }
                }
                ,
                f.selectCell = function(t, e, i) {
                    var s = this.queryCell(t);
                    if (s) {
                        var n = this.getCellSlideIndex(s);
                        this.select(n, e, i)
                    }
                }
                ,
                f.getCellSlideIndex = function(t) {
                    for (var e = 0; e < this.slides.length; e++) {
                        if (-1 != this.slides[e].cells.indexOf(t))
                            return e
                    }
                }
                ,
                f.getCell = function(t) {
                    for (var e = 0; e < this.cells.length; e++) {
                        var i = this.cells[e];
                        if (i.element == t)
                            return i
                    }
                }
                ,
                f.getCells = function(t) {
                    t = s.makeArray(t);
                    var e = [];
                    return t.forEach((function(t) {
                        var i = this.getCell(t);
                        i && e.push(i)
                    }
                    ), this),
                    e
                }
                ,
                f.getCellElements = function() {
                    return this.cells.map((function(t) {
                        return t.element
                    }
                    ))
                }
                ,
                f.getParentCell = function(t) {
                    var e = this.getCell(t);
                    return e || (t = s.getParent(t, ".flickity-slider > *"),
                    this.getCell(t))
                }
                ,
                f.getAdjacentCellElements = function(t, e) {
                    if (!t)
                        return this.selectedSlide.getCellElements();
                    e = void 0 === e ? this.selectedIndex : e;
                    var i = this.slides.length;
                    if (1 + 2 * t >= i)
                        return this.getCellElements();
                    for (var n = [], r = e - t; r <= e + t; r++) {
                        var a = this.options.wrapAround ? s.modulo(r, i) : r
                          , o = this.slides[a];
                        o && (n = n.concat(o.getCellElements()))
                    }
                    return n
                }
                ,
                f.queryCell = function(t) {
                    if ("number" == typeof t)
                        return this.cells[t];
                    if ("string" == typeof t) {
                        if (t.match(/^[#\.]?[\d\/]/))
                            return;
                        t = this.element.querySelector(t)
                    }
                    return this.getCell(t)
                }
                ,
                f.uiChange = function() {
                    this.emitEvent("uiChange")
                }
                ,
                f.childUIPointerDown = function(t) {
                    "touchstart" != t.type && t.preventDefault(),
                    this.focus()
                }
                ,
                f.onresize = function() {
                    this.watchCSS(),
                    this.resize()
                }
                ,
                s.debounceMethod(d, "onresize", 150),
                f.resize = function() {
                    if (this.isActive) {
                        this.getSize(),
                        this.options.wrapAround && (this.x = s.modulo(this.x, this.slideableWidth)),
                        this.positionCells(),
                        this._getWrapShiftCells(),
                        this.setGallerySize(),
                        this.emitEvent("resize");
                        var t = this.selectedElements && this.selectedElements[0];
                        this.selectCell(t, !1, !0)
                    }
                }
                ,
                f.watchCSS = function() {
                    this.options.watchCSS && (-1 != l(this.element, ":after").content.indexOf("flickity") ? this.activate() : this.deactivate())
                }
                ,
                f.onkeydown = function(t) {
                    var e = document.activeElement && document.activeElement != this.element;
                    if (this.options.accessibility && !e) {
                        var i = d.keyboardHandlers[t.keyCode];
                        i && i.call(this)
                    }
                }
                ,
                d.keyboardHandlers = {
                    37: function() {
                        var t = this.options.rightToLeft ? "next" : "previous";
                        this.uiChange(),
                        this[t]()
                    },
                    39: function() {
                        var t = this.options.rightToLeft ? "previous" : "next";
                        this.uiChange(),
                        this[t]()
                    }
                },
                f.focus = function() {
                    var e = t.pageYOffset;
                    this.element.focus({
                        preventScroll: !0
                    }),
                    t.pageYOffset != e && t.scrollTo(t.pageXOffset, e)
                }
                ,
                f.deactivate = function() {
                    this.isActive && (this.element.classList.remove("flickity-enabled"),
                    this.element.classList.remove("flickity-rtl"),
                    this.unselectSelectedSlide(),
                    this.cells.forEach((function(t) {
                        t.destroy()
                    }
                    )),
                    this.element.removeChild(this.viewport),
                    c(this.slider.children, this.element),
                    this.options.accessibility && (this.element.removeAttribute("tabIndex"),
                    this.element.removeEventListener("keydown", this)),
                    this.isActive = !1,
                    this.emitEvent("deactivate"))
                }
                ,
                f.destroy = function() {
                    this.deactivate(),
                    t.removeEventListener("resize", this),
                    this.allOff(),
                    this.emitEvent("destroy"),
                    o && this.$element && o.removeData(this.element, "flickity"),
                    delete this.element.flickityGUID,
                    delete p[this.guid]
                }
                ,
                s.extend(f, a),
                d.data = function(t) {
                    var e = (t = s.getQueryElement(t)) && t.flickityGUID;
                    return e && p[e]
                }
                ,
                s.htmlInit(d, "flickity"),
                o && o.bridget && o.bridget("flickity", d);
                return d.setJQuery = function(t) {
                    o = t
                }
                ,
                d.Cell = n,
                d.Slide = r,
                d
            }(r, t, e, i, s, n, a)
        }
        .apply(e, s)) || (t.exports = n)
    }(window)
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return b
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(8)
      , p = i.n(u)
      , d = i(4)
      , f = i.n(d)
      , m = i(5)
      , g = i.n(m)
      , y = i(12)
      , v = i(14)
      , b = function(t) {
        function e() {
            var t;
            return n()(this, e),
            (t = l()(this, c()(e).call(this))).tracker = new y.a,
            t.openModal = t.openModal.bind(p()(t)),
            t
        }
        return f()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                this.triggerId = this.getAttribute(e.attributes.triggerId),
                this.modals = Array.from(document.querySelectorAll("[".concat(v.a.attributes.modalId, "='").concat(this.triggerId, "']"))),
                this.tracker.addListener(this, "click", this.openModal)
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                this.tracker.removeListeners()
            }
        }, {
            key: "openModal",
            value: function(t) {
                t.preventDefault(),
                this.modals.map((function(t) {
                    return t.dispatchEvent(new window.Event(v.a.events.open))
                }
                ))
            }
        }]),
        e
    }(window.HTMLElement);
    g()(b, "name", "ps-modal-trigger"),
    g()(b, "attributes", {
        triggerId: "data-trigger-id"
    })
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return E
    }
    ));
    var s = i(17)
      , n = i.n(s)
      , r = i(24)
      , a = i.n(r)
      , o = i(1)
      , l = i.n(o)
      , h = i(2)
      , c = i.n(h)
      , u = i(3)
      , p = i.n(u)
      , d = i(0)
      , f = i.n(d)
      , m = i(8)
      , g = i.n(m)
      , y = i(4)
      , v = i.n(y)
      , b = i(5)
      , w = i.n(b)
      , S = i(12)
      , E = function(t) {
        function e() {
            var t, i;
            l()(this, e);
            for (var s = arguments.length, n = new Array(s), r = 0; r < s; r++)
                n[r] = arguments[r];
            return i = p()(this, (t = f()(e)).call.apply(t, [this].concat(n))),
            w()(g()(i), "typeaheadHandler", (function(t) {
                var s = t.target && t.target.value;
                return i.timer && clearTimeout(i.timer),
                !s || !s.length || s.length < 1 ? (i.clearSearchButtonVisibility = !1,
                null) : (i.clearSearchButtonVisibility = !0,
                s.length < 2 ? null : void (i.timer = setTimeout((function() {
                    i.search(s).catch(e.warn)
                }
                ), i.searchInterval)))
            }
            )),
            w()(g()(i), "submitHandler", (function(t) {
                t.preventDefault();
                var s = i.query;
                if (!s)
                    return i.resultsContainer.innerHTML = "",
                    i.setAttribute("data-has-results", "false"),
                    null;
                i.clearSearchButtonVisibility = !0,
                i.search(s).catch(e.warn)
            }
            )),
            w()(g()(i), "clearSearch", (function(t) {
                t.preventDefault(),
                i.input && (i.input.value = ""),
                i.clearSearchButtonVisibility = !1,
                i.resultsContainer.innerHTML = "",
                i.setAttribute("data-has-results", "false"),
                i.input.focus()
            }
            )),
            i
        }
        var i, s;
        return v()(e, t),
        c()(e, [{
            key: "connectedCallback",
            value: function() {
                this.tracker = new S.a,
                this.searchpageLinkTemplate = this.searchpageLink.innerHTML,
                this.tracker.addListener(this.clearSearchButton, "click", this.clearSearch),
                this.tracker.addListener(this, "submit", this.submitHandler, "[".concat(e.selectors.form, "]")),
                this.tracker.addListener(this, "keyup", this.typeaheadHandler, "[".concat(e.selectors.input, "]"))
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                this.tracker.removeListeners()
            }
        }, {
            key: "search",
            value: (s = a()(n.a.mark((function t(i) {
                var s, r, a;
                return n.a.wrap((function(t) {
                    for (; ; )
                        switch (t.prev = t.next) {
                        case 0:
                            if (s = String(i).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;"),
                            this.action && this.form) {
                                t.next = 4;
                                break
                            }
                            return e.warn("form action URL required."),
                            t.abrupt("return", null);
                        case 4:
                            return r = new window.URLSearchParams(new window.FormData(this.form)).toString(),
                            t.next = 7,
                            window.fetch("".concat(this.action, "?").concat(r), {
                                credentials: "include"
                            });
                        case 7:
                            return a = t.sent,
                            t.next = 10,
                            this.processResponse(a, s);
                        case 10:
                        case "end":
                            return t.stop()
                        }
                }
                ), t, this)
            }
            ))),
            function(t) {
                return s.apply(this, arguments)
            }
            )
        }, {
            key: "processResponse",
            value: (i = a()(n.a.mark((function t(i, s) {
                var r, a;
                return n.a.wrap((function(t) {
                    for (; ; )
                        switch (t.prev = t.next) {
                        case 0:
                            return e.checkStatus(i),
                            t.next = 3,
                            i.text();
                        case 3:
                            r = t.sent,
                            (a = this.parseResults(r)) ? (this.resultsContainer.innerHTML = Object.keys(a).map((function(t) {
                                return e.generateCategoryTemplate(t, a[t])
                            }
                            )).join(""),
                            this.searchpageLink = s,
                            this.setAttribute("data-has-results", "true")) : (this.resultsContainer.innerHTML = e.generateNoResults(s),
                            this.setAttribute("data-has-results", "false"));
                        case 6:
                        case "end":
                            return t.stop()
                        }
                }
                ), t, this)
            }
            ))),
            function(t, e) {
                return i.apply(this, arguments)
            }
            )
        }, {
            key: "parseResults",
            value: function(t) {
                var e = document.createElement("div");
                e.innerHTML = t;
                var i = e.querySelector(".SearchResultsModule-results");
                if (!i)
                    return null;
                var s = i.querySelectorAll(".SearchResultsModule-results-item");
                if (s.length < 1)
                    return null;
                var n = {};
                return s.forEach((function(t) {
                    var e = t.querySelector("[data-results-promo]")
                      , i = e && e.getAttribute("data-category") || "Other";
                    n[i] || (n[i] = []),
                    e.setAttribute("data-dark-background", ""),
                    n[i].push(e)
                }
                )),
                n
            }
        }, {
            key: "searchInterval",
            get: function() {
                var t = this.getAttribute(e.selectors.searchInterval);
                return t && Number.isSafeInteger(Number(t)) ? Number(t) : 200
            }
        }, {
            key: "query",
            get: function() {
                return this.input ? this.input.value : (e.warn("there needs to be an input present as a child of this element."),
                "")
            }
        }, {
            key: "input",
            get: function() {
                return this.querySelector("[".concat(e.selectors.input, "]"))
            }
        }, {
            key: "form",
            get: function() {
                return this.querySelector("[".concat(e.selectors.form, "]"))
            }
        }, {
            key: "action",
            get: function() {
                return this.form ? this.form.action && this.form.action.split("#")[0] : null
            }
        }, {
            key: "resultsContainer",
            get: function() {
                return this.querySelector("[".concat(e.selectors.resultsContainer, "]"))
            }
        }, {
            key: "searchpageLink",
            get: function() {
                return this.querySelector("[".concat(e.selectors.searchpageLink, "]"))
            },
            set: function(t) {
                var e = new window.URLSearchParams(new window.FormData(this.form)).toString();
                this.searchpageLink && (this.searchpageLink.setAttribute("href", "".concat(this.action, "?").concat(e)),
                this.searchpageLink.innerHTML = this.searchpageLinkTemplate.replace("{queryText}", t))
            }
        }, {
            key: "clearSearchButton",
            get: function() {
                return this.querySelector("[".concat(e.selectors.clearSearchButton, "]"))
            }
        }, {
            key: "clearSearchButtonVisibility",
            set: function(t) {
                if (!this.clearSearchButton)
                    return null;
                t ? this.clearSearchButton.setAttribute("data-visible", "true") : this.clearSearchButton.removeAttribute("data-visible")
            }
        }], [{
            key: "warn",
            value: function(t) {
                console.warn("Custom Element Warning (<".concat(e.name, "/>): ").concat(t))
            }
        }, {
            key: "checkStatus",
            value: function(t) {
                if (200 !== t.status)
                    throw new Error("response received not successful: ".concat(t.status))
            }
        }, {
            key: "generateNoResults",
            value: function(t) {
                return '\n      <div class="Page-header-search-results-section">\n        <div class="Page-header-search-results-noResults">\n          <h3>We couldn\'t find any results for "'.concat(t, '"<h3>\n          <p class="Page-header-search-results-suggestions">\n            Check your spelling<br/>\n            Try different word meaning the same thing<br/>\n            Try less specific words\n          </p>\n        </div>\n      </div>\n    ')
            }
        }, {
            key: "generateCategoryTemplate",
            value: function(t, e) {
                return '\n      <div class="Page-header-search-results-section">\n        <div class="Page-header-search-results-category">\n          <span>'.concat(t, '</span>\n        </div>\n        <div class="Page-header-search-results-list">\n          ').concat(e.map((function(t) {
                    return '<div class="Page-header-search-results-result">'.concat(t.outerHTML, "</div>")
                }
                )).join(""), "\n        </div>\n      </div>\n    ")
            }
        }]),
        e
    }(window.HTMLElement);
    w()(E, "name", "ps-typeahead"),
    w()(E, "selectors", {
        resultsContainer: "data-typeahead-results",
        input: "data-typeahead-input",
        form: "data-typeahead-form",
        submit: "data-typeahead-submit",
        searchInterval: "data-search-interval",
        searchpageLink: "data-searchpage-link",
        clearSearchButton: "data-typeahead-clear"
    })
}
, function(t, e) {
    function i(t, e, i, s, n, r, a) {
        try {
            var o = t[r](a)
              , l = o.value
        } catch (t) {
            return void i(t)
        }
        o.done ? e(l) : Promise.resolve(l).then(s, n)
    }
    t.exports = function(t) {
        return function() {
            var e = this
              , s = arguments;
            return new Promise((function(n, r) {
                var a = t.apply(e, s);
                function o(t) {
                    i(a, n, r, o, l, "next", t)
                }
                function l(t) {
                    i(a, n, r, o, l, "throw", t)
                }
                o(void 0)
            }
            ))
        }
    }
}
, function(t, e) {
    function i(e, s) {
        return t.exports = i = Object.setPrototypeOf || function(t, e) {
            return t.__proto__ = e,
            t
        }
        ,
        i(e, s)
    }
    t.exports = i
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return d
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(4)
      , p = i.n(u)
      , d = function(t) {
        function e() {
            return n()(this, e),
            l()(this, c()(e).apply(this, arguments))
        }
        return p()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                this.closeButton = this.querySelector("[data-toggle-trigger]"),
                this.checkSessionStorage()
            }
        }, {
            key: "checkSessionStorage",
            value: function() {
                var t = this;
                "noShow" !== window.sessionStorage.getItem("bannerStatus") && (this.setAttribute("data-show", ""),
                this.closeButton.addEventListener("click", (function() {
                    t.removeAttribute("data-show"),
                    window.sessionStorage.setItem("bannerStatus", "noShow")
                }
                )))
            }
        }]),
        e
    }(window.HTMLElement)
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return d
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(4)
      , p = i.n(u)
      , d = function(t) {
        function e() {
            return n()(this, e),
            l()(this, c()(e).apply(this, arguments))
        }
        return p()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                var t = this;
                this.closeButton = this.querySelector("[data-toggle-trigger]"),
                document.onreadystatechange = function() {
                    "complete" === document.readyState && t.checkSessionStorage()
                }
            }
        }, {
            key: "checkSessionStorage",
            value: function() {
                var t = this;
                "noShow" !== window.sessionStorage.getItem("bannerStatus") && (this.setAttribute("data-show", ""),
                this.closeButton.addEventListener("click", (function() {
                    t.removeAttribute("data-show"),
                    window.sessionStorage.setItem("bannerStatus", "noShow")
                }
                )))
            }
        }]),
        e
    }(window.HTMLElement)
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return v
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(4)
      , p = i.n(u)
      , d = i(16)
      , f = i.n(d)
      , m = i(13)
      , g = i(10)
      , y = i.n(g)
      , v = function(t) {
        function e() {
            return n()(this, e),
            l()(this, c()(e).apply(this, arguments))
        }
        return p()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                this.cacheElements(),
                this.handleEventListeners(),
                this.dealWithMenuHover(),
                this.signInTrigger && this.signInEvents(),
                "mq-lg" !== this.getMediaQuery() && "mq-hk" !== this.getMediaQuery() && "mq-xl" !== this.getMediaQuery() || this.checkClickTarget(),
                this.checkForHeaderSticky(),
                this.showCartIcon()
            }
        }, {
            key: "cacheElements",
            value: function() {
                this.pageBody = document.getElementsByTagName("body")[0],
                this.menuButton = this.querySelector(".Page-header-menu-trigger"),
                this.searchButton = this.querySelector(".Page-header-search-button"),
                this.signedIn = this.querySelector(".Page-header-userIcon"),
                this.signInTrigger = this.querySelector(".Page-header-userIcon-trigger"),
                this.signOutTrigger = this.querySelector(".userSignout"),
                this.searchInput = this.querySelector(".Page-header-search-input"),
                this.hamburgerMenu = this.querySelector(".Page-header-hamburger-menu"),
                this.secondaryNavigation = this.querySelector(".SecondaryDropdownNavigation"),
                this.navigationItems = this.hamburgerMenu.querySelectorAll(".NavigationItem"),
                this.navigationLinks = this.querySelectorAll(".DropdownNavigationItem .NavigationLink-wrapper"),
                this.mobileNavigationLinks = this.hamburgerMenu.querySelectorAll(".NavigationLink-wrapper"),
                this.dropdownNavigationItems = this.querySelectorAll(".DropdownNavigationItem"),
                this.headerBar = document.querySelector(".Page-header-bar"),
                this.menuWrapper = this.querySelector(".Page-header-hamburger-menu-wrapper"),
                this.event = this.setClickTarget.bind(this),
                this.signInOverlay = document.querySelector(".Page-signInOverlay"),
                this.signInOverlayContent = this.signInOverlay.querySelector(".Page-signInOverlay-content"),
                this.signInOverlayCloseButton = this.signInOverlay.querySelector(".Page-signInOverlay-close")
            }
        }, {
            key: "bindOverlayEvents",
            value: function() {
                var t = this;
                this.signInOverlayCloseButton.addEventListener("click", (function(e) {
                    e.preventDefault(),
                    t.closeOverlay()
                }
                ))
            }
        }, {
            key: "signInEvents",
            value: function() {
                var t = this
                  , e = this.signInTrigger.getAttribute("href");
                ["#sign-in", "#sign-in-customerzone", "#sign-in-internet"].indexOf(window.location.hash) >= 0 && this.fetchOverlay(e, window.location.hash),
                this.getCookie("x-authorization") && this.signedIn.setAttribute("data-logged-in", ""),
                this.signInTrigger.addEventListener("click", (function(i) {
                    i.preventDefault(),
                    t.signedIn.hasAttribute("data-logged-in") ? t.signedIn.parentElement.classList.toggle("show-dropdown") : t.fetchOverlay(e, "#sign-in")
                }
                ))
            }
        }, {
            key: "fetchOverlay",
            value: function(t, e) {
                var i = this;
                window.fetch(t).then((function(t) {
                    if (200 !== t.status) {
                        var e = t.status;
                        throw i.popOverlayError(e),
                        new Error(t.statusText)
                    }
                    return t.text()
                }
                )).then((function(t) {
                    i.pageBody.setAttribute("data-signin-overlay", "loading"),
                    i.popOverlay(t, e)
                }
                )).catch((function(t) {
                    i.popOverlayError()
                }
                ))
            }
        }, {
            key: "getCookie",
            value: function(t) {
                var e = document.cookie.match("(^|;) ?" + t + "=([^;]*)(;|$)");
                return e ? e[2] : null
            }
        }, {
            key: "popOverlay",
            value: function(t, e) {
                var i = window.location.search
                  , s = new URLSearchParams(i);
                document.createElement("template").innerHTML = t;
                var n = (new DOMParser).parseFromString(t, "text/html").querySelector(".SignInOverlay");
                this.pageBody.removeAttribute("data-signin-overlay"),
                this.pageBody.setAttribute("data-signin-overlay", "open"),
                window.location.hash = e,
                this.signInOverlayContent.innerHTML = "",
                this.signInOverlayContent.appendChild(n),
                s.get("token") || "register" !== s.get("type") ? s.get("token") || "forgot" !== s.get("type") || n.setAttribute("data-forgot-password-screen", "open") : n.setAttribute("data-registration-screen", "open"),
                this.bindOverlayEvents()
            }
        }, {
            key: "popOverlayError",
            value: function() {
                var t = document.createElement("template");
                t.innerHTML = '<div class="Page-signInOverlay-error">Oops something went wrong</div>',
                this.pageBody.removeAttribute("data-signin-overlay"),
                this.pageBody.setAttribute("data-signin-overlay", "open");
                var e = t.content;
                this.signInOverlayContent.innerHTML = "",
                this.signInOverlayContent.appendChild(e),
                this.bindOverlayEvents()
            }
        }, {
            key: "closeOverlay",
            value: function() {
                this.signInOverlayContent.innerHTML = "",
                this.pageBody.removeAttribute("data-signin-overlay");
                var t = window.location.search;
                /token|type/.test(t) && (t = t.replace(new RegExp("&?type=[\\w]+|&?token=([^&#]*)+|^&|&$","g"), ""));
                var e = window.location.pathname;
                e.includes("/forgot-password") || e.includes("/email-verification") ? window.location = "/using-myvodafone/" : history.pushState("", document.title, window.location.pathname + t)
            }
        }, {
            key: "checkForHeaderSticky",
            value: function() {
                var t = 0
                  , e = this;
                function i() {
                    var i = e.headerBar.offsetTop;
                    0 !== i && (t = i),
                    window.scrollY > t ? document.body.setAttribute("data-header-sticky", "") : "" === document.body.getAttribute("data-header-sticky") && document.body.removeAttribute("data-header-sticky")
                }
                window.addEventListener("scroll", Object(m.a)(50, (function() {
                    i()
                }
                ))),
                i()
            }
        }, {
            key: "dealWithMenuHover",
            value: function() {
                var t = this;
                this.navigationItems.forEach((function(e) {
                    e.querySelector(".NavigationItem-more") && (t.hoverListener = f()(e, (function() {
                        t.openNavItem(e, "hover")
                    }
                    ), (function() {
                        t.closeNavItem(e, "hover")
                    }
                    )))
                }
                )),
                this.dropdownNavigationItems.forEach((function(e) {
                    e.querySelector(".DropdownNavigationItem-more") && (t.dropdownHoverListener = f()(e, (function() {
                        t.openNavItem(e, "hover")
                    }
                    ), (function() {
                        t.closeNavItem(e, "hover")
                    }
                    )))
                }
                )),
                this.navigationLinks.forEach((function(e) {
                    e.querySelector(".NavigationLink-tertiary") && (t.dropdownHoverListener = f()(e, (function() {
                        t.openNavItem(e, "hover")
                    }
                    ), (function() {
                        t.closeNavItem(e, "hover")
                    }
                    )))
                }
                ))
            }
        }, {
            key: "getMediaQuery",
            value: function() {
                var t = window.getComputedStyle(document.querySelector("body"), "::before").getPropertyValue("content") || !1;
                return !!t && t.replace(/["']/g, "")
            }
        }, {
            key: "handleEventListeners",
            value: function() {
                var t = this;
                window.addEventListener("resize", Object(m.a)(50, (function(e) {
                    "mq-lg" === t.getMediaQuery() || "mq-hk" === t.getMediaQuery() || "mq-xl" === t.getMediaQuery() ? (t.checkClickTarget(),
                    t.navigationItems && t.navigationItems.forEach((function(e) {
                        e.querySelector(".NavigationItem-more") && (t.closeNavItem(e, "click"),
                        t.closeNavItem(e, "hover"))
                    }
                    )),
                    t.dropdownNavigationItems && t.dropdownNavigationItems.forEach((function(e) {
                        e.querySelector(".DropdownNavigationItem-more") && (t.closeNavItem(e, "click"),
                        t.closeNavItem(e, "hover"))
                    }
                    ))) : t.removeClickTarget()
                }
                ))),
                this.secondaryNavigation.addEventListener("mouseleave", (function(e) {
                    t.signedIn.parentElement.classList.remove("show-dropdown")
                }
                )),
                this.signOutTrigger.addEventListener("click", (function(t) {
                    t.preventDefault(),
                    window.fetch("/api/v1/identity/tokens/me", {
                        method: "DELETE",
                        headers: {
                            "Content-Type": "application/json;charset=UTF-8;",
                            "x-request-application": "CMS"
                        }
                    }).then((function(t) {
                        200 !== t.status || (window.location = window.location.href)
                    }
                    )).catch((function(t) {}
                    )).finally((function() {
                        document.cookie = "vf_wifi_commerce_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;"
                    }
                    ))
                }
                )),
                this.menuButton && this.menuButton.addEventListener("click", (function(e) {
                    e.preventDefault(),
                    t.isMenuOpen() ? t.closeMenu() : t.openMenu()
                }
                )),
                "news.vodafone.co.nz" != window.location.host && "cms.uat.vodafonenz.psdops.com" != window.location.host || (document.querySelector(".Page-header-userIcon").style = "display:none"),
                this.searchButton && this.searchButton.addEventListener("click", (function(e) {
                    e.preventDefault(),
                    t.isSearchOpen() ? t.closeSearch() : t.openSearch()
                }
                )),
                this.navigationItems && this.navigationItems.forEach((function(e) {
                    e.querySelector(".NavigationItem-more") && e.querySelector(".NavigationItem-more").addEventListener("click", (function(i) {
                        i.preventDefault(),
                        t.openNavItem(e, "click")
                    }
                    ))
                }
                )),
                this.mobileNavigationLinks && this.mobileNavigationLinks.forEach((function(e) {
                    e.querySelector(".NavigationLink-more") && e.querySelector(".NavigationLink-more").addEventListener("click", (function(i) {
                        i.preventDefault(),
                        t.openSubNavItem(e, "click")
                    }
                    ))
                }
                ))
            }
        }, {
            key: "openNavItem",
            value: function(t, e) {
                this.signedIn.parentElement.classList.remove("show-dropdown"),
                t && (t.getAttribute("data-item-" + e) ? t.removeAttribute("data-item-" + e) : (this.navigationItems.forEach((function(t) {
                    t.removeAttribute("data-item-" + e)
                }
                )),
                t.setAttribute("data-item-" + e, !0)))
            }
        }, {
            key: "openSubNavItem",
            value: function(t, e) {
                this.signedIn.parentElement.classList.remove("show-dropdown"),
                t && (t.getAttribute("data-item-" + e) ? t.removeAttribute("data-item-" + e) : (this.mobileNavigationLinks.forEach((function(t) {
                    t.removeAttribute("data-item-" + e)
                }
                )),
                t.setAttribute("data-item-" + e, !0)))
            }
        }, {
            key: "closeNavItem",
            value: function(t, e) {
                t.removeAttribute("data-item-" + e)
            }
        }, {
            key: "checkClickTarget",
            value: function() {
                document.addEventListener("click", this.event)
            }
        }, {
            key: "setClickTarget",
            value: function(t) {
                if (this.menuWrapper) {
                    var e = this.menuWrapper.contains(t.target)
                      , i = this.headerBar.contains(t.target);
                    e || i || this.closeMenu()
                }
            }
        }, {
            key: "removeClickTarget",
            value: function() {
                this.event && document.removeEventListener("click", this.event) && document.removeEventListener("click", this.event)
            }
        }, {
            key: "openMenu",
            value: function() {
                this.signedIn.parentElement.classList.remove("show-dropdown"),
                document.body.setAttribute("data-toggle-header", "hamburger-menu"),
                this.setAttribute("data-toggle-header", "hamburger-menu"),
                e.noScrollOff(),
                y.a.on(),
                this.menuButton.setAttribute("aria-expanded", "true"),
                this.hamburgerMenu.focus()
            }
        }, {
            key: "closeMenu",
            value: function() {
                this.isMenuOpen() && (document.body.removeAttribute("data-toggle-header"),
                this.removeAttribute("data-toggle-header"),
                y.a.off(),
                this.menuButton.setAttribute("aria-expanded", "false"))
            }
        }, {
            key: "isMenuOpen",
            value: function() {
                return "hamburger-menu" === document.body.getAttribute("data-toggle-header")
            }
        }, {
            key: "openSearch",
            value: function() {
                document.body.setAttribute("data-toggle-header", "search-overlay"),
                this.setAttribute("data-toggle-header", "search-overlay"),
                e.noScrollOn(),
                this.searchInput.focus()
            }
        }, {
            key: "closeSearch",
            value: function() {
                this.isSearchOpen() && (document.body.removeAttribute("data-toggle-header"),
                y.a.off(),
                e.noScrollOff(),
                this.removeAttribute("data-toggle-header"))
            }
        }, {
            key: "isSearchOpen",
            value: function() {
                return "search-overlay" === document.body.getAttribute("data-toggle-header")
            }
        }, {
            key: "getDistanceFromTop",
            value: function(t) {
                var e = 0;
                if (t.offsetParent)
                    do {
                        e += t.offsetTop,
                        t = t.offsetParent
                    } while (t);
                return e >= 0 ? e : 0
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                y.a.off(),
                e.noScrollOff(),
                this.hoverListener.destroy(),
                this.dropdownHoverListener.destroy()
            }
        }, {
            key: "showCartIcon",
            value: function() {
                (this.getCookie("BC_CART") || this.getCookie("ATG_CART")) && (document.querySelector(".Page-header-cartIcon").style = "display:flex")
            }
        }], [{
            key: "noScrollOn",
            value: function() {
                document && (y.a.off(),
                document.documentElement.style.overflow = "hidden")
            }
        }, {
            key: "noScrollOff",
            value: function() {
                document && (y.a.off(),
                document.documentElement.style.overflow = "")
            }
        }]),
        e
    }(window.HTMLElement)
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return m
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(4)
      , p = i.n(u)
      , d = i(5)
      , f = i.n(d)
      , m = function(t) {
        function e() {
            return n()(this, e),
            l()(this, c()(e).apply(this, arguments))
        }
        return p()(e, t),
        a()(e, [{
            key: "handleToggle",
            value: function(t) {
                return function(i) {
                    i.preventDefault();
                    var s = this.getAttribute(e.selectors.trigger);
                    if (s)
                        if (t.getAttribute(e.selectors.toggleIn) === s) {
                            document.body.removeAttribute(e.selectors.toggleIn),
                            t.removeAttribute(e.selectors.toggleIn, s);
                            var n = t.querySelector(".AccordionItem-body-wrapper");
                            null !== n && (n.style.display = "none"),
                            t.expandable.length > 0 && t.expandable.forEach((function(t) {
                                return t.removeAttribute("style")
                            }
                            ))
                        } else {
                            document.body.setAttribute(e.selectors.toggleIn, s),
                            t.setAttribute(e.selectors.toggleIn, s);
                            var r = t.querySelector(".AccordionItem-body-wrapper");
                            null !== r && (r.style.display = "block"),
                            t.expandable.length > 0 && t.expandable.forEach((function(t) {
                                t.style.maxHeight = t.scrollHeight + "px"
                            }
                            ))
                        }
                }
            }
        }, {
            key: "connectedCallback",
            value: function() {
                var t = this;
                this.toggleHandler = this.handleToggle(this),
                this.triggers.forEach((function(e) {
                    return e.addEventListener("click", t.toggleHandler, !0)
                }
                ))
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                var t = this;
                this.triggers.forEach((function(e) {
                    return e.removeEventListener("click", t.toggleHandler, !0)
                }
                ))
            }
        }, {
            key: "toggle",
            get: function() {
                return this.getAttribute("data-toggle")
            }
        }, {
            key: "triggers",
            get: function() {
                return this.querySelectorAll("[".concat(e.selectors.trigger, '="').concat(this.toggle, '"]'))
            }
        }, {
            key: "expandable",
            get: function() {
                return this.querySelectorAll("[".concat(e.selectors.expandable, '="').concat(this.toggle, '"]'))
            }
        }]),
        e
    }(window.HTMLElement);
    f()(m, "selectors", {
        toggle: "data-toggle",
        trigger: "data-toggle-trigger",
        toggleIn: "data-toggle-in",
        expandable: "data-toggle-expandable"
    })
}
, function(t, e, i) {
    "use strict";
    i.d(e, "a", (function() {
        return d
    }
    ));
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(4)
      , p = i.n(u)
      , d = function(t) {
        function e() {
            return n()(this, e),
            l()(this, c()(e).apply(this, arguments))
        }
        return p()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                this.cacheElements(),
                this.handleFormSubmit()
            }
        }, {
            key: "handleFormSubmit",
            value: function() {
                var t = this;
                this.searchForm.addEventListener("submit", (function(e) {
                    e.preventDefault();
                    var i = new window.FormData(t.searchForm);
                    if (i.get("q").trim()) {
                        var s = new window.URLSearchParams(i).toString()
                          , n = window.location.pathname + "?" + s;
                        window.history.replaceState({}, document.title, n),
                        t.loadingTimeout = window.setTimeout((function() {
                            t.clearSearchForm(),
                            t.setLoadingState()
                        }
                        ), 1e3),
                        t.getNewSearch(n).then((function(e) {
                            window.clearTimeout(t.loadingTimeout),
                            t.clearSearchForm(),
                            t.clearLoadingState(),
                            t.renderSearchResults(e),
                            document.body.dispatchEvent(new window.CustomEvent("Search:onSearchUpdate",{
                                detail: {
                                    responseMarkup: e
                                }
                            }))
                        }
                        ))
                    } else
                        "" !== window.location.search && (window.history.replaceState({}, document.title, window.location.pathname),
                        t.clearSearchForm())
                }
                ))
            }
        }, {
            key: "submitSearch",
            value: function() {
                var t;
                "function" == typeof Event ? t = new window.Event("submit") : (t = document.createEvent("Event")).initEvent("submit", !0, !0),
                this.searchForm.dispatchEvent(t)
            }
        }, {
            key: "getNewSearch",
            value: function(t) {
                return new Promise((function(e, i) {
                    window.fetch(t, {
                        credentials: "include"
                    }).then((function(t) {
                        e(t.text())
                    }
                    )).catch((function() {
                        i()
                    }
                    ))
                }
                ))
            }
        }, {
            key: "clearSearchForm",
            value: function() {
                this.searchResults.innerHTML = '<div class="SearchResultsModule-empty"></div>'
            }
        }, {
            key: "setLoadingState",
            value: function() {
                var t = document.createElement("div");
                t.classList.add("loading-icon"),
                this.searchResults.appendChild(t),
                this.setAttribute("data-loading", !0)
            }
        }, {
            key: "clearLoadingState",
            value: function() {
                this.setAttribute("data-loading", !1)
            }
        }, {
            key: "renderSearchResults",
            value: function(t) {
                var e = document.createElement("div");
                e.innerHTML = t;
                var i = e.querySelector(".SearchResultsModule-ajax").innerHTML;
                i && (this.searchResults.innerHTML = i),
                this.dispatchRendered()
            }
        }, {
            key: "dispatchRendered",
            value: function() {
                var t = new window.CustomEvent("Ajax:Rendered",{
                    bubbles: !0
                });
                document.body.dispatchEvent(t)
            }
        }, {
            key: "cacheElements",
            value: function() {
                this.searchForm = this.querySelector(".SearchResultsModule-form"),
                this.searchResults = this.querySelector(".SearchResultsModule-ajax")
            }
        }]),
        e
    }(window.HTMLElement)
}
, function(t, e, i) {
    "use strict";
    var s = i(1)
      , n = i.n(s)
      , r = i(2)
      , a = i.n(r)
      , o = i(3)
      , l = i.n(o)
      , h = i(0)
      , c = i.n(h)
      , u = i(4)
      , p = i.n(u)
      , d = function(t) {
        if (/^(?=.*[A-z])(?=.*\d)[\d\w\W]{6,}$/.test(t.value))
            return !0
    }
      , f = function(t) {
        if (/^(?=.*[_\W]).+$/.test(t.value))
            return !0
    }
      , m = function(t) {
        if (/^(?=(?:\D*\d){9,15}\D*$)\+?[0-9]{1,3}[\s-]?(?:\(0?[0-9]{1,5}\)|[0-9]{1,5})[-\s]?[0-9][\d\s-]{5,7}\s?(?:x[\d-]{0,4})?$/.test(t.value))
            return !0
    }
      , g = function(t) {
        if (/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,6})+$/.test(t.value))
            return !0
    }
      , y = function() {
        function t(e) {
            n()(this, t),
            this.el = e,
            this.cacheElements(),
            this.addKeyPressListenerForFieldInForm(),
            this.addEventListeners()
        }
        return a()(t, [{
            key: "cacheElements",
            value: function() {
                this.form = this.el,
                this.formInputs = this.form.querySelectorAll(".form-input"),
                this.formCheckboxes = this.form.querySelectorAll(".form-checkbox"),
                this.passwordInputWrapper = this.form.querySelector(".PasswordInput"),
                this.passwordToggleWrapper = this.form.querySelector(".PasswordInput-passwordVisibility"),
                this.passwordEyeOpen = this.form.querySelector(".PasswordInput-eyeOpen"),
                this.passwordEyeClosed = this.form.querySelector(".PasswordInput-eyeClosed"),
                this.passwordInput = this.form.querySelector(".PasswordInput-input")
            }
        }, {
            key: "addKeyPressListenerForFieldInForm",
            value: function() {
                var t = this;
                this.formInputs.forEach((function(e) {
                    e.addEventListener("keyup", (function() {
                        t.updateFormState()
                    }
                    )),
                    e.addEventListener("blur", (function() {
                        t.updateFormState()
                    }
                    ))
                }
                ))
            }
        }, {
            key: "updateFormState",
            value: function() {
                var t = this.el.querySelector("button[type=submit]");
                !0 === this.allFilled() ? (t.disabled = !1,
                t.classList.remove("Button--disabled")) : (t.disabled = !0,
                t.classList.add("Button--disabled"))
            }
        }, {
            key: "allFilled",
            value: function() {
                var t = !0;
                return this.formInputs.forEach((function(e) {
                    e.required && ("" === e.value.trim() || e.hasAttribute("data-invalid")) && (t = !1)
                }
                )),
                this.formCheckboxes.forEach((function(e) {
                    e.required && !e.checked && (t = !1)
                }
                )),
                t
            }
        }, {
            key: "addEventListeners",
            value: function() {
                var t = this;
                this.passwordEyeOpen && this.passwordEyeOpen.addEventListener("click", (function() {
                    t.togglePasswordVisibility()
                }
                )),
                this.passwordEyeClosed && this.passwordEyeClosed.addEventListener("click", (function() {
                    t.togglePasswordVisibility()
                }
                )),
                this.formCheckboxes.forEach((function(e) {
                    e.addEventListener("click", (function() {
                        t.updateFormState()
                    }
                    ))
                }
                ))
            }
        }, {
            key: "togglePasswordVisibility",
            value: function() {
                "password" === this.passwordInput.type.toLowerCase() ? (this.passwordInputWrapper.classList.remove("password-hidden"),
                this.passwordInputWrapper.classList.add("password-visible"),
                this.passwordInput.type = "text") : (this.passwordInputWrapper.classList.remove("password-visible"),
                this.passwordInputWrapper.classList.add("password-hidden"),
                this.passwordInput.type = "password")
            }
        }]),
        t
    }();
    i.d(e, "a", (function() {
        return T
    }
    ));
    var v = window.google_recaptcha_cfg
      , b = v && v.RECAPTCHA_URL || "https://www.google.com/recaptcha/api.js?render="
      , w = v && v.RECAPTCHA_KEY || "6LfvJc4eAAAAAJY1Vp4PpTOSI34lizs86rTiby1m"
      , S = v && v.RECAPTCHA_VERIFY_URL || "myvf-recaptcha-validation-rest/captcha-validation"
      , E = v && v.RECAPTCHA_VERIFY_FULL_URL
      , P = v && v.RECAPTCHA_ENABLED
      , k = "data-error-screen"
      , x = "input[name=email]"
      , C = {
        EmailAlreadyRegistered: 'That email address is already in use. Please sign in with that email, use another email address or <a class="forgotLink" href="#">reset your password.</a>',
        InvalidEmail: "Please enter a valid Email Address",
        EmptyEmail: "Please enter an Email Address",
        InvalidPhoneSpecialChar: "Please remove special characters e.g.  (  ) or + ",
        InvalidPhone: "Please enter a valid Mobile Number",
        EmptyEmailPhone: "Please enter an Email Address",
        EmptyPassword: "Please enter a Password",
        Expired: "You've used an expired email.",
        InvalidCaptcha: "Please try again or tap the refresh button for a new code",
        InvalidPassword: "Please enter a valid password. Minimum 6 characters incl. one number.",
        InvalidFirstName: "Please enter your first name",
        UserVerified: "User is already verified",
        UserUnverified: "User Not verified",
        InvalidLastName: "Please enter your last name",
        InvalidDOB: "Please enter a valid date of birth (DD/MM/YYYY)",
        Login: 'Seems like you\'ve entered the wrong details. Please try again or <a class="forgotLink" href="#">reset your password</a>.',
        Unauthorized: "Your account has been locked. Call us on 0800 800 021 so we can get you sorted.",
        default: "Input Error",
        "Not Found": "Sorry. That email address or mobile hasn't been registered. Check what you've entered and try again. If that doesn't work, please call us on 0800 800 021",
        emailError: "Error sending email",
        404: "We've had a technical hiccup. Try again soon. If that doesn't work, please call us on 0800 800 021.",
        400: "We've had a technical hiccup. Try again soon. If that doesn't work, please call us on 0800 800 021.",
        defaultError: "We've had a technical hiccup. Try again soon. If that doesn't work, please call us on 0800 800 021."
    }
      , A = "Great, we've just resent an email to:"
      , T = function(t) {
        function e() {
            return n()(this, e),
            l()(this, c()(e).apply(this, arguments))
        }
        return p()(e, t),
        a()(e, [{
            key: "connectedCallback",
            value: function() {
                this.cacheElements(),
                this.init(),
                this.addEventListeners()
            }
        }, {
            key: "init",
            value: function() {
                var t = window.location.search
                  , e = new URLSearchParams(t);
                e.get("token") && ("reset" == e.get("type") && this.classList.contains("SetPasswordForm") ? this.formSetPasswordVerifyToken(e.get("token")) : this.classList.contains("RegistrationForm") && "reset" !== e.get("type") && this.verifyEmail(e.get("token")));
                var i = document.createElement("script");
                i.src = "".concat(b).concat(w),
                document.body.appendChild(i)
            }
        }, {
            key: "cacheElements",
            value: function() {
                this.captchaIcon = this.querySelector("[class*=-captchaIcon]"),
                this.captchaClickCount = 0,
                this.captchaImage = this.querySelector("[class*=-captchaImg]"),
                this.dobInput = this.querySelectorAll("input[name=date-of-birth]"),
                this.form = this.querySelector("form"),
                this.forgotLink = this.form.querySelectorAll(".forgotLink"),
                this.formSuccessEmail = this.querySelector(".formSuccess-title .email"),
                this.formSuccessRegisterEmail = this.querySelector(".formSuccess-title .email"),
                this.forgotPasswordForm = document.querySelector(".LoginTabs-forgotPasswordForm"),
                this.forgotPasswordBack = document.querySelector(".ForgotPasswordForm-backButton"),
                this.overlay = document.querySelector(".SignInOverlay"),
                this.resendEmailEl = this.querySelectorAll(".resendEmail"),
                this.registerLink = this.overlay.querySelector(".registerLink"),
                this.registrationForm = document.querySelector(".LoginTabs-registrationForm"),
                this.registrationBack = this.registrationForm.querySelector(".RegistrationForm-backButton"),
                this.isLoggingIn = !1
            }
        }, {
            key: "addEventListeners",
            value: function() {
                var t = this;
                new y(this.form),
                this.form.addEventListener("submit", (function(e) {
                    if ("1" === t.getAttribute("data-form-number")) {
                        if (e.preventDefault(),
                        !t.isLoggingIn) {
                            t.isLoggingIn = !0;
                            var i = {
                                username: e.target.querySelector(".username").value.trim(),
                                password: e.target.querySelector(".password").value
                            };
                            P ? t.getRecaptchaToken(i) : t.loginFormOneSubmit(i)
                        }
                    } else
                        t.classList.contains("RegistrationForm") ? (e.preventDefault(),
                        t.verifyCaptcha(e)) : t.classList.contains("SetPasswordForm") ? (e.preventDefault(),
                        t.formSetPassword()) : t.classList.contains("ForgotPasswordForm") && (e.preventDefault(),
                        t.verifyCaptcha(e, "forgot_password"))
                }
                )),
                this.captchaIcon && this.captchaIcon.addEventListener("click", (function() {
                    t.refreshCaptcha()
                }
                )),
                this.resendEmailEl && this.resendEmailEl.forEach((function(e) {
                    e.addEventListener("click", (function(e) {
                        e.preventDefault(),
                        t.resendEmail()
                    }
                    ))
                }
                )),
                this.dobInput && this.dateOfBirthListener(),
                this.form.addEventListener("blur", (function(e) {
                    t.validateField(e.target)
                }
                ), !0),
                this.form.addEventListener("keyup", (function(e) {
                    t.validateField(e.target)
                }
                ), !0),
                this.forgotPasswordBack && this.forgotPasswordBack.addEventListener("click", (function() {
                    t.overlay.removeAttribute("data-forgot-password-screen")
                }
                )),
                document.addEventListener("click", (function(e) {
                    if (e.target && "forgotLink" == e.target.className) {
                        var i = document.querySelector(".LoginForm-items-item .EmailInput-input ").value.trim();
                        t.overlay.setAttribute("data-forgot-password-screen", "open"),
                        document.querySelector(".ForgotPasswordForm-items-item .EmailInput-input ").value = i
                    }
                }
                )),
                this.registerLink && this.registerLink.addEventListener("click", (function() {
                    t.overlay.setAttribute("data-registration-screen", "open")
                }
                )),
                this.registrationBack && this.registrationBack.addEventListener("click", (function() {
                    t.overlay.removeAttribute("data-registration-screen")
                }
                ))
            }
        }, {
            key: "loginFormOneSubmit",
            value: function(t) {
                var e = this
                  , i = this.form.getAttribute("action") || "";
                window.fetch(i, {
                    method: "POST",
                    credentials: "include",
                    body: JSON.stringify(t),
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded",
                        "x-request-application": "CMS"
                    }
                }).then((function(t) {
                    var e = t.headers.get("content-type")
                      , i = t.headers.get("content-length");
                    return e && -1 !== e.indexOf("application/json") && i > 0 ? t.json() : t
                }
                )).then((function(t) {
                    if (400 === t.status || 401 === t.status || 404 === t.status || "Unauthorized" === t.statusText) {
                        var i = t.error;
                        e.popError(i, "Oops!")
                    } else
                        200 === t.status && (window.location = "/myvodafone/ng/landing");
                    e.isLoggingIn = !1
                }
                )).catch((function(t) {
                    e.popError(400),
                    e.isLoggingIn = !1
                }
                ))
            }
        }, {
            key: "verifyRecaptcha",
            value: function(t, e) {
                var i = this
                  , s = {
                    recaptchaResponse: e
                };
                window.fetch(E || this.generateApiBaseUrl() + S, {
                    method: "POST",
                    credentials: "include",
                    body: JSON.stringify(s),
                    headers: {
                        "x-request-application": "CMS",
                        "Content-Type": "application/json",
                        "X-Requested-With": "XMLHttpRequest"
                    }
                }).then((function(t) {
                    return t.json()
                }
                )).then((function(e) {
                    return e && e.success ? i.loginFormOneSubmit(t) : (i.isLoggingIn = !1,
                    i.popError(400))
                }
                )).catch((function() {
                    i.popError(400),
                    i.isLoggingIn = !1
                }
                ))
            }
        }, {
            key: "getRecaptchaToken",
            value: function(t) {
                var e = this;
                window.grecaptcha.ready((function() {
                    window.grecaptcha.execute(w, {
                        action: "login"
                    }).then((function(i) {
                        e.verifyRecaptcha(t, i)
                    }
                    )).catch((function(t) {
                        e.isLoggingIn = !1,
                        e.popError(400)
                    }
                    ))
                }
                ))
            }
        }, {
            key: "formForgotPassword",
            value: function() {
                var t, e, i = this, s = window.location.search, n = new URLSearchParams(s), r = n.get("client_id"), a = n.get("type");
                this.forgotPasswordFormEmail = this.querySelector(".username").value,
                this.formSuccessEmail.innerHTML = this.forgotPasswordFormEmail;
                var o = {
                    username: this.forgotPasswordFormEmail
                };
                a && r ? (t = this.generateApiBaseUrl() + "mvw-customer-verification-rest/oauth/users/password",
                e = {
                    "Content-Type": "application/json; charset=UTF-8",
                    "Client-Id": r
                }) : (t = this.form.getAttribute("action") || "/api/v1/identity/users/password",
                e = {
                    "Content-Type": "application/json; charset=UTF-8",
                    "x-request-application": "CMS"
                }),
                window.fetch(t, {
                    method: "PUT",
                    body: JSON.stringify(o),
                    headers: e
                }).then((function(t) {
                    var e = t.headers.get("content-type");
                    return e && -1 !== e.indexOf("application/json") && 200 !== t.status ? t.json() : t
                }
                )).then((function(t) {
                    if (400 === t.status || 401 === t.status || 404 === t.status || "Unauthorized" === t.statusText) {
                        var e = t.error;
                        i.popError(e)
                    } else
                        (200 === t.status || t.email) && (i.overlay.removeAttribute("data-forgot-password-screen"),
                        i.overlay.setAttribute("data-success-screen-forgot-password", "open"))
                }
                )).catch((function(t) {
                    i.popError(400)
                }
                ))
            }
        }, {
            key: "generateApiBaseUrl",
            value: function() {
                var t = window.location.host.split(".")[0];
                try {
                    return "undefined" != typeof apiPublicVodafoneEndpoint ? apiPublicVodafoneEndpoint : "https://api.public-xxx.one.nz/vf/public-xxx/".replace(/-xxx/g, "www" === t ? "" : "-".concat(t))
                } catch (t) {
                    return "https://api.public.one.nz/vf/public/"
                }
            }
        }, {
            key: "formRegister",
            value: function(t) {
                var e, i, s, n = this, r = window.location.search, a = new URLSearchParams(r), o = a.get("client_id"), l = a.get("type");
                this.formSuccessRegisterEmail.innerHTML = this.querySelector(x).value,
                l && o ? (e = this.generateApiBaseUrl() + "mvw-customer-registration-rest/oauth/users",
                i = {
                    firstname: t.target.querySelector("input[name=first-name]").value,
                    lastname: t.target.querySelector("input[name=last-name]").value,
                    username: t.target.querySelector(x).value,
                    password: t.target.querySelector(".password").value
                },
                s = {
                    "Content-Type": "application/json; charset=UTF-8",
                    "Client-Id": o
                }) : (e = this.form.getAttribute("action") || "/api/v1/identity/users",
                i = {
                    firstname: t.target.querySelector("input[name=first-name]").value,
                    lastname: t.target.querySelector("input[name=last-name]").value,
                    username: t.target.querySelector(x).value,
                    dob: "",
                    password: t.target.querySelector(".password").value
                },
                s = {
                    "Content-Type": "application/json; charset=UTF-8",
                    "x-request-application": "CMS"
                }),
                window.fetch(e, {
                    method: "POST",
                    body: JSON.stringify(i),
                    headers: s
                }).then((function(t) {
                    var e = t.headers.get("content-type");
                    return e && -1 !== e.indexOf("application/json") && 200 !== t.status ? t.json() : t
                }
                )).then((function(t) {
                    if (400 === t.status || 401 === t.status || 404 === t.status || "Unauthorized" === t.statusText) {
                        var e = t.error;
                        n.popError(e)
                    } else
                        200 === t.status && (n.overlay.removeAttribute("data-registration-screen"),
                        n.overlay.setAttribute("data-success-screen-registration", "open"))
                }
                )).catch((function(t) {
                    n.popError(400)
                }
                ))
            }
        }, {
            key: "dateOfBirthListener",
            value: function(t) {
                var e = this;
                this.dobInput.forEach((function(t) {
                    t.addEventListener("input", (function(t) {
                        this.type = "text";
                        var i = this.value;
                        /\D\/$/.test(i) && (i = i.substr(0, i.length - 3));
                        var s = i.split("/").map((function(t) {
                            return t.replace(/\D/g, "")
                        }
                        ));
                        s[1] && (s[1] = e.checkValue(s[1], 12)),
                        s[0] && (s[0] = e.checkValue(s[0], 31));
                        var n = s.map((function(t, e) {
                            return 2 === t.length && e < 2 ? t + "/" : t
                        }
                        ));
                        this.value = n.join("").substr(0, 10)
                    }
                    ))
                }
                ))
            }
        }, {
            key: "checkValue",
            value: function(t, e) {
                if ("0" !== t.charAt(0) || "00" === t) {
                    var i = parseInt(t);
                    (isNaN(i) || i <= 0 || i > e) && (i = 1),
                    t = i > parseInt(e.toString().charAt(0)) && 1 === i.toString().length ? "0" + i : i.toString()
                }
                return t
            }
        }, {
            key: "verifyCaptcha",
            value: function(t) {
                var e = this
                  , i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "register"
                  , s = t.target.querySelector("input[name=captcha]")
                  , n = {
                    captchaText: s.value
                };
                window.fetch("/myvodafone/CaptchaProxy/api/v1/captcha/verify", {
                    method: "POST",
                    body: JSON.stringify(n),
                    headers: {
                        "Content-Type": "application/json;charset=UTF-8;",
                        "x-request-application": "CMS"
                    }
                }).then((function(n) {
                    200 !== n.status ? e.inputError("InvalidCaptcha", s) : "register" === i ? e.formRegister(t) : e.formForgotPassword()
                }
                )).catch((function(t) {
                    e.popError(400)
                }
                ))
            }
        }, {
            key: "refreshCaptcha",
            value: function() {
                var t = this;
                this.captchaClickCount++,
                window.fetch("/myvodafone/CaptchaProxy/api/v1/captcha?" + this.captchaClickCount, {
                    method: "GET",
                    headers: {
                        "Content-Type": "image/jpeg; charset=UTF-8;",
                        "x-request-application": "CMS"
                    }
                }).then((function(t) {
                    return t.blob()
                }
                )).then((function(e) {
                    t.captchaImage.src = "/myvodafone/CaptchaProxy/api/v1/captcha?" + t.captchaClickCount
                }
                )).catch((function(t) {}
                ))
            }
        }, {
            key: "resendEmail",
            value: function() {
                var t, e, i, s = this, n = window.location.search, r = new URLSearchParams(n), a = r.get("token"), o = r.get("client_id");
                r.get("type") && o ? (t = this.generateApiBaseUrl() + "mvw-customer-registration-rest/oauth/users/email",
                i = {
                    email: this.registrationForm.querySelector(x).value
                },
                e = {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json; charset=UTF-8",
                        "Client-Id": o
                    },
                    body: JSON.stringify(i)
                }) : a ? (t = "/api/v1/identity/users/email/" + a + "/resend",
                e = {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json; charset=UTF-8",
                        "x-request-application": "CMS"
                    }
                }) : (t = "/api/v1/identity/users/email",
                i = {
                    email: this.registrationForm.querySelector(x).value
                },
                e = {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json; charset=UTF-8",
                        "x-request-application": "CMS"
                    },
                    body: JSON.stringify(i)
                }),
                window.fetch(t, e).then((function(t) {
                    var e = t.headers.get("content-type");
                    return e && -1 !== e.indexOf("application/json") && 200 !== t.status ? t.json() : t
                }
                )).then((function(t) {
                    if (400 === t.status || 401 === t.status || 404 === t.status || "Unauthorized" === t.statusText) {
                        t.error;
                        s.overlay.removeAttribute("data-success-screen-registration"),
                        s.overlay.setAttribute("data-email-resent-error-screen", "open")
                    } else
                        200 === t.status && (s.overlay.removeAttribute("data-registration-screen"),
                        s.overlay.removeAttribute("data-email-resent-error-screen"),
                        s.overlay.setAttribute("data-success-screen-registration", "open"),
                        s.querySelector(".formSuccess-title .title").innerHTML = A)
                }
                )).catch((function(t) {
                    s.overlay.removeAttribute("data-success-screen-registration"),
                    s.overlay.setAttribute("data-email-resent-error-screen", "open")
                }
                ))
            }
        }, {
            key: "verifyEmail",
            value: function(t) {
                var e = this;
                this.overlay.setAttribute("data-loading-content-screen", "open");
                var i = "/api/v1/identity/users/verify?token=" + t
                  , s = {
                    token: t
                };
                window.fetch(i, {
                    method: "POST",
                    body: s,
                    headers: {
                        "Content-Type": "application/json;charset=UTF-8;",
                        "x-request-application": "CMS"
                    }
                }).then((function(t) {
                    var e = t.headers.get("content-type");
                    return e && -1 !== e.indexOf("application/json") ? t.json() : t
                }
                )).then((function(t) {
                    e.overlay.removeAttribute("data-loading-content-screen"),
                    400 === t.status || 404 === t.status || 401 === t.status ? "UserVerified" === t.error ? e.overlay.setAttribute("data-email-verified-screen", "open") : 401 === t.status ? e.overlay.setAttribute("data-email-expired-screen", "open") : e.overlay.setAttribute(k, "open") : (document.querySelector(".LoginForm-successMessageDescriptionBinder").innerHTML = "Your email has been confirmed.",
                    document.querySelector(".LoginForm-successMessage").classList.add("active"),
                    document.querySelector(".username").value = t.email.toLowerCase())
                }
                )).catch((function(t) {}
                ))
            }
        }, {
            key: "formSetPasswordVerifyToken",
            value: function(t) {
                var e = this;
                this.token = t,
                window.fetch("/api/v1/identity/users/password/" + t, {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json;charset=UTF-8;",
                        "x-request-application": "CMS"
                    }
                }).then((function(t) {
                    var e = t.headers.get("content-type");
                    return e && -1 !== e.indexOf("application/json") ? t.json() : t
                }
                )).then((function(t) {
                    400 === t.status || 401 === t.status || 404 === t.status || 405 === t.status || "Unauthorized" === t.statusText ? "Expired" === t.error ? e.overlay.setAttribute("data-email-expired-screen", "open") : e.overlay.setAttribute(k, "open") : e.overlay.setAttribute("data-set-password-screen", "open")
                }
                )).catch((function(t) {
                    e.overlay.setAttribute(k, "open")
                }
                ))
            }
        }, {
            key: "formSetPassword",
            value: function() {
                var t = this
                  , e = {
                    newPassword: this.querySelector(".password") ? this.querySelector(".password").value : ""
                };
                window.fetch("/api/v1/identity/users/password/" + this.token, {
                    method: "PATCH",
                    body: JSON.stringify(e),
                    headers: {
                        "Content-Type": "application/json;charset=UTF-8;",
                        "x-request-application": "CMS"
                    }
                }).then((function(t) {
                    var e = t.headers.get("content-type");
                    return e && -1 !== e.indexOf("application/json") ? t.json() : t
                }
                )).then((function(e) {
                    400 === e.status || 401 === e.status || 404 === e.status || 405 === e.status || "Unauthorized" === e.statusText ? t.overlay.setAttribute(k, "open") : (document.querySelector(".username").value = e.email.toLowerCase(),
                    t.overlay.removeAttribute("data-set-password-screen"),
                    document.querySelector(".LoginForm-successMessage").classList.add("active"))
                }
                )).catch((function(e) {
                    t.overlay.setAttribute(k, "open")
                }
                ))
            }
        }, {
            key: "validateField",
            value: function(t) {
                if (t.closest('[class$="-item"]')) {
                    var e = t.closest('[class$="-item"]').querySelector(".alert");
                    e && e.classList.remove("active")
                }
                if (t.removeAttribute("data-invalid"),
                "password" === t.type ? "" === t.value.trim() ? this.inputError("EmptyPassword", t) : d(t) || this.inputError("InvalidPassword", t) : "email" === t.type ? "" === t.value.trim() ? this.inputError("EmptyEmail", t) : g(t) || this.inputError("InvalidEmail", t) : "captcha" === t.name ? "" === t.value.trim() && this.inputError("InvalidCaptcha", t) : "first-name" === t.name && "" === t.value.trim() ? this.inputError("InvalidFirstName", t) : "last-name" === t.name && "" === t.value.trim() ? this.inputError("InvalidLastName", t) : t.required && "" === t.value.trim() && this.inputError("default", t),
                "emailPhone" === t.name) {
                    if ("" === t.value.trim())
                        return this.inputError("EmptyEmailPhone", t),
                        !1;
                    if (g(t) || m(t))
                        return !1;
                    if (f(t))
                        return this.inputError("InvalidPhoneSpecialChar", t),
                        !1;
                    isNaN(t.value.charAt(0)) || m(t) || this.inputError("InvalidPhone", t),
                    isNaN(t.value.charAt(0)) && (g(t) || this.inputError("InvalidEmail", t))
                }
            }
        }, {
            key: "inputError",
            value: function(t, e) {
                var i = e.closest('[class$="-item"]').querySelector(".alert");
                if (e.setAttribute("data-invalid", ""),
                i) {
                    var s = i.querySelector('[class*="-errorMessageDescriptionBinder"]');
                    i.classList.remove("active"),
                    s.innerHTML = C[t],
                    i.classList.add("active")
                }
            }
        }, {
            key: "popError",
            value: function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "Sorry."
                  , i = this.form.querySelector(".alert--warning")
                  , s = i.querySelector('[class*="-errorMessageTitleBinder"]')
                  , n = i.querySelector('[class*="-errorMessageDescriptionBinder"]');
                s.innerHTML = e,
                C[t] ? n.innerHTML = C[t] : 400 === t && (n.innerHTML = "I did it again!!"),
                this.form.querySelector('[class*="-errorMessage"]').classList.add("active")
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                return !1
            }
        }, {
            key: "token",
            get: function() {
                return this._token
            },
            set: function(t) {
                this._token = t
            }
        }]),
        e
    }(window.HTMLElement)
}
, function(t, e, i) {
    "use strict";
    var s = i(11)
      , n = i.n(s)
      , r = i(1)
      , a = i.n(r)
      , o = i(2)
      , l = i.n(o)
      , h = i(3)
      , c = i.n(h)
      , u = i(0)
      , p = i.n(u)
      , d = i(4)
      , f = i.n(d);
    function m(t) {
        if (!this._attrSettings) {
            var e = this.getAttribute(t);
            try {
                this._attrSettings = JSON.parse(e)
            } catch (t) {
                window.console.warn(t),
                this._attrSettings = null
            }
        }
        return this._attrSettings
    }
    i.d(e, "a", (function() {
        return y
    }
    ));
    var g = {
        tagName: "ps-tabs",
        dataActive: "data-active",
        dataVisible: "data-visible",
        selTab: "[data-tab]",
        selPanel: "[data-tab-panel]",
        dataExpanded: "data-expanded"
    }
      , y = function(t) {
        function e() {
            return a()(this, e),
            c()(this, p()(e).apply(this, arguments))
        }
        return f()(e, t),
        l()(e, [{
            key: "connectedCallback",
            value: function() {
                this.settings = Object.assign({}, g, m.call(this, "data-ps-tab")),
                this.init(),
                this.setBinds()
            }
        }, {
            key: "init",
            value: function() {
                var t = this;
                this.elTabs = n()(this.querySelectorAll(":scope > div.Tabs-tabs-wrapper > ul ".concat(this.settings.selTab))),
                this.elTabPanels = n()(this.querySelectorAll(":scope > div.Tabs-content > ".concat(this.settings.selPanel))),
                this.elTabPanelsGlobal = n()(this.querySelectorAll(this.settings.selPanel)),
                this.parentTabPanel = this.closest(this.settings.selPanel),
                this.parentPsTabs = this.parentTabPanel && this.parentTabPanel.closest(this.settings.tagName),
                this.elTabs && this.elTabs.length && this.elTabPanels && this.elTabPanels.length || console.error("DOM elements for Tabs are missing, failing fast."),
                this.ids = this.elTabPanels.map((function(t) {
                    return t.id
                }
                ));
                var e = this.elTabPanelsGlobal.map((function(t) {
                    return t.id
                }
                ))
                  , i = window.location.hash.substr(1);
                i ? (setTimeout((function() {
                    return window.dispatchEvent(new window.Event("hashchange"))
                }
                )),
                this.parentPsTabs || e.includes(i) || (this.activePanel = this.elTabPanels[0].id,
                setTimeout((function() {
                    return t.setChildrenFirstTabActive()
                }
                )))) : this.parentPsTabs ? this.parentPsTabs.activePanel === this.parentTabPanel.id && (this.activePanel = this.elTabPanels[0].id) : this.activePanel = this.elTabPanels[0].id
            }
        }, {
            key: "setBinds",
            value: function() {
                var t = this;
                this.elTabs[0].parentNode.addEventListener("click", (function(e) {
                    t.classList.toggle("_dropdownTabsOpen")
                }
                )),
                window.addEventListener("hashchange", (function() {
                    var e = window.location.hash.substr(1);
                    t.ids.includes(e) && (t.activePanel = e,
                    t.setParentTabsActive(),
                    t.setChildrenFirstTabActive())
                }
                )),
                this.elTabs.forEach((function(e) {
                    e.addEventListener("click", (function(i) {
                        var s = window.location.hash.substr(1);
                        if (t.ids.includes(s)) {
                            if (e.getAttribute("href").substr(1) === t.activePanel)
                                i.preventDefault(),
                                e.getAttribute(g.dataExpanded) ? e.removeAttribute(g.dataExpanded) : e.setAttribute(g.dataExpanded, !0);
                            else
                                e.removeAttribute(g.dataExpanded);
                            t.elTabPanels.forEach((function(e) {
                                e.id === t.activePanel ? e.getAttribute(g.dataExpanded) ? e.removeAttribute(g.dataExpanded) : e.setAttribute(g.dataExpanded, !0) : e.removeAttribute(g.dataExpanded)
                            }
                            ))
                        }
                    }
                    ))
                }
                ))
            }
        }, {
            key: "setParentTabsActive",
            value: function() {
                this.parentPsTabs && (this.parentPsTabs.activePanel = this.parentTabPanel.id,
                this.parentPsTabs.setParentTabsActive())
            }
        }, {
            key: "setChildrenFirstTabActive",
            value: function() {
                var t = this;
                this.elTabPanels.find((function(e) {
                    return e.id === t.activePanel
                }
                )).querySelectorAll(this.settings.tagName).forEach((function(e) {
                    e.parentPsTabs === t && (e.activePanel = e.elTabPanels[0].id,
                    e.setChildrenFirstTabActive())
                }
                ))
            }
        }, {
            key: "activePanel",
            set: function(t) {
                var e = this;
                return this._activePanel !== t && (this._activePanel = t,
                this.elTabs.forEach((function(i) {
                    var s = t === i.getAttribute("href").substr(1)
                      , n = i.parentNode;
                    i.setAttribute(e.settings.dataActive, s),
                    s ? i.setAttribute(g.dataExpanded, !0) : i.removeAttribute(g.dataExpanded),
                    n.setAttribute(e.settings.dataActive, s)
                }
                )),
                this.elTabPanels.forEach((function(i) {
                    var s = t === i.id;
                    i.setAttribute(e.settings.dataVisible, s),
                    s ? i.setAttribute(g.dataExpanded, !0) : i.removeAttribute(g.dataExpanded)
                }
                ))),
                this._activePanel
            },
            get: function() {
                return this._activePanel
            }
        }]),
        e
    }(window.HTMLElement)
}
, function(t, e) {
    try {
        document.querySelector(":scope *")
    } catch (t) {
        !function(t) {
            var e = /:scope(?![\w-])/gi
              , i = a(t.querySelector);
            t.querySelector = function(t) {
                return i.apply(this, arguments)
            }
            ;
            var s = a(t.querySelectorAll);
            if (t.querySelectorAll = function(t) {
                return s.apply(this, arguments)
            }
            ,
            t.matches) {
                var n = a(t.matches);
                t.matches = function(t) {
                    return n.apply(this, arguments)
                }
            }
            if (t.closest) {
                var r = a(t.closest);
                t.closest = function(t) {
                    return r.apply(this, arguments)
                }
            }
            function a(t) {
                return function(i) {
                    var s = i && e.test(i);
                    if (s) {
                        var n = "q" + Math.floor(9e6 * Math.random()) + 1e6;
                        arguments[0] = i.replace(e, "[" + n + "]"),
                        this.setAttribute(n, "");
                        var r = t.apply(this, arguments);
                        return this.removeAttribute(n),
                        r
                    }
                    return t.apply(this, arguments)
                }
            }
        }(Element.prototype)
    }
}
, function(t, e, i) {
    (function(t) {
        !function(t) {
            "use strict";
            var e, i = t.URLSearchParams && t.URLSearchParams.prototype.get ? t.URLSearchParams : null, s = i && "a=1" === new i({
                a: 1
            }).toString(), n = i && "+" === new i("s=%2B").get("s"), r = !i || ((e = new i).append("s", " &"),
            "s=+%26" === e.toString()), a = c.prototype, o = !(!t.Symbol || !t.Symbol.iterator);
            if (!(i && s && n && r)) {
                a.append = function(t, e) {
                    m(this.__URLSearchParams__, t, e)
                }
                ,
                a.delete = function(t) {
                    delete this.__URLSearchParams__[t]
                }
                ,
                a.get = function(t) {
                    var e = this.__URLSearchParams__;
                    return t in e ? e[t][0] : null
                }
                ,
                a.getAll = function(t) {
                    var e = this.__URLSearchParams__;
                    return t in e ? e[t].slice(0) : []
                }
                ,
                a.has = function(t) {
                    return t in this.__URLSearchParams__
                }
                ,
                a.set = function(t, e) {
                    this.__URLSearchParams__[t] = ["" + e]
                }
                ,
                a.toString = function() {
                    var t, e, i, s, n = this.__URLSearchParams__, r = [];
                    for (e in n)
                        for (i = u(e),
                        t = 0,
                        s = n[e]; t < s.length; t++)
                            r.push(i + "=" + u(s[t]));
                    return r.join("&")
                }
                ;
                var l = !!n && i && !s && t.Proxy;
                Object.defineProperty(t, "URLSearchParams", {
                    value: l ? new Proxy(i,{
                        construct: function(t, e) {
                            return new t(new c(e[0]).toString())
                        }
                    }) : c
                });
                var h = t.URLSearchParams.prototype;
                h.polyfill = !0,
                h.forEach = h.forEach || function(t, e) {
                    var i = f(this.toString());
                    Object.getOwnPropertyNames(i).forEach((function(s) {
                        i[s].forEach((function(i) {
                            t.call(e, i, s, this)
                        }
                        ), this)
                    }
                    ), this)
                }
                ,
                h.sort = h.sort || function() {
                    var t, e, i, s = f(this.toString()), n = [];
                    for (t in s)
                        n.push(t);
                    for (n.sort(),
                    e = 0; e < n.length; e++)
                        this.delete(n[e]);
                    for (e = 0; e < n.length; e++) {
                        var r = n[e]
                          , a = s[r];
                        for (i = 0; i < a.length; i++)
                            this.append(r, a[i])
                    }
                }
                ,
                h.keys = h.keys || function() {
                    var t = [];
                    return this.forEach((function(e, i) {
                        t.push(i)
                    }
                    )),
                    d(t)
                }
                ,
                h.values = h.values || function() {
                    var t = [];
                    return this.forEach((function(e) {
                        t.push(e)
                    }
                    )),
                    d(t)
                }
                ,
                h.entries = h.entries || function() {
                    var t = [];
                    return this.forEach((function(e, i) {
                        t.push([i, e])
                    }
                    )),
                    d(t)
                }
                ,
                o && (h[t.Symbol.iterator] = h[t.Symbol.iterator] || h.entries)
            }
            function c(t) {
                ((t = t || "")instanceof URLSearchParams || t instanceof c) && (t = t.toString()),
                this.__URLSearchParams__ = f(t)
            }
            function u(t) {
                var e = {
                    "!": "%21",
                    "'": "%27",
                    "(": "%28",
                    ")": "%29",
                    "~": "%7E",
                    "%20": "+",
                    "%00": "\0"
                };
                return encodeURIComponent(t).replace(/[!'\(\)~]|%20|%00/g, (function(t) {
                    return e[t]
                }
                ))
            }
            function p(t) {
                return t.replace(/[ +]/g, "%20").replace(/(%[a-f0-9]{2})+/gi, (function(t) {
                    return decodeURIComponent(t)
                }
                ))
            }
            function d(e) {
                var i = {
                    next: function() {
                        var t = e.shift();
                        return {
                            done: void 0 === t,
                            value: t
                        }
                    }
                };
                return o && (i[t.Symbol.iterator] = function() {
                    return i
                }
                ),
                i
            }
            function f(t) {
                var e = {};
                if ("object" == typeof t)
                    if (g(t))
                        for (var i = 0; i < t.length; i++) {
                            var s = t[i];
                            if (!g(s) || 2 !== s.length)
                                throw new TypeError("Failed to construct 'URLSearchParams': Sequence initializer must only contain pair elements");
                            m(e, s[0], s[1])
                        }
                    else
                        for (var n in t)
                            t.hasOwnProperty(n) && m(e, n, t[n]);
                else {
                    0 === t.indexOf("?") && (t = t.slice(1));
                    for (var r = t.split("&"), a = 0; a < r.length; a++) {
                        var o = r[a]
                          , l = o.indexOf("=");
                        -1 < l ? m(e, p(o.slice(0, l)), p(o.slice(l + 1))) : o && m(e, p(o), "")
                    }
                }
                return e
            }
            function m(t, e, i) {
                var s = "string" == typeof i ? i : null != i && "function" == typeof i.toString ? i.toString() : JSON.stringify(i);
                e in t ? t[e].push(s) : t[e] = [s]
            }
            function g(t) {
                return !!t && "[object Array]" === Object.prototype.toString.call(t)
            }
        }(void 0 !== t ? t : "undefined" != typeof window ? window : this)
    }
    ).call(this, i(15))
}
, function(t, e, i) {
    var s, n;
    "undefined" != typeof window && window,
    void 0 === (n = "function" == typeof (s = function() {
        "use strict";
        function t() {}
        var e = t.prototype;
        return e.on = function(t, e) {
            if (t && e) {
                var i = this._events = this._events || {}
                  , s = i[t] = i[t] || [];
                return -1 == s.indexOf(e) && s.push(e),
                this
            }
        }
        ,
        e.once = function(t, e) {
            if (t && e) {
                this.on(t, e);
                var i = this._onceEvents = this._onceEvents || {};
                return (i[t] = i[t] || {})[e] = !0,
                this
            }
        }
        ,
        e.off = function(t, e) {
            var i = this._events && this._events[t];
            if (i && i.length) {
                var s = i.indexOf(e);
                return -1 != s && i.splice(s, 1),
                this
            }
        }
        ,
        e.emitEvent = function(t, e) {
            var i = this._events && this._events[t];
            if (i && i.length) {
                i = i.slice(0),
                e = e || [];
                for (var s = this._onceEvents && this._onceEvents[t], n = 0; n < i.length; n++) {
                    var r = i[n];
                    s && s[r] && (this.off(t, r),
                    delete s[r]),
                    r.apply(this, e)
                }
                return this
            }
        }
        ,
        e.allOff = function() {
            delete this._events,
            delete this._onceEvents
        }
        ,
        t
    }
    ) ? s.call(e, i, e, t) : s) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    /*!
 * Unipointer v2.3.0
 * base class for doing one thing with pointer event
 * MIT license
 */
    !function(r, a) {
        s = [i(35)],
        void 0 === (n = function(t) {
            return function(t, e) {
                "use strict";
                function i() {}
                var s = i.prototype = Object.create(e.prototype);
                s.bindStartEvent = function(t) {
                    this._bindStartEvent(t, !0)
                }
                ,
                s.unbindStartEvent = function(t) {
                    this._bindStartEvent(t, !1)
                }
                ,
                s._bindStartEvent = function(e, i) {
                    var s = (i = void 0 === i || i) ? "addEventListener" : "removeEventListener"
                      , n = "mousedown";
                    t.PointerEvent ? n = "pointerdown" : "ontouchstart"in t && (n = "touchstart"),
                    e[s](n, this)
                }
                ,
                s.handleEvent = function(t) {
                    var e = "on" + t.type;
                    this[e] && this[e](t)
                }
                ,
                s.getTouch = function(t) {
                    for (var e = 0; e < t.length; e++) {
                        var i = t[e];
                        if (i.identifier == this.pointerIdentifier)
                            return i
                    }
                }
                ,
                s.onmousedown = function(t) {
                    var e = t.button;
                    e && 0 !== e && 1 !== e || this._pointerDown(t, t)
                }
                ,
                s.ontouchstart = function(t) {
                    this._pointerDown(t, t.changedTouches[0])
                }
                ,
                s.onpointerdown = function(t) {
                    this._pointerDown(t, t)
                }
                ,
                s._pointerDown = function(t, e) {
                    t.button || this.isPointerDown || (this.isPointerDown = !0,
                    this.pointerIdentifier = void 0 !== e.pointerId ? e.pointerId : e.identifier,
                    this.pointerDown(t, e))
                }
                ,
                s.pointerDown = function(t, e) {
                    this._bindPostStartEvents(t),
                    this.emitEvent("pointerDown", [t, e])
                }
                ;
                var n = {
                    mousedown: ["mousemove", "mouseup"],
                    touchstart: ["touchmove", "touchend", "touchcancel"],
                    pointerdown: ["pointermove", "pointerup", "pointercancel"]
                };
                return s._bindPostStartEvents = function(e) {
                    if (e) {
                        var i = n[e.type];
                        i.forEach((function(e) {
                            t.addEventListener(e, this)
                        }
                        ), this),
                        this._boundPointerEvents = i
                    }
                }
                ,
                s._unbindPostStartEvents = function() {
                    this._boundPointerEvents && (this._boundPointerEvents.forEach((function(e) {
                        t.removeEventListener(e, this)
                    }
                    ), this),
                    delete this._boundPointerEvents)
                }
                ,
                s.onmousemove = function(t) {
                    this._pointerMove(t, t)
                }
                ,
                s.onpointermove = function(t) {
                    t.pointerId == this.pointerIdentifier && this._pointerMove(t, t)
                }
                ,
                s.ontouchmove = function(t) {
                    var e = this.getTouch(t.changedTouches);
                    e && this._pointerMove(t, e)
                }
                ,
                s._pointerMove = function(t, e) {
                    this.pointerMove(t, e)
                }
                ,
                s.pointerMove = function(t, e) {
                    this.emitEvent("pointerMove", [t, e])
                }
                ,
                s.onmouseup = function(t) {
                    this._pointerUp(t, t)
                }
                ,
                s.onpointerup = function(t) {
                    t.pointerId == this.pointerIdentifier && this._pointerUp(t, t)
                }
                ,
                s.ontouchend = function(t) {
                    var e = this.getTouch(t.changedTouches);
                    e && this._pointerUp(t, e)
                }
                ,
                s._pointerUp = function(t, e) {
                    this._pointerDone(),
                    this.pointerUp(t, e)
                }
                ,
                s.pointerUp = function(t, e) {
                    this.emitEvent("pointerUp", [t, e])
                }
                ,
                s._pointerDone = function() {
                    this._pointerReset(),
                    this._unbindPostStartEvents(),
                    this.pointerDone()
                }
                ,
                s._pointerReset = function() {
                    this.isPointerDown = !1,
                    delete this.pointerIdentifier
                }
                ,
                s.pointerDone = function() {}
                ,
                s.onpointercancel = function(t) {
                    t.pointerId == this.pointerIdentifier && this._pointerCancel(t, t)
                }
                ,
                s.ontouchcancel = function(t) {
                    var e = this.getTouch(t.changedTouches);
                    e && this._pointerCancel(t, e)
                }
                ,
                s._pointerCancel = function(t, e) {
                    this._pointerDone(),
                    this.pointerCancel(t, e)
                }
                ,
                s.pointerCancel = function(t, e) {
                    this.emitEvent("pointerCancel", [t, e])
                }
                ,
                i.getPointerPoint = function(t) {
                    return {
                        x: t.pageX,
                        y: t.pageY
                    }
                }
                ,
                i
            }(r, t)
        }
        .apply(e, s)) || (t.exports = n)
    }(window)
}
, function(t, e, i) {
    var s = i(0);
    t.exports = function(t, e) {
        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = s(t)); )
            ;
        return t
    }
}
, function(t, e) {
    t.exports = function(t) {
        if (Array.isArray(t)) {
            for (var e = 0, i = new Array(t.length); e < t.length; e++)
                i[e] = t[e];
            return i
        }
    }
}
, function(t, e) {
    t.exports = function(t) {
        if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t))
            return Array.from(t)
    }
}
, function(t, e) {
    t.exports = function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance")
    }
}
, function(t, e) {
    (function(e) {
        t.exports = e
    }
    ).call(this, {})
}
, function(t, e) {
    t.exports = function() {
        for (var t = {}, e = 0; e < arguments.length; e++) {
            var s = arguments[e];
            for (var n in s)
                i.call(s, n) && (t[n] = s[n])
        }
        return t
    }
    ;
    var i = Object.prototype.hasOwnProperty
}
, function(t, e, i) {
    var s = function(t) {
        "use strict";
        var e = Object.prototype
          , i = e.hasOwnProperty
          , s = "function" == typeof Symbol ? Symbol : {}
          , n = s.iterator || "@@iterator"
          , r = s.asyncIterator || "@@asyncIterator"
          , a = s.toStringTag || "@@toStringTag";
        function o(t, e, i, s) {
            var n = e && e.prototype instanceof c ? e : c
              , r = Object.create(n.prototype)
              , a = new E(s || []);
            return r._invoke = function(t, e, i) {
                var s = "suspendedStart";
                return function(n, r) {
                    if ("executing" === s)
                        throw new Error("Generator is already running");
                    if ("completed" === s) {
                        if ("throw" === n)
                            throw r;
                        return k()
                    }
                    for (i.method = n,
                    i.arg = r; ; ) {
                        var a = i.delegate;
                        if (a) {
                            var o = b(a, i);
                            if (o) {
                                if (o === h)
                                    continue;
                                return o
                            }
                        }
                        if ("next" === i.method)
                            i.sent = i._sent = i.arg;
                        else if ("throw" === i.method) {
                            if ("suspendedStart" === s)
                                throw s = "completed",
                                i.arg;
                            i.dispatchException(i.arg)
                        } else
                            "return" === i.method && i.abrupt("return", i.arg);
                        s = "executing";
                        var c = l(t, e, i);
                        if ("normal" === c.type) {
                            if (s = i.done ? "completed" : "suspendedYield",
                            c.arg === h)
                                continue;
                            return {
                                value: c.arg,
                                done: i.done
                            }
                        }
                        "throw" === c.type && (s = "completed",
                        i.method = "throw",
                        i.arg = c.arg)
                    }
                }
            }(t, i, a),
            r
        }
        function l(t, e, i) {
            try {
                return {
                    type: "normal",
                    arg: t.call(e, i)
                }
            } catch (t) {
                return {
                    type: "throw",
                    arg: t
                }
            }
        }
        t.wrap = o;
        var h = {};
        function c() {}
        function u() {}
        function p() {}
        var d = {};
        d[n] = function() {
            return this
        }
        ;
        var f = Object.getPrototypeOf
          , m = f && f(f(P([])));
        m && m !== e && i.call(m, n) && (d = m);
        var g = p.prototype = c.prototype = Object.create(d);
        function y(t) {
            ["next", "throw", "return"].forEach((function(e) {
                t[e] = function(t) {
                    return this._invoke(e, t)
                }
            }
            ))
        }
        function v(t, e) {
            var s;
            this._invoke = function(n, r) {
                function a() {
                    return new e((function(s, a) {
                        !function s(n, r, a, o) {
                            var h = l(t[n], t, r);
                            if ("throw" !== h.type) {
                                var c = h.arg
                                  , u = c.value;
                                return u && "object" == typeof u && i.call(u, "__await") ? e.resolve(u.__await).then((function(t) {
                                    s("next", t, a, o)
                                }
                                ), (function(t) {
                                    s("throw", t, a, o)
                                }
                                )) : e.resolve(u).then((function(t) {
                                    c.value = t,
                                    a(c)
                                }
                                ), (function(t) {
                                    return s("throw", t, a, o)
                                }
                                ))
                            }
                            o(h.arg)
                        }(n, r, s, a)
                    }
                    ))
                }
                return s = s ? s.then(a, a) : a()
            }
        }
        function b(t, e) {
            var i = t.iterator[e.method];
            if (void 0 === i) {
                if (e.delegate = null,
                "throw" === e.method) {
                    if (t.iterator.return && (e.method = "return",
                    e.arg = void 0,
                    b(t, e),
                    "throw" === e.method))
                        return h;
                    e.method = "throw",
                    e.arg = new TypeError("The iterator does not provide a 'throw' method")
                }
                return h
            }
            var s = l(i, t.iterator, e.arg);
            if ("throw" === s.type)
                return e.method = "throw",
                e.arg = s.arg,
                e.delegate = null,
                h;
            var n = s.arg;
            return n ? n.done ? (e[t.resultName] = n.value,
            e.next = t.nextLoc,
            "return" !== e.method && (e.method = "next",
            e.arg = void 0),
            e.delegate = null,
            h) : n : (e.method = "throw",
            e.arg = new TypeError("iterator result is not an object"),
            e.delegate = null,
            h)
        }
        function w(t) {
            var e = {
                tryLoc: t[0]
            };
            1 in t && (e.catchLoc = t[1]),
            2 in t && (e.finallyLoc = t[2],
            e.afterLoc = t[3]),
            this.tryEntries.push(e)
        }
        function S(t) {
            var e = t.completion || {};
            e.type = "normal",
            delete e.arg,
            t.completion = e
        }
        function E(t) {
            this.tryEntries = [{
                tryLoc: "root"
            }],
            t.forEach(w, this),
            this.reset(!0)
        }
        function P(t) {
            if (t) {
                var e = t[n];
                if (e)
                    return e.call(t);
                if ("function" == typeof t.next)
                    return t;
                if (!isNaN(t.length)) {
                    var s = -1
                      , r = function e() {
                        for (; ++s < t.length; )
                            if (i.call(t, s))
                                return e.value = t[s],
                                e.done = !1,
                                e;
                        return e.value = void 0,
                        e.done = !0,
                        e
                    };
                    return r.next = r
                }
            }
            return {
                next: k
            }
        }
        function k() {
            return {
                value: void 0,
                done: !0
            }
        }
        return u.prototype = g.constructor = p,
        p.constructor = u,
        p[a] = u.displayName = "GeneratorFunction",
        t.isGeneratorFunction = function(t) {
            var e = "function" == typeof t && t.constructor;
            return !!e && (e === u || "GeneratorFunction" === (e.displayName || e.name))
        }
        ,
        t.mark = function(t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, p) : (t.__proto__ = p,
            a in t || (t[a] = "GeneratorFunction")),
            t.prototype = Object.create(g),
            t
        }
        ,
        t.awrap = function(t) {
            return {
                __await: t
            }
        }
        ,
        y(v.prototype),
        v.prototype[r] = function() {
            return this
        }
        ,
        t.AsyncIterator = v,
        t.async = function(e, i, s, n, r) {
            void 0 === r && (r = Promise);
            var a = new v(o(e, i, s, n),r);
            return t.isGeneratorFunction(i) ? a : a.next().then((function(t) {
                return t.done ? t.value : a.next()
            }
            ))
        }
        ,
        y(g),
        g[a] = "Generator",
        g[n] = function() {
            return this
        }
        ,
        g.toString = function() {
            return "[object Generator]"
        }
        ,
        t.keys = function(t) {
            var e = [];
            for (var i in t)
                e.push(i);
            return e.reverse(),
            function i() {
                for (; e.length; ) {
                    var s = e.pop();
                    if (s in t)
                        return i.value = s,
                        i.done = !1,
                        i
                }
                return i.done = !0,
                i
            }
        }
        ,
        t.values = P,
        E.prototype = {
            constructor: E,
            reset: function(t) {
                if (this.prev = 0,
                this.next = 0,
                this.sent = this._sent = void 0,
                this.done = !1,
                this.delegate = null,
                this.method = "next",
                this.arg = void 0,
                this.tryEntries.forEach(S),
                !t)
                    for (var e in this)
                        "t" === e.charAt(0) && i.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
            },
            stop: function() {
                this.done = !0;
                var t = this.tryEntries[0].completion;
                if ("throw" === t.type)
                    throw t.arg;
                return this.rval
            },
            dispatchException: function(t) {
                if (this.done)
                    throw t;
                var e = this;
                function s(i, s) {
                    return a.type = "throw",
                    a.arg = t,
                    e.next = i,
                    s && (e.method = "next",
                    e.arg = void 0),
                    !!s
                }
                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                    var r = this.tryEntries[n]
                      , a = r.completion;
                    if ("root" === r.tryLoc)
                        return s("end");
                    if (r.tryLoc <= this.prev) {
                        var o = i.call(r, "catchLoc")
                          , l = i.call(r, "finallyLoc");
                        if (o && l) {
                            if (this.prev < r.catchLoc)
                                return s(r.catchLoc, !0);
                            if (this.prev < r.finallyLoc)
                                return s(r.finallyLoc)
                        } else if (o) {
                            if (this.prev < r.catchLoc)
                                return s(r.catchLoc, !0)
                        } else {
                            if (!l)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < r.finallyLoc)
                                return s(r.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function(t, e) {
                for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                    var n = this.tryEntries[s];
                    if (n.tryLoc <= this.prev && i.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                        var r = n;
                        break
                    }
                }
                r && ("break" === t || "continue" === t) && r.tryLoc <= e && e <= r.finallyLoc && (r = null);
                var a = r ? r.completion : {};
                return a.type = t,
                a.arg = e,
                r ? (this.method = "next",
                this.next = r.finallyLoc,
                h) : this.complete(a)
            },
            complete: function(t, e) {
                if ("throw" === t.type)
                    throw t.arg;
                return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                this.method = "return",
                this.next = "end") : "normal" === t.type && e && (this.next = e),
                h
            },
            finish: function(t) {
                for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                    var i = this.tryEntries[e];
                    if (i.finallyLoc === t)
                        return this.complete(i.completion, i.afterLoc),
                        S(i),
                        h
                }
            },
            catch: function(t) {
                for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                    var i = this.tryEntries[e];
                    if (i.tryLoc === t) {
                        var s = i.completion;
                        if ("throw" === s.type) {
                            var n = s.arg;
                            S(i)
                        }
                        return n
                    }
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function(t, e, i) {
                return this.delegate = {
                    iterator: P(t),
                    resultName: e,
                    nextLoc: i
                },
                "next" === this.method && (this.arg = void 0),
                h
            }
        },
        t
    }(t.exports);
    try {
        regeneratorRuntime = s
    } catch (t) {
        Function("r", "regeneratorRuntime = r")(s)
    }
}
, function(t, e, i) {
    var s, n;
    /*!
 * getSize v2.0.3
 * measure size of elements
 * MIT license
 */
    window,
    void 0 === (n = "function" == typeof (s = function() {
        "use strict";
        function t(t) {
            var e = parseFloat(t);
            return -1 == t.indexOf("%") && !isNaN(e) && e
        }
        var e = "undefined" == typeof console ? function() {}
        : function(t) {
            console.error(t)
        }
          , i = ["paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth"]
          , s = i.length;
        function n(t) {
            var i = getComputedStyle(t);
            return i || e("Style returned " + i + ". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1"),
            i
        }
        var r, a = !1;
        function o(e) {
            if (function() {
                if (!a) {
                    a = !0;
                    var e = document.createElement("div");
                    e.style.width = "200px",
                    e.style.padding = "1px 2px 3px 4px",
                    e.style.borderStyle = "solid",
                    e.style.borderWidth = "1px 2px 3px 4px",
                    e.style.boxSizing = "border-box";
                    var i = document.body || document.documentElement;
                    i.appendChild(e);
                    var s = n(e);
                    r = 200 == Math.round(t(s.width)),
                    o.isBoxSizeOuter = r,
                    i.removeChild(e)
                }
            }(),
            "string" == typeof e && (e = document.querySelector(e)),
            e && "object" == typeof e && e.nodeType) {
                var l = n(e);
                if ("none" == l.display)
                    return function() {
                        for (var t = {
                            width: 0,
                            height: 0,
                            innerWidth: 0,
                            innerHeight: 0,
                            outerWidth: 0,
                            outerHeight: 0
                        }, e = 0; e < s; e++)
                            t[i[e]] = 0;
                        return t
                    }();
                var h = {};
                h.width = e.offsetWidth,
                h.height = e.offsetHeight;
                for (var c = h.isBorderBox = "border-box" == l.boxSizing, u = 0; u < s; u++) {
                    var p = i[u]
                      , d = l[p]
                      , f = parseFloat(d);
                    h[p] = isNaN(f) ? 0 : f
                }
                var m = h.paddingLeft + h.paddingRight
                  , g = h.paddingTop + h.paddingBottom
                  , y = h.marginLeft + h.marginRight
                  , v = h.marginTop + h.marginBottom
                  , b = h.borderLeftWidth + h.borderRightWidth
                  , w = h.borderTopWidth + h.borderBottomWidth
                  , S = c && r
                  , E = t(l.width);
                !1 !== E && (h.width = E + (S ? 0 : m + b));
                var P = t(l.height);
                return !1 !== P && (h.height = P + (S ? 0 : g + w)),
                h.innerWidth = h.width - (m + b),
                h.innerHeight = h.height - (g + w),
                h.outerWidth = h.width + y,
                h.outerHeight = h.height + v,
                h
            }
        }
        return o
    }
    ) ? s.call(e, i, e, t) : s) || (t.exports = n)
}
, , function(t, e, i) {
    (function(e) {
        "object" == typeof navigator && (t.exports = function() {
            "use strict";
            function t(t, e, i) {
                return e in t ? Object.defineProperty(t, e, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = i,
                t
            }
            function i(t, e) {
                for (var i = 0; i < e.length; i++) {
                    var s = e[i];
                    s.enumerable = s.enumerable || !1,
                    s.configurable = !0,
                    "value"in s && (s.writable = !0),
                    Object.defineProperty(t, s.key, s)
                }
            }
            function s(t, e, i) {
                return e in t ? Object.defineProperty(t, e, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = i,
                t
            }
            function n(t, e) {
                var i = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var s = Object.getOwnPropertySymbols(t);
                    e && (s = s.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }
                    ))),
                    i.push.apply(i, s)
                }
                return i
            }
            function r(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var i = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? n(Object(i), !0).forEach((function(e) {
                        s(t, e, i[e])
                    }
                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : n(Object(i)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                    }
                    ))
                }
                return t
            }
            var a = {
                addCSS: !0,
                thumbWidth: 15,
                watch: !0
            };
            function o(t, e) {
                return function() {
                    return Array.from(document.querySelectorAll(e)).includes(this)
                }
                .call(t, e)
            }
            var l = function(t) {
                return null != t ? t.constructor : null
            }
              , h = function(t, e) {
                return !!(t && e && t instanceof e)
            }
              , c = function(t) {
                return l(t) === String
            }
              , u = function(t) {
                return Array.isArray(t)
            }
              , p = function(t) {
                return h(t, NodeList)
            }
              , d = c
              , f = u
              , m = p
              , g = function(t) {
                return h(t, Element)
            }
              , y = function(t) {
                return h(t, Event)
            }
              , v = function(t) {
                return function(t) {
                    return null == t
                }(t) || (c(t) || u(t) || p(t)) && !t.length || function(t) {
                    return l(t) === Object
                }(t) && !Object.keys(t).length
            }
              , b = function() {
                function t(e, i) {
                    (function(t, e) {
                        if (!(t instanceof e))
                            throw new TypeError("Cannot call a class as a function")
                    }
                    )(this, t),
                    g(e) ? this.element = e : d(e) && (this.element = document.querySelector(e)),
                    g(this.element) && v(this.element.rangeTouch) && (this.config = r({}, a, {}, i),
                    this.init())
                }
                return function(t, e, s) {
                    e && i(t.prototype, e),
                    s && i(t, s)
                }(t, [{
                    key: "init",
                    value: function() {
                        t.enabled && (this.config.addCSS && (this.element.style.userSelect = "none",
                        this.element.style.webKitUserSelect = "none",
                        this.element.style.touchAction = "manipulation"),
                        this.listeners(!0),
                        this.element.rangeTouch = this)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        t.enabled && (this.config.addCSS && (this.element.style.userSelect = "",
                        this.element.style.webKitUserSelect = "",
                        this.element.style.touchAction = ""),
                        this.listeners(!1),
                        this.element.rangeTouch = null)
                    }
                }, {
                    key: "listeners",
                    value: function(t) {
                        var e = this
                          , i = t ? "addEventListener" : "removeEventListener";
                        ["touchstart", "touchmove", "touchend"].forEach((function(t) {
                            e.element[i](t, (function(t) {
                                return e.set(t)
                            }
                            ), !1)
                        }
                        ))
                    }
                }, {
                    key: "get",
                    value: function(e) {
                        if (!t.enabled || !y(e))
                            return null;
                        var i, s = e.target, n = e.changedTouches[0], r = parseFloat(s.getAttribute("min")) || 0, a = parseFloat(s.getAttribute("max")) || 100, o = parseFloat(s.getAttribute("step")) || 1, l = s.getBoundingClientRect(), h = 100 / l.width * (this.config.thumbWidth / 2) / 100;
                        return 0 > (i = 100 / l.width * (n.clientX - l.left)) ? i = 0 : 100 < i && (i = 100),
                        50 > i ? i -= (100 - 2 * i) * h : 50 < i && (i += 2 * (i - 50) * h),
                        r + function(t, e) {
                            if (1 > e) {
                                var i = function(t) {
                                    var e = "".concat(t).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                                    return e ? Math.max(0, (e[1] ? e[1].length : 0) - (e[2] ? +e[2] : 0)) : 0
                                }(e);
                                return parseFloat(t.toFixed(i))
                            }
                            return Math.round(t / e) * e
                        }(i / 100 * (a - r), o)
                    }
                }, {
                    key: "set",
                    value: function(e) {
                        t.enabled && y(e) && !e.target.disabled && (e.preventDefault(),
                        e.target.value = this.get(e),
                        function(t, e) {
                            if (t && e) {
                                var i = new Event(e,{
                                    bubbles: !0
                                });
                                t.dispatchEvent(i)
                            }
                        }(e.target, "touchend" === e.type ? "change" : "input"))
                    }
                }], [{
                    key: "setup",
                    value: function(e) {
                        var i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}
                          , s = null;
                        if (v(e) || d(e) ? s = Array.from(document.querySelectorAll(d(e) ? e : 'input[type="range"]')) : g(e) ? s = [e] : m(e) ? s = Array.from(e) : f(e) && (s = e.filter(g)),
                        v(s))
                            return null;
                        var n = r({}, a, {}, i);
                        if (d(e) && n.watch) {
                            var l = new MutationObserver((function(i) {
                                Array.from(i).forEach((function(i) {
                                    Array.from(i.addedNodes).forEach((function(i) {
                                        g(i) && o(i, e) && new t(i,n)
                                    }
                                    ))
                                }
                                ))
                            }
                            ));
                            l.observe(document.body, {
                                childList: !0,
                                subtree: !0
                            })
                        }
                        return s.map((function(e) {
                            return new t(e,i)
                        }
                        ))
                    }
                }, {
                    key: "enabled",
                    get: function() {
                        return "ontouchstart"in document.documentElement
                    }
                }]),
                t
            }();
            const w = t=>null != t ? t.constructor : null
              , S = (t,e)=>Boolean(t && e && t instanceof e)
              , E = t=>null == t
              , P = t=>w(t) === Object
              , k = t=>w(t) === String
              , x = t=>w(t) === Function
              , C = t=>Array.isArray(t)
              , A = t=>S(t, NodeList)
              , T = t=>E(t) || (k(t) || C(t) || A(t)) && !t.length || P(t) && !Object.keys(t).length;
            var _ = E
              , M = P
              , D = t=>w(t) === Number && !Number.isNaN(t)
              , I = k
              , F = t=>w(t) === Boolean
              , L = x
              , B = C
              , V = A
              , R = t=>null !== t && "object" == typeof t && 1 === t.nodeType && "object" == typeof t.style && "object" == typeof t.ownerDocument
              , N = t=>S(t, Event)
              , O = t=>S(t, KeyboardEvent)
              , q = t=>S(t, TextTrack) || !E(t) && k(t.kind)
              , z = t=>{
                if (S(t, window.URL))
                    return !0;
                if (!k(t))
                    return !1;
                let e = t;
                t.startsWith("http://") && t.startsWith("https://") || (e = `http://${t}`);
                try {
                    return !T(new URL(e).hostname)
                } catch (t) {
                    return !1
                }
            }
              , H = T;
            const G = (()=>{
                const t = document.createElement("span")
                  , e = {
                    WebkitTransition: "webkitTransitionEnd",
                    MozTransition: "transitionend",
                    OTransition: "oTransitionEnd otransitionend",
                    transition: "transitionend"
                }
                  , i = Object.keys(e).find(e=>void 0 !== t.style[e]);
                return !!I(i) && e[i]
            }
            )();
            function j(t, e) {
                setTimeout(()=>{
                    try {
                        t.hidden = !0,
                        t.offsetHeight,
                        t.hidden = !1
                    } catch (t) {}
                }
                , e)
            }
            const W = {
                isIE: Boolean(window.document.documentMode),
                isEdge: window.navigator.userAgent.includes("Edge"),
                isWebkit: "WebkitAppearance"in document.documentElement.style && !/Edge/.test(navigator.userAgent),
                isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),
                isIos: "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 || /(iPad|iPhone|iPod)/gi.test(navigator.platform)
            };
            function $(t, e) {
                return e.split(".").reduce((t,e)=>t && t[e], t)
            }
            function U(t={}, ...e) {
                if (!e.length)
                    return t;
                const i = e.shift();
                return M(i) ? (Object.keys(i).forEach(e=>{
                    M(i[e]) ? (Object.keys(t).includes(e) || Object.assign(t, {
                        [e]: {}
                    }),
                    U(t[e], i[e])) : Object.assign(t, {
                        [e]: i[e]
                    })
                }
                ),
                U(t, ...e)) : t
            }
            function Y(t, e) {
                const i = t.length ? t : [t];
                Array.from(i).reverse().forEach((t,i)=>{
                    const s = i > 0 ? e.cloneNode(!0) : e
                      , n = t.parentNode
                      , r = t.nextSibling;
                    s.appendChild(t),
                    r ? n.insertBefore(s, r) : n.appendChild(s)
                }
                )
            }
            function X(t, e) {
                R(t) && !H(e) && Object.entries(e).filter(([,t])=>!_(t)).forEach(([e,i])=>t.setAttribute(e, i))
            }
            function J(t, e, i) {
                const s = document.createElement(t);
                return M(e) && X(s, e),
                I(i) && (s.innerText = i),
                s
            }
            function K(t, e, i, s) {
                R(e) && e.appendChild(J(t, i, s))
            }
            function Q(t) {
                V(t) || B(t) ? Array.from(t).forEach(Q) : R(t) && R(t.parentNode) && t.parentNode.removeChild(t)
            }
            function Z(t) {
                if (!R(t))
                    return;
                let {length: e} = t.childNodes;
                for (; e > 0; )
                    t.removeChild(t.lastChild),
                    e -= 1
            }
            function tt(t, e) {
                return R(e) && R(e.parentNode) && R(t) ? (e.parentNode.replaceChild(t, e),
                t) : null
            }
            function et(t, e) {
                if (!I(t) || H(t))
                    return {};
                const i = {}
                  , s = U({}, e);
                return t.split(",").forEach(t=>{
                    const e = t.trim()
                      , n = e.replace(".", "")
                      , r = e.replace(/[[\]]/g, "").split("=")
                      , [a] = r
                      , o = r.length > 1 ? r[1].replace(/["']/g, "") : "";
                    switch (e.charAt(0)) {
                    case ".":
                        I(s.class) ? i.class = `${s.class} ${n}` : i.class = n;
                        break;
                    case "#":
                        i.id = e.replace("#", "");
                        break;
                    case "[":
                        i[a] = o
                    }
                }
                ),
                U(s, i)
            }
            function it(t, e) {
                if (!R(t))
                    return;
                let i = e;
                F(i) || (i = !t.hidden),
                t.hidden = i
            }
            function st(t, e, i) {
                if (V(t))
                    return Array.from(t).map(t=>st(t, e, i));
                if (R(t)) {
                    let s = "toggle";
                    return void 0 !== i && (s = i ? "add" : "remove"),
                    t.classList[s](e),
                    t.classList.contains(e)
                }
                return !1
            }
            function nt(t, e) {
                return R(t) && t.classList.contains(e)
            }
            function rt(t, e) {
                const {prototype: i} = Element;
                return (i.matches || i.webkitMatchesSelector || i.mozMatchesSelector || i.msMatchesSelector || function() {
                    return Array.from(document.querySelectorAll(e)).includes(this)
                }
                ).call(t, e)
            }
            function at(t) {
                return this.elements.container.querySelectorAll(t)
            }
            function ot(t) {
                return this.elements.container.querySelector(t)
            }
            function lt(t=null, e=!1) {
                R(t) && (t.focus({
                    preventScroll: !0
                }),
                e && st(t, this.config.classNames.tabFocus))
            }
            const ht = {
                "audio/ogg": "vorbis",
                "audio/wav": "1",
                "video/webm": "vp8, vorbis",
                "video/mp4": "avc1.42E01E, mp4a.40.2",
                "video/ogg": "theora"
            }
              , ct = {
                audio: "canPlayType"in document.createElement("audio"),
                video: "canPlayType"in document.createElement("video"),
                check(t, e, i) {
                    const s = W.isIPhone && i && ct.playsinline
                      , n = ct[t] || "html5" !== e;
                    return {
                        api: n,
                        ui: n && ct.rangeInput && ("video" !== t || !W.isIPhone || s)
                    }
                },
                pip: !(W.isIPhone || !L(J("video").webkitSetPresentationMode) && (!document.pictureInPictureEnabled || J("video").disablePictureInPicture)),
                airplay: L(window.WebKitPlaybackTargetAvailabilityEvent),
                playsinline: "playsInline"in document.createElement("video"),
                mime(t) {
                    if (H(t))
                        return !1;
                    const [e] = t.split("/");
                    let i = t;
                    if (!this.isHTML5 || e !== this.type)
                        return !1;
                    Object.keys(ht).includes(i) && (i += `; codecs="${ht[t]}"`);
                    try {
                        return Boolean(i && this.media.canPlayType(i).replace(/no/, ""))
                    } catch (t) {
                        return !1
                    }
                },
                textTracks: "textTracks"in document.createElement("video"),
                rangeInput: (()=>{
                    const t = document.createElement("input");
                    return t.type = "range",
                    "range" === t.type
                }
                )(),
                touch: "ontouchstart"in document.documentElement,
                transitions: !1 !== G,
                reducedMotion: "matchMedia"in window && window.matchMedia("(prefers-reduced-motion)").matches
            }
              , ut = (()=>{
                let t = !1;
                try {
                    const e = Object.defineProperty({}, "passive", {
                        get: ()=>(t = !0,
                        null)
                    });
                    window.addEventListener("test", null, e),
                    window.removeEventListener("test", null, e)
                } catch (t) {}
                return t
            }
            )();
            function pt(t, e, i, s=!1, n=!0, r=!1) {
                if (!t || !("addEventListener"in t) || H(e) || !L(i))
                    return;
                const a = e.split(" ");
                let o = r;
                ut && (o = {
                    passive: n,
                    capture: r
                }),
                a.forEach(e=>{
                    this && this.eventListeners && s && this.eventListeners.push({
                        element: t,
                        type: e,
                        callback: i,
                        options: o
                    }),
                    t[s ? "addEventListener" : "removeEventListener"](e, i, o)
                }
                )
            }
            function dt(t, e="", i, s=!0, n=!1) {
                pt.call(this, t, e, i, !0, s, n)
            }
            function ft(t, e="", i, s=!0, n=!1) {
                pt.call(this, t, e, i, !1, s, n)
            }
            function mt(t, e="", i, s=!0, n=!1) {
                const r = (...a)=>{
                    ft(t, e, r, s, n),
                    i.apply(this, a)
                }
                ;
                pt.call(this, t, e, r, !0, s, n)
            }
            function gt(t, e="", i=!1, s={}) {
                if (!R(t) || H(e))
                    return;
                const n = new CustomEvent(e,{
                    bubbles: i,
                    detail: {
                        ...s,
                        plyr: this
                    }
                });
                t.dispatchEvent(n)
            }
            function yt() {
                this && this.eventListeners && (this.eventListeners.forEach(t=>{
                    const {element: e, type: i, callback: s, options: n} = t;
                    e.removeEventListener(i, s, n)
                }
                ),
                this.eventListeners = [])
            }
            function vt() {
                return new Promise(t=>this.ready ? setTimeout(t, 0) : dt.call(this, this.elements.container, "ready", t)).then(()=>{}
                )
            }
            function bt(t) {
                (t=>S(t, Promise) && x(t.then))(t) && t.then(null, ()=>{}
                )
            }
            function wt(t) {
                return B(t) ? t.filter((e,i)=>t.indexOf(e) === i) : t
            }
            function St(t, e) {
                return B(t) && t.length ? t.reduce((t,i)=>Math.abs(i - e) < Math.abs(t - e) ? i : t) : null
            }
            function Et(t) {
                return !(!window || !window.CSS) && window.CSS.supports(t)
            }
            const Pt = [[1, 1], [4, 3], [3, 4], [5, 4], [4, 5], [3, 2], [2, 3], [16, 10], [10, 16], [16, 9], [9, 16], [21, 9], [9, 21], [32, 9], [9, 32]].reduce((t,[e,i])=>({
                ...t,
                [e / i]: [e, i]
            }), {});
            function kt(t) {
                return !!(B(t) || I(t) && t.includes(":")) && (B(t) ? t : t.split(":")).map(Number).every(D)
            }
            function xt(t) {
                if (!B(t) || !t.every(D))
                    return null;
                const [e,i] = t
                  , s = (t,e)=>0 === e ? t : s(e, t % e)
                  , n = s(e, i);
                return [e / n, i / n]
            }
            function Ct(t) {
                const e = t=>kt(t) ? t.split(":").map(Number) : null;
                let i = e(t);
                if (null === i && (i = e(this.config.ratio)),
                null === i && !H(this.embed) && B(this.embed.ratio) && ({ratio: i} = this.embed),
                null === i && this.isHTML5) {
                    const {videoWidth: t, videoHeight: e} = this.media;
                    i = [t, e]
                }
                return xt(i)
            }
            function At(t) {
                if (!this.isVideo)
                    return {};
                const {wrapper: e} = this.elements
                  , i = Ct.call(this, t);
                if (!B(i))
                    return {};
                const [s,n] = xt(i)
                  , r = 100 / s * n;
                if (Et(`aspect-ratio: ${s}/${n}`) ? e.style.aspectRatio = `${s}/${n}` : e.style.paddingBottom = `${r}%`,
                this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {
                    const t = 100 / this.media.offsetWidth * parseInt(window.getComputedStyle(this.media).paddingBottom, 10)
                      , i = (t - r) / (t / 50);
                    this.fullscreen.active ? e.style.paddingBottom = null : this.media.style.transform = `translateY(-${i}%)`
                } else
                    this.isHTML5 && e.classList.add(this.config.classNames.videoFixedRatio);
                return {
                    padding: r,
                    ratio: i
                }
            }
            function Tt(t, e, i=.05) {
                const s = t / e
                  , n = St(Object.keys(Pt), s);
                return Math.abs(n - s) <= i ? Pt[n] : [t, e]
            }
            const _t = {
                getSources() {
                    return this.isHTML5 ? Array.from(this.media.querySelectorAll("source")).filter(t=>{
                        const e = t.getAttribute("type");
                        return !!H(e) || ct.mime.call(this, e)
                    }
                    ) : []
                },
                getQualityOptions() {
                    return this.config.quality.forced ? this.config.quality.options : _t.getSources.call(this).map(t=>Number(t.getAttribute("size"))).filter(Boolean)
                },
                setup() {
                    if (!this.isHTML5)
                        return;
                    const t = this;
                    t.options.speed = t.config.speed.options,
                    H(this.config.ratio) || At.call(t),
                    Object.defineProperty(t.media, "quality", {
                        get() {
                            const e = _t.getSources.call(t).find(e=>e.getAttribute("src") === t.source);
                            return e && Number(e.getAttribute("size"))
                        },
                        set(e) {
                            if (t.quality !== e) {
                                if (t.config.quality.forced && L(t.config.quality.onChange))
                                    t.config.quality.onChange(e);
                                else {
                                    const i = _t.getSources.call(t).find(t=>Number(t.getAttribute("size")) === e);
                                    if (!i)
                                        return;
                                    const {currentTime: s, paused: n, preload: r, readyState: a, playbackRate: o} = t.media;
                                    t.media.src = i.getAttribute("src"),
                                    ("none" !== r || a) && (t.once("loadedmetadata", ()=>{
                                        t.speed = o,
                                        t.currentTime = s,
                                        n || bt(t.play())
                                    }
                                    ),
                                    t.media.load())
                                }
                                gt.call(t, t.media, "qualitychange", !1, {
                                    quality: e
                                })
                            }
                        }
                    })
                },
                cancelRequests() {
                    this.isHTML5 && (Q(_t.getSources.call(this)),
                    this.media.setAttribute("src", this.config.blankVideo),
                    this.media.load(),
                    this.debug.log("Cancelled network requests"))
                }
            };
            function Mt(t, ...e) {
                return H(t) ? t : t.toString().replace(/{(\d+)}/g, (t,i)=>e[i].toString())
            }
            const Dt = (t="",e="",i="")=>t.replace(new RegExp(e.toString().replace(/([.*+?^=!:${}()|[\]/\\])/g, "\\$1"),"g"), i.toString())
              , It = (t="")=>t.toString().replace(/\w\S*/g, t=>t.charAt(0).toUpperCase() + t.substr(1).toLowerCase());
            function Ft(t) {
                const e = document.createElement("div");
                return e.appendChild(t),
                e.innerHTML
            }
            const Lt = {
                pip: "PIP",
                airplay: "AirPlay",
                html5: "HTML5",
                vimeo: "Vimeo",
                youtube: "YouTube"
            }
              , Bt = {
                get(t="", e={}) {
                    if (H(t) || H(e))
                        return "";
                    let i = $(e.i18n, t);
                    if (H(i))
                        return Object.keys(Lt).includes(t) ? Lt[t] : "";
                    const s = {
                        "{seektime}": e.seekTime,
                        "{title}": e.title
                    };
                    return Object.entries(s).forEach(([t,e])=>{
                        i = Dt(i, t, e)
                    }
                    ),
                    i
                }
            };
            class Vt {
                constructor(e) {
                    t(this, "get", t=>{
                        if (!Vt.supported || !this.enabled)
                            return null;
                        const e = window.localStorage.getItem(this.key);
                        if (H(e))
                            return null;
                        const i = JSON.parse(e);
                        return I(t) && t.length ? i[t] : i
                    }
                    ),
                    t(this, "set", t=>{
                        if (!Vt.supported || !this.enabled)
                            return;
                        if (!M(t))
                            return;
                        let e = this.get();
                        H(e) && (e = {}),
                        U(e, t),
                        window.localStorage.setItem(this.key, JSON.stringify(e))
                    }
                    ),
                    this.enabled = e.config.storage.enabled,
                    this.key = e.config.storage.key
                }
                static get supported() {
                    try {
                        if (!("localStorage"in window))
                            return !1;
                        const t = "___test";
                        return window.localStorage.setItem(t, t),
                        window.localStorage.removeItem(t),
                        !0
                    } catch (t) {
                        return !1
                    }
                }
            }
            function Rt(t, e="text") {
                return new Promise((i,s)=>{
                    try {
                        const s = new XMLHttpRequest;
                        if (!("withCredentials"in s))
                            return;
                        s.addEventListener("load", ()=>{
                            if ("text" === e)
                                try {
                                    i(JSON.parse(s.responseText))
                                } catch (t) {
                                    i(s.responseText)
                                }
                            else
                                i(s.response)
                        }
                        ),
                        s.addEventListener("error", ()=>{
                            throw new Error(s.status)
                        }
                        ),
                        s.open("GET", t, !0),
                        s.responseType = e,
                        s.send()
                    } catch (t) {
                        s(t)
                    }
                }
                )
            }
            function Nt(t, e) {
                if (!I(t))
                    return;
                const i = I(e);
                let s = !1;
                const n = ()=>null !== document.getElementById(e)
                  , r = (t,e)=>{
                    t.innerHTML = e,
                    i && n() || document.body.insertAdjacentElement("afterbegin", t)
                }
                ;
                if (!i || !n()) {
                    const n = Vt.supported
                      , a = document.createElement("div");
                    if (a.setAttribute("hidden", ""),
                    i && a.setAttribute("id", e),
                    n) {
                        const t = window.localStorage.getItem(`cache-${e}`);
                        if (s = null !== t,
                        s) {
                            const e = JSON.parse(t);
                            r(a, e.content)
                        }
                    }
                    Rt(t).then(t=>{
                        H(t) || (n && window.localStorage.setItem(`cache-${e}`, JSON.stringify({
                            content: t
                        })),
                        r(a, t))
                    }
                    ).catch(()=>{}
                    )
                }
            }
            const Ot = t=>Math.trunc(t / 60 / 60 % 60, 10);
            function qt(t=0, e=!1, i=!1) {
                if (!D(t))
                    return qt(void 0, e, i);
                const s = t=>`0 ${t}`.slice(-2);
                let n = Ot(t);
                const r = (a = t,
                Math.trunc(a / 60 % 60, 10));
                var a;
                const o = (t=>Math.trunc(t % 60, 10))(t);
                return n = e || n > 0 ? `${n}:` : "",
                `${i && t > 0 ? "-" : ""}${n}${s(r)}:${s(o)}`
            }
            const zt = {
                getIconUrl() {
                    const t = new URL(this.config.iconUrl,window.location).host !== window.location.host || W.isIE && !window.svg4everybody;
                    return {
                        url: this.config.iconUrl,
                        cors: t
                    }
                },
                findElements() {
                    try {
                        return this.elements.controls = ot.call(this, this.config.selectors.controls.wrapper),
                        this.elements.buttons = {
                            play: at.call(this, this.config.selectors.buttons.play),
                            pause: ot.call(this, this.config.selectors.buttons.pause),
                            restart: ot.call(this, this.config.selectors.buttons.restart),
                            rewind: ot.call(this, this.config.selectors.buttons.rewind),
                            fastForward: ot.call(this, this.config.selectors.buttons.fastForward),
                            mute: ot.call(this, this.config.selectors.buttons.mute),
                            pip: ot.call(this, this.config.selectors.buttons.pip),
                            airplay: ot.call(this, this.config.selectors.buttons.airplay),
                            settings: ot.call(this, this.config.selectors.buttons.settings),
                            captions: ot.call(this, this.config.selectors.buttons.captions),
                            fullscreen: ot.call(this, this.config.selectors.buttons.fullscreen)
                        },
                        this.elements.progress = ot.call(this, this.config.selectors.progress),
                        this.elements.inputs = {
                            seek: ot.call(this, this.config.selectors.inputs.seek),
                            volume: ot.call(this, this.config.selectors.inputs.volume)
                        },
                        this.elements.display = {
                            buffer: ot.call(this, this.config.selectors.display.buffer),
                            currentTime: ot.call(this, this.config.selectors.display.currentTime),
                            duration: ot.call(this, this.config.selectors.display.duration)
                        },
                        R(this.elements.progress) && (this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`)),
                        !0
                    } catch (t) {
                        return this.debug.warn("It looks like there is a problem with your custom controls HTML", t),
                        this.toggleNativeControls(!0),
                        !1
                    }
                },
                createIcon(t, e) {
                    const i = "http://www.w3.org/2000/svg"
                      , s = zt.getIconUrl.call(this)
                      , n = `${s.cors ? "" : s.url}#${this.config.iconPrefix}`
                      , r = document.createElementNS(i, "svg");
                    X(r, U(e, {
                        "aria-hidden": "true",
                        focusable: "false"
                    }));
                    const a = document.createElementNS(i, "use")
                      , o = `${n}-${t}`;
                    return "href"in a && a.setAttributeNS("http://www.w3.org/1999/xlink", "href", o),
                    a.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", o),
                    r.appendChild(a),
                    r
                },
                createLabel(t, e={}) {
                    const i = Bt.get(t, this.config);
                    return J("span", {
                        ...e,
                        class: [e.class, this.config.classNames.hidden].filter(Boolean).join(" ")
                    }, i)
                },
                createBadge(t) {
                    if (H(t))
                        return null;
                    const e = J("span", {
                        class: this.config.classNames.menu.value
                    });
                    return e.appendChild(J("span", {
                        class: this.config.classNames.menu.badge
                    }, t)),
                    e
                },
                createButton(t, e) {
                    const i = U({}, e);
                    let s = function(t="") {
                        let e = t.toString();
                        return e = function(t="") {
                            let e = t.toString();
                            return e = Dt(e, "-", " "),
                            e = Dt(e, "_", " "),
                            e = It(e),
                            Dt(e, " ", "")
                        }(e),
                        e.charAt(0).toLowerCase() + e.slice(1)
                    }(t);
                    const n = {
                        element: "button",
                        toggle: !1,
                        label: null,
                        icon: null,
                        labelPressed: null,
                        iconPressed: null
                    };
                    switch (["element", "icon", "label"].forEach(t=>{
                        Object.keys(i).includes(t) && (n[t] = i[t],
                        delete i[t])
                    }
                    ),
                    "button" !== n.element || Object.keys(i).includes("type") || (i.type = "button"),
                    Object.keys(i).includes("class") ? i.class.split(" ").some(t=>t === this.config.classNames.control) || U(i, {
                        class: `${i.class} ${this.config.classNames.control}`
                    }) : i.class = this.config.classNames.control,
                    t) {
                    case "play":
                        n.toggle = !0,
                        n.label = "play",
                        n.labelPressed = "pause",
                        n.icon = "play",
                        n.iconPressed = "pause";
                        break;
                    case "mute":
                        n.toggle = !0,
                        n.label = "mute",
                        n.labelPressed = "unmute",
                        n.icon = "volume",
                        n.iconPressed = "muted";
                        break;
                    case "captions":
                        n.toggle = !0,
                        n.label = "enableCaptions",
                        n.labelPressed = "disableCaptions",
                        n.icon = "captions-off",
                        n.iconPressed = "captions-on";
                        break;
                    case "fullscreen":
                        n.toggle = !0,
                        n.label = "enterFullscreen",
                        n.labelPressed = "exitFullscreen",
                        n.icon = "enter-fullscreen",
                        n.iconPressed = "exit-fullscreen";
                        break;
                    case "play-large":
                        i.class += ` ${this.config.classNames.control}--overlaid`,
                        s = "play",
                        n.label = "play",
                        n.icon = "play";
                        break;
                    default:
                        H(n.label) && (n.label = s),
                        H(n.icon) && (n.icon = t)
                    }
                    const r = J(n.element);
                    return n.toggle ? (r.appendChild(zt.createIcon.call(this, n.iconPressed, {
                        class: "icon--pressed"
                    })),
                    r.appendChild(zt.createIcon.call(this, n.icon, {
                        class: "icon--not-pressed"
                    })),
                    r.appendChild(zt.createLabel.call(this, n.labelPressed, {
                        class: "label--pressed"
                    })),
                    r.appendChild(zt.createLabel.call(this, n.label, {
                        class: "label--not-pressed"
                    }))) : (r.appendChild(zt.createIcon.call(this, n.icon)),
                    r.appendChild(zt.createLabel.call(this, n.label))),
                    U(i, et(this.config.selectors.buttons[s], i)),
                    X(r, i),
                    "play" === s ? (B(this.elements.buttons[s]) || (this.elements.buttons[s] = []),
                    this.elements.buttons[s].push(r)) : this.elements.buttons[s] = r,
                    r
                },
                createRange(t, e) {
                    const i = J("input", U(et(this.config.selectors.inputs[t]), {
                        type: "range",
                        min: 0,
                        max: 100,
                        step: .01,
                        value: 0,
                        autocomplete: "off",
                        role: "slider",
                        "aria-label": Bt.get(t, this.config),
                        "aria-valuemin": 0,
                        "aria-valuemax": 100,
                        "aria-valuenow": 0
                    }, e));
                    return this.elements.inputs[t] = i,
                    zt.updateRangeFill.call(this, i),
                    b.setup(i),
                    i
                },
                createProgress(t, e) {
                    const i = J("progress", U(et(this.config.selectors.display[t]), {
                        min: 0,
                        max: 100,
                        value: 0,
                        role: "progressbar",
                        "aria-hidden": !0
                    }, e));
                    if ("volume" !== t) {
                        i.appendChild(J("span", null, "0"));
                        const e = {
                            played: "played",
                            buffer: "buffered"
                        }[t]
                          , s = e ? Bt.get(e, this.config) : "";
                        i.innerText = `% ${s.toLowerCase()}`
                    }
                    return this.elements.display[t] = i,
                    i
                },
                createTime(t, e) {
                    const i = et(this.config.selectors.display[t], e)
                      , s = J("div", U(i, {
                        class: `${i.class ? i.class : ""} ${this.config.classNames.display.time} `.trim(),
                        "aria-label": Bt.get(t, this.config)
                    }), "00:00");
                    return this.elements.display[t] = s,
                    s
                },
                bindMenuItemShortcuts(t, e) {
                    dt.call(this, t, "keydown keyup", i=>{
                        if (![32, 38, 39, 40].includes(i.which))
                            return;
                        if (i.preventDefault(),
                        i.stopPropagation(),
                        "keydown" === i.type)
                            return;
                        const s = rt(t, '[role="menuitemradio"]');
                        if (!s && [32, 39].includes(i.which))
                            zt.showMenuPanel.call(this, e, !0);
                        else {
                            let e;
                            32 !== i.which && (40 === i.which || s && 39 === i.which ? (e = t.nextElementSibling,
                            R(e) || (e = t.parentNode.firstElementChild)) : (e = t.previousElementSibling,
                            R(e) || (e = t.parentNode.lastElementChild)),
                            lt.call(this, e, !0))
                        }
                    }
                    , !1),
                    dt.call(this, t, "keyup", t=>{
                        13 === t.which && zt.focusFirstMenuItem.call(this, null, !0)
                    }
                    )
                },
                createMenuItem({value: t, list: e, type: i, title: s, badge: n=null, checked: r=!1}) {
                    const a = et(this.config.selectors.inputs[i])
                      , o = J("button", U(a, {
                        type: "button",
                        role: "menuitemradio",
                        class: `${this.config.classNames.control} ${a.class ? a.class : ""}`.trim(),
                        "aria-checked": r,
                        value: t
                    }))
                      , l = J("span");
                    l.innerHTML = s,
                    R(n) && l.appendChild(n),
                    o.appendChild(l),
                    Object.defineProperty(o, "checked", {
                        enumerable: !0,
                        get: ()=>"true" === o.getAttribute("aria-checked"),
                        set(t) {
                            t && Array.from(o.parentNode.children).filter(t=>rt(t, '[role="menuitemradio"]')).forEach(t=>t.setAttribute("aria-checked", "false")),
                            o.setAttribute("aria-checked", t ? "true" : "false")
                        }
                    }),
                    this.listeners.bind(o, "click keyup", e=>{
                        if (!O(e) || 32 === e.which) {
                            switch (e.preventDefault(),
                            e.stopPropagation(),
                            o.checked = !0,
                            i) {
                            case "language":
                                this.currentTrack = Number(t);
                                break;
                            case "quality":
                                this.quality = t;
                                break;
                            case "speed":
                                this.speed = parseFloat(t)
                            }
                            zt.showMenuPanel.call(this, "home", O(e))
                        }
                    }
                    , i, !1),
                    zt.bindMenuItemShortcuts.call(this, o, i),
                    e.appendChild(o)
                },
                formatTime(t=0, e=!1) {
                    return D(t) ? qt(t, Ot(this.duration) > 0, e) : t
                },
                updateTimeDisplay(t=null, e=0, i=!1) {
                    R(t) && D(e) && (t.innerText = zt.formatTime(e, i))
                },
                updateVolume() {
                    this.supported.ui && (R(this.elements.inputs.volume) && zt.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume),
                    R(this.elements.buttons.mute) && (this.elements.buttons.mute.pressed = this.muted || 0 === this.volume))
                },
                setRange(t, e=0) {
                    R(t) && (t.value = e,
                    zt.updateRangeFill.call(this, t))
                },
                updateProgress(t) {
                    if (!this.supported.ui || !N(t))
                        return;
                    let e = 0;
                    const i = (t,e)=>{
                        const i = D(e) ? e : 0
                          , s = R(t) ? t : this.elements.display.buffer;
                        if (R(s)) {
                            s.value = i;
                            const t = s.getElementsByTagName("span")[0];
                            R(t) && (t.childNodes[0].nodeValue = i)
                        }
                    }
                    ;
                    if (t)
                        switch (t.type) {
                        case "timeupdate":
                        case "seeking":
                        case "seeked":
                            s = this.currentTime,
                            n = this.duration,
                            e = 0 === s || 0 === n || Number.isNaN(s) || Number.isNaN(n) ? 0 : (s / n * 100).toFixed(2),
                            "timeupdate" === t.type && zt.setRange.call(this, this.elements.inputs.seek, e);
                            break;
                        case "playing":
                        case "progress":
                            i(this.elements.display.buffer, 100 * this.buffered)
                        }
                    var s, n
                },
                updateRangeFill(t) {
                    const e = N(t) ? t.target : t;
                    if (R(e) && "range" === e.getAttribute("type")) {
                        if (rt(e, this.config.selectors.inputs.seek)) {
                            e.setAttribute("aria-valuenow", this.currentTime);
                            const t = zt.formatTime(this.currentTime)
                              , i = zt.formatTime(this.duration)
                              , s = Bt.get("seekLabel", this.config);
                            e.setAttribute("aria-valuetext", s.replace("{currentTime}", t).replace("{duration}", i))
                        } else if (rt(e, this.config.selectors.inputs.volume)) {
                            const t = 100 * e.value;
                            e.setAttribute("aria-valuenow", t),
                            e.setAttribute("aria-valuetext", `${t.toFixed(1)}%`)
                        } else
                            e.setAttribute("aria-valuenow", e.value);
                        W.isWebkit && e.style.setProperty("--value", e.value / e.max * 100 + "%")
                    }
                },
                updateSeekTooltip(t) {
                    if (!this.config.tooltips.seek || !R(this.elements.inputs.seek) || !R(this.elements.display.seekTooltip) || 0 === this.duration)
                        return;
                    const e = `${this.config.classNames.tooltip}--visible`
                      , i = t=>st(this.elements.display.seekTooltip, e, t);
                    if (this.touch)
                        return void i(!1);
                    let s = 0;
                    const n = this.elements.progress.getBoundingClientRect();
                    if (N(t))
                        s = 100 / n.width * (t.pageX - n.left);
                    else {
                        if (!nt(this.elements.display.seekTooltip, e))
                            return;
                        s = parseFloat(this.elements.display.seekTooltip.style.left, 10)
                    }
                    s < 0 ? s = 0 : s > 100 && (s = 100),
                    zt.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * s),
                    this.elements.display.seekTooltip.style.left = `${s}%`,
                    N(t) && ["mouseenter", "mouseleave"].includes(t.type) && i("mouseenter" === t.type)
                },
                timeUpdate(t) {
                    const e = !R(this.elements.display.duration) && this.config.invertTime;
                    zt.updateTimeDisplay.call(this, this.elements.display.currentTime, e ? this.duration - this.currentTime : this.currentTime, e),
                    t && "timeupdate" === t.type && this.media.seeking || zt.updateProgress.call(this, t)
                },
                durationUpdate() {
                    if (!this.supported.ui || !this.config.invertTime && this.currentTime)
                        return;
                    if (this.duration >= 2 ** 32)
                        return it(this.elements.display.currentTime, !0),
                        void it(this.elements.progress, !0);
                    R(this.elements.inputs.seek) && this.elements.inputs.seek.setAttribute("aria-valuemax", this.duration);
                    const t = R(this.elements.display.duration);
                    !t && this.config.displayDuration && this.paused && zt.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration),
                    t && zt.updateTimeDisplay.call(this, this.elements.display.duration, this.duration),
                    zt.updateSeekTooltip.call(this)
                },
                toggleMenuButton(t, e) {
                    it(this.elements.settings.buttons[t], !e)
                },
                updateSetting(t, e, i) {
                    const s = this.elements.settings.panels[t];
                    let n = null
                      , r = e;
                    if ("captions" === t)
                        n = this.currentTrack;
                    else {
                        if (n = H(i) ? this[t] : i,
                        H(n) && (n = this.config[t].default),
                        !H(this.options[t]) && !this.options[t].includes(n))
                            return void this.debug.warn(`Unsupported value of '${n}' for ${t}`);
                        if (!this.config[t].options.includes(n))
                            return void this.debug.warn(`Disabled value of '${n}' for ${t}`)
                    }
                    if (R(r) || (r = s && s.querySelector('[role="menu"]')),
                    !R(r))
                        return;
                    this.elements.settings.buttons[t].querySelector(`.${this.config.classNames.menu.value}`).innerHTML = zt.getLabel.call(this, t, n);
                    const a = r && r.querySelector(`[value="${n}"]`);
                    R(a) && (a.checked = !0)
                },
                getLabel(t, e) {
                    switch (t) {
                    case "speed":
                        return 1 === e ? Bt.get("normal", this.config) : `${e}&times;`;
                    case "quality":
                        if (D(e)) {
                            const t = Bt.get(`qualityLabel.${e}`, this.config);
                            return t.length ? t : `${e}p`
                        }
                        return It(e);
                    case "captions":
                        return jt.getLabel.call(this);
                    default:
                        return null
                    }
                },
                setQualityMenu(t) {
                    if (!R(this.elements.settings.panels.quality))
                        return;
                    const e = "quality"
                      , i = this.elements.settings.panels.quality.querySelector('[role="menu"]');
                    B(t) && (this.options.quality = wt(t).filter(t=>this.config.quality.options.includes(t)));
                    const s = !H(this.options.quality) && this.options.quality.length > 1;
                    if (zt.toggleMenuButton.call(this, e, s),
                    Z(i),
                    zt.checkMenu.call(this),
                    !s)
                        return;
                    const n = t=>{
                        const e = Bt.get(`qualityBadge.${t}`, this.config);
                        return e.length ? zt.createBadge.call(this, e) : null
                    }
                    ;
                    this.options.quality.sort((t,e)=>{
                        const i = this.config.quality.options;
                        return i.indexOf(t) > i.indexOf(e) ? 1 : -1
                    }
                    ).forEach(t=>{
                        zt.createMenuItem.call(this, {
                            value: t,
                            list: i,
                            type: e,
                            title: zt.getLabel.call(this, "quality", t),
                            badge: n(t)
                        })
                    }
                    ),
                    zt.updateSetting.call(this, e, i)
                },
                setCaptionsMenu() {
                    if (!R(this.elements.settings.panels.captions))
                        return;
                    const t = "captions"
                      , e = this.elements.settings.panels.captions.querySelector('[role="menu"]')
                      , i = jt.getTracks.call(this)
                      , s = Boolean(i.length);
                    if (zt.toggleMenuButton.call(this, t, s),
                    Z(e),
                    zt.checkMenu.call(this),
                    !s)
                        return;
                    const n = i.map((t,i)=>({
                        value: i,
                        checked: this.captions.toggled && this.currentTrack === i,
                        title: jt.getLabel.call(this, t),
                        badge: t.language && zt.createBadge.call(this, t.language.toUpperCase()),
                        list: e,
                        type: "language"
                    }));
                    n.unshift({
                        value: -1,
                        checked: !this.captions.toggled,
                        title: Bt.get("disabled", this.config),
                        list: e,
                        type: "language"
                    }),
                    n.forEach(zt.createMenuItem.bind(this)),
                    zt.updateSetting.call(this, t, e)
                },
                setSpeedMenu() {
                    if (!R(this.elements.settings.panels.speed))
                        return;
                    const t = "speed"
                      , e = this.elements.settings.panels.speed.querySelector('[role="menu"]');
                    this.options.speed = this.options.speed.filter(t=>t >= this.minimumSpeed && t <= this.maximumSpeed);
                    const i = !H(this.options.speed) && this.options.speed.length > 1;
                    zt.toggleMenuButton.call(this, t, i),
                    Z(e),
                    zt.checkMenu.call(this),
                    i && (this.options.speed.forEach(i=>{
                        zt.createMenuItem.call(this, {
                            value: i,
                            list: e,
                            type: t,
                            title: zt.getLabel.call(this, "speed", i)
                        })
                    }
                    ),
                    zt.updateSetting.call(this, t, e))
                },
                checkMenu() {
                    const {buttons: t} = this.elements.settings
                      , e = !H(t) && Object.values(t).some(t=>!t.hidden);
                    it(this.elements.settings.menu, !e)
                },
                focusFirstMenuItem(t, e=!1) {
                    if (this.elements.settings.popup.hidden)
                        return;
                    let i = t;
                    R(i) || (i = Object.values(this.elements.settings.panels).find(t=>!t.hidden));
                    const s = i.querySelector('[role^="menuitem"]');
                    lt.call(this, s, e)
                },
                toggleMenu(t) {
                    const {popup: e} = this.elements.settings
                      , i = this.elements.buttons.settings;
                    if (!R(e) || !R(i))
                        return;
                    const {hidden: s} = e;
                    let n = s;
                    if (F(t))
                        n = t;
                    else if (O(t) && 27 === t.which)
                        n = !1;
                    else if (N(t)) {
                        const s = L(t.composedPath) ? t.composedPath()[0] : t.target
                          , r = e.contains(s);
                        if (r || !r && t.target !== i && n)
                            return
                    }
                    i.setAttribute("aria-expanded", n),
                    it(e, !n),
                    st(this.elements.container, this.config.classNames.menu.open, n),
                    n && O(t) ? zt.focusFirstMenuItem.call(this, null, !0) : n || s || lt.call(this, i, O(t))
                },
                getMenuSize(t) {
                    const e = t.cloneNode(!0);
                    e.style.position = "absolute",
                    e.style.opacity = 0,
                    e.removeAttribute("hidden"),
                    t.parentNode.appendChild(e);
                    const i = e.scrollWidth
                      , s = e.scrollHeight;
                    return Q(e),
                    {
                        width: i,
                        height: s
                    }
                },
                showMenuPanel(t="", e=!1) {
                    const i = this.elements.container.querySelector(`#plyr-settings-${this.id}-${t}`);
                    if (!R(i))
                        return;
                    const s = i.parentNode
                      , n = Array.from(s.children).find(t=>!t.hidden);
                    if (ct.transitions && !ct.reducedMotion) {
                        s.style.width = `${n.scrollWidth}px`,
                        s.style.height = `${n.scrollHeight}px`;
                        const t = zt.getMenuSize.call(this, i)
                          , e = t=>{
                            t.target === s && ["width", "height"].includes(t.propertyName) && (s.style.width = "",
                            s.style.height = "",
                            ft.call(this, s, G, e))
                        }
                        ;
                        dt.call(this, s, G, e),
                        s.style.width = `${t.width}px`,
                        s.style.height = `${t.height}px`
                    }
                    it(n, !0),
                    it(i, !1),
                    zt.focusFirstMenuItem.call(this, i, e)
                },
                setDownloadUrl() {
                    const t = this.elements.buttons.download;
                    R(t) && t.setAttribute("href", this.download)
                },
                create(t) {
                    const {bindMenuItemShortcuts: e, createButton: i, createProgress: s, createRange: n, createTime: r, setQualityMenu: a, setSpeedMenu: o, showMenuPanel: l} = zt;
                    this.elements.controls = null,
                    B(this.config.controls) && this.config.controls.includes("play-large") && this.elements.container.appendChild(i.call(this, "play-large"));
                    const h = J("div", et(this.config.selectors.controls.wrapper));
                    this.elements.controls = h;
                    const c = {
                        class: "plyr__controls__item"
                    };
                    return wt(B(this.config.controls) ? this.config.controls : []).forEach(a=>{
                        if ("restart" === a && h.appendChild(i.call(this, "restart", c)),
                        "rewind" === a && h.appendChild(i.call(this, "rewind", c)),
                        "play" === a && h.appendChild(i.call(this, "play", c)),
                        "fast-forward" === a && h.appendChild(i.call(this, "fast-forward", c)),
                        "progress" === a) {
                            const e = J("div", {
                                class: `${c.class} plyr__progress__container`
                            })
                              , i = J("div", et(this.config.selectors.progress));
                            if (i.appendChild(n.call(this, "seek", {
                                id: `plyr-seek-${t.id}`
                            })),
                            i.appendChild(s.call(this, "buffer")),
                            this.config.tooltips.seek) {
                                const t = J("span", {
                                    class: this.config.classNames.tooltip
                                }, "00:00");
                                i.appendChild(t),
                                this.elements.display.seekTooltip = t
                            }
                            this.elements.progress = i,
                            e.appendChild(this.elements.progress),
                            h.appendChild(e)
                        }
                        if ("current-time" === a && h.appendChild(r.call(this, "currentTime", c)),
                        "duration" === a && h.appendChild(r.call(this, "duration", c)),
                        "mute" === a || "volume" === a) {
                            let {volume: e} = this.elements;
                            if (R(e) && h.contains(e) || (e = J("div", U({}, c, {
                                class: `${c.class} plyr__volume`.trim()
                            })),
                            this.elements.volume = e,
                            h.appendChild(e)),
                            "mute" === a && e.appendChild(i.call(this, "mute")),
                            "volume" === a && !W.isIos) {
                                const i = {
                                    max: 1,
                                    step: .05,
                                    value: this.config.volume
                                };
                                e.appendChild(n.call(this, "volume", U(i, {
                                    id: `plyr-volume-${t.id}`
                                })))
                            }
                        }
                        if ("captions" === a && h.appendChild(i.call(this, "captions", c)),
                        "settings" === a && !H(this.config.settings)) {
                            const s = J("div", U({}, c, {
                                class: `${c.class} plyr__menu`.trim(),
                                hidden: ""
                            }));
                            s.appendChild(i.call(this, "settings", {
                                "aria-haspopup": !0,
                                "aria-controls": `plyr-settings-${t.id}`,
                                "aria-expanded": !1
                            }));
                            const n = J("div", {
                                class: "plyr__menu__container",
                                id: `plyr-settings-${t.id}`,
                                hidden: ""
                            })
                              , r = J("div")
                              , a = J("div", {
                                id: `plyr-settings-${t.id}-home`
                            })
                              , o = J("div", {
                                role: "menu"
                            });
                            a.appendChild(o),
                            r.appendChild(a),
                            this.elements.settings.panels.home = a,
                            this.config.settings.forEach(i=>{
                                const s = J("button", U(et(this.config.selectors.buttons.settings), {
                                    type: "button",
                                    class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,
                                    role: "menuitem",
                                    "aria-haspopup": !0,
                                    hidden: ""
                                }));
                                e.call(this, s, i),
                                dt.call(this, s, "click", ()=>{
                                    l.call(this, i, !1)
                                }
                                );
                                const n = J("span", null, Bt.get(i, this.config))
                                  , a = J("span", {
                                    class: this.config.classNames.menu.value
                                });
                                a.innerHTML = t[i],
                                n.appendChild(a),
                                s.appendChild(n),
                                o.appendChild(s);
                                const h = J("div", {
                                    id: `plyr-settings-${t.id}-${i}`,
                                    hidden: ""
                                })
                                  , c = J("button", {
                                    type: "button",
                                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`
                                });
                                c.appendChild(J("span", {
                                    "aria-hidden": !0
                                }, Bt.get(i, this.config))),
                                c.appendChild(J("span", {
                                    class: this.config.classNames.hidden
                                }, Bt.get("menuBack", this.config))),
                                dt.call(this, h, "keydown", t=>{
                                    37 === t.which && (t.preventDefault(),
                                    t.stopPropagation(),
                                    l.call(this, "home", !0))
                                }
                                , !1),
                                dt.call(this, c, "click", ()=>{
                                    l.call(this, "home", !1)
                                }
                                ),
                                h.appendChild(c),
                                h.appendChild(J("div", {
                                    role: "menu"
                                })),
                                r.appendChild(h),
                                this.elements.settings.buttons[i] = s,
                                this.elements.settings.panels[i] = h
                            }
                            ),
                            n.appendChild(r),
                            s.appendChild(n),
                            h.appendChild(s),
                            this.elements.settings.popup = n,
                            this.elements.settings.menu = s
                        }
                        if ("pip" === a && ct.pip && h.appendChild(i.call(this, "pip", c)),
                        "airplay" === a && ct.airplay && h.appendChild(i.call(this, "airplay", c)),
                        "download" === a) {
                            const t = U({}, c, {
                                element: "a",
                                href: this.download,
                                target: "_blank"
                            });
                            this.isHTML5 && (t.download = "");
                            const {download: e} = this.config.urls;
                            !z(e) && this.isEmbed && U(t, {
                                icon: `logo-${this.provider}`,
                                label: this.provider
                            }),
                            h.appendChild(i.call(this, "download", t))
                        }
                        "fullscreen" === a && h.appendChild(i.call(this, "fullscreen", c))
                    }
                    ),
                    this.isHTML5 && a.call(this, _t.getQualityOptions.call(this)),
                    o.call(this),
                    h
                },
                inject() {
                    if (this.config.loadSprite) {
                        const t = zt.getIconUrl.call(this);
                        t.cors && Nt(t.url, "sprite-plyr")
                    }
                    this.id = Math.floor(1e4 * Math.random());
                    let t = null;
                    this.elements.controls = null;
                    const e = {
                        id: this.id,
                        seektime: this.config.seekTime,
                        title: this.config.title
                    };
                    let i, s = !0;
                    if (L(this.config.controls) && (this.config.controls = this.config.controls.call(this, e)),
                    this.config.controls || (this.config.controls = []),
                    R(this.config.controls) || I(this.config.controls) ? t = this.config.controls : (t = zt.create.call(this, {
                        id: this.id,
                        seektime: this.config.seekTime,
                        speed: this.speed,
                        quality: this.quality,
                        captions: jt.getLabel.call(this)
                    }),
                    s = !1),
                    s && I(this.config.controls) && (t = (t=>{
                        let i = t;
                        return Object.entries(e).forEach(([t,e])=>{
                            i = Dt(i, `{${t}}`, e)
                        }
                        ),
                        i
                    }
                    )(t)),
                    I(this.config.selectors.controls.container) && (i = document.querySelector(this.config.selectors.controls.container)),
                    R(i) || (i = this.elements.container),
                    i[R(t) ? "insertAdjacentElement" : "insertAdjacentHTML"]("afterbegin", t),
                    R(this.elements.controls) || zt.findElements.call(this),
                    !H(this.elements.buttons)) {
                        const t = t=>{
                            const e = this.config.classNames.controlPressed;
                            Object.defineProperty(t, "pressed", {
                                enumerable: !0,
                                get: ()=>nt(t, e),
                                set(i=!1) {
                                    st(t, e, i)
                                }
                            })
                        }
                        ;
                        Object.values(this.elements.buttons).filter(Boolean).forEach(e=>{
                            B(e) || V(e) ? Array.from(e).filter(Boolean).forEach(t) : t(e)
                        }
                        )
                    }
                    if (W.isEdge && j(i),
                    this.config.tooltips.controls) {
                        const {classNames: t, selectors: e} = this.config
                          , i = `${e.controls.wrapper} ${e.labels} .${t.hidden}`
                          , s = at.call(this, i);
                        Array.from(s).forEach(t=>{
                            st(t, this.config.classNames.hidden, !1),
                            st(t, this.config.classNames.tooltip, !0)
                        }
                        )
                    }
                }
            };
            function Ht(t, e=!0) {
                let i = t;
                if (e) {
                    const t = document.createElement("a");
                    t.href = i,
                    i = t.href
                }
                try {
                    return new URL(i)
                } catch (t) {
                    return null
                }
            }
            function Gt(t) {
                const e = new URLSearchParams;
                return M(t) && Object.entries(t).forEach(([t,i])=>{
                    e.set(t, i)
                }
                ),
                e
            }
            const jt = {
                setup() {
                    if (!this.supported.ui)
                        return;
                    if (!this.isVideo || this.isYouTube || this.isHTML5 && !ct.textTracks)
                        return void (B(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && zt.setCaptionsMenu.call(this));
                    var t, e;
                    if (R(this.elements.captions) || (this.elements.captions = J("div", et(this.config.selectors.captions)),
                    t = this.elements.captions,
                    e = this.elements.wrapper,
                    R(t) && R(e) && e.parentNode.insertBefore(t, e.nextSibling)),
                    W.isIE && window.URL) {
                        const t = this.media.querySelectorAll("track");
                        Array.from(t).forEach(t=>{
                            const e = t.getAttribute("src")
                              , i = Ht(e);
                            null !== i && i.hostname !== window.location.href.hostname && ["http:", "https:"].includes(i.protocol) && Rt(e, "blob").then(e=>{
                                t.setAttribute("src", window.URL.createObjectURL(e))
                            }
                            ).catch(()=>{
                                Q(t)
                            }
                            )
                        }
                        )
                    }
                    const i = wt((navigator.languages || [navigator.language || navigator.userLanguage || "en"]).map(t=>t.split("-")[0]));
                    let s = (this.storage.get("language") || this.config.captions.language || "auto").toLowerCase();
                    "auto" === s && ([s] = i);
                    let n = this.storage.get("captions");
                    if (F(n) || ({active: n} = this.config.captions),
                    Object.assign(this.captions, {
                        toggled: !1,
                        active: n,
                        language: s,
                        languages: i
                    }),
                    this.isHTML5) {
                        const t = this.config.captions.update ? "addtrack removetrack" : "removetrack";
                        dt.call(this, this.media.textTracks, t, jt.update.bind(this))
                    }
                    setTimeout(jt.update.bind(this), 0)
                },
                update() {
                    const t = jt.getTracks.call(this, !0)
                      , {active: e, language: i, meta: s, currentTrackNode: n} = this.captions
                      , r = Boolean(t.find(t=>t.language === i));
                    this.isHTML5 && this.isVideo && t.filter(t=>!s.get(t)).forEach(t=>{
                        this.debug.log("Track added", t),
                        s.set(t, {
                            default: "showing" === t.mode
                        }),
                        "showing" === t.mode && (t.mode = "hidden"),
                        dt.call(this, t, "cuechange", ()=>jt.updateCues.call(this))
                    }
                    ),
                    (r && this.language !== i || !t.includes(n)) && (jt.setLanguage.call(this, i),
                    jt.toggle.call(this, e && r)),
                    st(this.elements.container, this.config.classNames.captions.enabled, !H(t)),
                    B(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && zt.setCaptionsMenu.call(this)
                },
                toggle(t, e=!0) {
                    if (!this.supported.ui)
                        return;
                    const {toggled: i} = this.captions
                      , s = this.config.classNames.captions.active
                      , n = _(t) ? !i : t;
                    if (n !== i) {
                        if (e || (this.captions.active = n,
                        this.storage.set({
                            captions: n
                        })),
                        !this.language && n && !e) {
                            const t = jt.getTracks.call(this)
                              , e = jt.findTrack.call(this, [this.captions.language, ...this.captions.languages], !0);
                            return this.captions.language = e.language,
                            void jt.set.call(this, t.indexOf(e))
                        }
                        this.elements.buttons.captions && (this.elements.buttons.captions.pressed = n),
                        st(this.elements.container, s, n),
                        this.captions.toggled = n,
                        zt.updateSetting.call(this, "captions"),
                        gt.call(this, this.media, n ? "captionsenabled" : "captionsdisabled")
                    }
                    setTimeout(()=>{
                        n && this.captions.toggled && (this.captions.currentTrackNode.mode = "hidden")
                    }
                    )
                },
                set(t, e=!0) {
                    const i = jt.getTracks.call(this);
                    if (-1 !== t)
                        if (D(t))
                            if (t in i) {
                                if (this.captions.currentTrack !== t) {
                                    this.captions.currentTrack = t;
                                    const s = i[t]
                                      , {language: n} = s || {};
                                    this.captions.currentTrackNode = s,
                                    zt.updateSetting.call(this, "captions"),
                                    e || (this.captions.language = n,
                                    this.storage.set({
                                        language: n
                                    })),
                                    this.isVimeo && this.embed.enableTextTrack(n),
                                    gt.call(this, this.media, "languagechange")
                                }
                                jt.toggle.call(this, !0, e),
                                this.isHTML5 && this.isVideo && jt.updateCues.call(this)
                            } else
                                this.debug.warn("Track not found", t);
                        else
                            this.debug.warn("Invalid caption argument", t);
                    else
                        jt.toggle.call(this, !1, e)
                },
                setLanguage(t, e=!0) {
                    if (!I(t))
                        return void this.debug.warn("Invalid language argument", t);
                    const i = t.toLowerCase();
                    this.captions.language = i;
                    const s = jt.getTracks.call(this)
                      , n = jt.findTrack.call(this, [i]);
                    jt.set.call(this, s.indexOf(n), e)
                },
                getTracks(t=!1) {
                    return Array.from((this.media || {}).textTracks || []).filter(e=>!this.isHTML5 || t || this.captions.meta.has(e)).filter(t=>["captions", "subtitles"].includes(t.kind))
                },
                findTrack(t, e=!1) {
                    const i = jt.getTracks.call(this)
                      , s = t=>Number((this.captions.meta.get(t) || {}).default)
                      , n = Array.from(i).sort((t,e)=>s(e) - s(t));
                    let r;
                    return t.every(t=>(r = n.find(e=>e.language === t),
                    !r)),
                    r || (e ? n[0] : void 0)
                },
                getCurrentTrack() {
                    return jt.getTracks.call(this)[this.currentTrack]
                },
                getLabel(t) {
                    let e = t;
                    return !q(e) && ct.textTracks && this.captions.toggled && (e = jt.getCurrentTrack.call(this)),
                    q(e) ? H(e.label) ? H(e.language) ? Bt.get("enabled", this.config) : t.language.toUpperCase() : e.label : Bt.get("disabled", this.config)
                },
                updateCues(t) {
                    if (!this.supported.ui)
                        return;
                    if (!R(this.elements.captions))
                        return void this.debug.warn("No captions element to render to");
                    if (!_(t) && !Array.isArray(t))
                        return void this.debug.warn("updateCues: Invalid input", t);
                    let e = t;
                    if (!e) {
                        const t = jt.getCurrentTrack.call(this);
                        e = Array.from((t || {}).activeCues || []).map(t=>t.getCueAsHTML()).map(Ft)
                    }
                    const i = e.map(t=>t.trim()).join("\n");
                    if (i !== this.elements.captions.innerHTML) {
                        Z(this.elements.captions);
                        const t = J("span", et(this.config.selectors.caption));
                        t.innerHTML = i,
                        this.elements.captions.appendChild(t),
                        gt.call(this, this.media, "cuechange")
                    }
                }
            }
              , Wt = {
                enabled: !0,
                title: "",
                debug: !1,
                autoplay: !1,
                autopause: !0,
                playsinline: !0,
                seekTime: 10,
                volume: 1,
                muted: !1,
                duration: null,
                displayDuration: !0,
                invertTime: !0,
                toggleInvert: !0,
                ratio: null,
                clickToPlay: !0,
                hideControls: !0,
                resetOnEnd: !1,
                disableContextMenu: !0,
                loadSprite: !0,
                iconPrefix: "plyr",
                iconUrl: "https://cdn.plyr.io/3.6.8/plyr.svg",
                blankVideo: "https://cdn.plyr.io/static/blank.mp4",
                quality: {
                    default: 576,
                    options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],
                    forced: !1,
                    onChange: null
                },
                loop: {
                    active: !1
                },
                speed: {
                    selected: 1,
                    options: [.5, .75, 1, 1.25, 1.5, 1.75, 2, 4]
                },
                keyboard: {
                    focused: !0,
                    global: !1
                },
                tooltips: {
                    controls: !1,
                    seek: !0
                },
                captions: {
                    active: !1,
                    language: "auto",
                    update: !1
                },
                fullscreen: {
                    enabled: !0,
                    fallback: !0,
                    iosNative: !1
                },
                storage: {
                    enabled: !0,
                    key: "plyr"
                },
                controls: ["play-large", "play", "progress", "current-time", "mute", "volume", "captions", "settings", "pip", "airplay", "fullscreen"],
                settings: ["captions", "quality", "speed"],
                i18n: {
                    restart: "Restart",
                    rewind: "Rewind {seektime}s",
                    play: "Play",
                    pause: "Pause",
                    fastForward: "Forward {seektime}s",
                    seek: "Seek",
                    seekLabel: "{currentTime} of {duration}",
                    played: "Played",
                    buffered: "Buffered",
                    currentTime: "Current time",
                    duration: "Duration",
                    volume: "Volume",
                    mute: "Mute",
                    unmute: "Unmute",
                    enableCaptions: "Enable captions",
                    disableCaptions: "Disable captions",
                    download: "Download",
                    enterFullscreen: "Enter fullscreen",
                    exitFullscreen: "Exit fullscreen",
                    frameTitle: "Player for {title}",
                    captions: "Captions",
                    settings: "Settings",
                    pip: "PIP",
                    menuBack: "Go back to previous menu",
                    speed: "Speed",
                    normal: "Normal",
                    quality: "Quality",
                    loop: "Loop",
                    start: "Start",
                    end: "End",
                    all: "All",
                    reset: "Reset",
                    disabled: "Disabled",
                    enabled: "Enabled",
                    advertisement: "Ad",
                    qualityBadge: {
                        2160: "4K",
                        1440: "HD",
                        1080: "HD",
                        720: "HD",
                        576: "SD",
                        480: "SD"
                    }
                },
                urls: {
                    download: null,
                    vimeo: {
                        sdk: "https://player.vimeo.com/api/player.js",
                        iframe: "https://player.vimeo.com/video/{0}?{1}",
                        api: "https://vimeo.com/api/oembed.json?url={0}"
                    },
                    youtube: {
                        sdk: "https://www.youtube.com/iframe_api",
                        api: "https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}"
                    },
                    googleIMA: {
                        sdk: "https://imasdk.googleapis.com/js/sdkloader/ima3.js"
                    }
                },
                listeners: {
                    seek: null,
                    play: null,
                    pause: null,
                    restart: null,
                    rewind: null,
                    fastForward: null,
                    mute: null,
                    volume: null,
                    captions: null,
                    download: null,
                    fullscreen: null,
                    pip: null,
                    airplay: null,
                    speed: null,
                    quality: null,
                    loop: null,
                    language: null
                },
                events: ["ended", "progress", "stalled", "playing", "waiting", "canplay", "canplaythrough", "loadstart", "loadeddata", "loadedmetadata", "timeupdate", "volumechange", "play", "pause", "error", "seeking", "seeked", "emptied", "ratechange", "cuechange", "download", "enterfullscreen", "exitfullscreen", "captionsenabled", "captionsdisabled", "languagechange", "controlshidden", "controlsshown", "ready", "statechange", "qualitychange", "adsloaded", "adscontentpause", "adscontentresume", "adstarted", "adsmidpoint", "adscomplete", "adsallcomplete", "adsimpression", "adsclick"],
                selectors: {
                    editable: "input, textarea, select, [contenteditable]",
                    container: ".plyr",
                    controls: {
                        container: null,
                        wrapper: ".plyr__controls"
                    },
                    labels: "[data-plyr]",
                    buttons: {
                        play: '[data-plyr="play"]',
                        pause: '[data-plyr="pause"]',
                        restart: '[data-plyr="restart"]',
                        rewind: '[data-plyr="rewind"]',
                        fastForward: '[data-plyr="fast-forward"]',
                        mute: '[data-plyr="mute"]',
                        captions: '[data-plyr="captions"]',
                        download: '[data-plyr="download"]',
                        fullscreen: '[data-plyr="fullscreen"]',
                        pip: '[data-plyr="pip"]',
                        airplay: '[data-plyr="airplay"]',
                        settings: '[data-plyr="settings"]',
                        loop: '[data-plyr="loop"]'
                    },
                    inputs: {
                        seek: '[data-plyr="seek"]',
                        volume: '[data-plyr="volume"]',
                        speed: '[data-plyr="speed"]',
                        language: '[data-plyr="language"]',
                        quality: '[data-plyr="quality"]'
                    },
                    display: {
                        currentTime: ".plyr__time--current",
                        duration: ".plyr__time--duration",
                        buffer: ".plyr__progress__buffer",
                        loop: ".plyr__progress__loop",
                        volume: ".plyr__volume--display"
                    },
                    progress: ".plyr__progress",
                    captions: ".plyr__captions",
                    caption: ".plyr__caption"
                },
                classNames: {
                    type: "plyr--{0}",
                    provider: "plyr--{0}",
                    video: "plyr__video-wrapper",
                    embed: "plyr__video-embed",
                    videoFixedRatio: "plyr__video-wrapper--fixed-ratio",
                    embedContainer: "plyr__video-embed__container",
                    poster: "plyr__poster",
                    posterEnabled: "plyr__poster-enabled",
                    ads: "plyr__ads",
                    control: "plyr__control",
                    controlPressed: "plyr__control--pressed",
                    playing: "plyr--playing",
                    paused: "plyr--paused",
                    stopped: "plyr--stopped",
                    loading: "plyr--loading",
                    hover: "plyr--hover",
                    tooltip: "plyr__tooltip",
                    cues: "plyr__cues",
                    hidden: "plyr__sr-only",
                    hideControls: "plyr--hide-controls",
                    isIos: "plyr--is-ios",
                    isTouch: "plyr--is-touch",
                    uiSupported: "plyr--full-ui",
                    noTransition: "plyr--no-transition",
                    display: {
                        time: "plyr__time"
                    },
                    menu: {
                        value: "plyr__menu__value",
                        badge: "plyr__badge",
                        open: "plyr--menu-open"
                    },
                    captions: {
                        enabled: "plyr--captions-enabled",
                        active: "plyr--captions-active"
                    },
                    fullscreen: {
                        enabled: "plyr--fullscreen-enabled",
                        fallback: "plyr--fullscreen-fallback"
                    },
                    pip: {
                        supported: "plyr--pip-supported",
                        active: "plyr--pip-active"
                    },
                    airplay: {
                        supported: "plyr--airplay-supported",
                        active: "plyr--airplay-active"
                    },
                    tabFocus: "plyr__tab-focus",
                    previewThumbnails: {
                        thumbContainer: "plyr__preview-thumb",
                        thumbContainerShown: "plyr__preview-thumb--is-shown",
                        imageContainer: "plyr__preview-thumb__image-container",
                        timeContainer: "plyr__preview-thumb__time-container",
                        scrubbingContainer: "plyr__preview-scrubbing",
                        scrubbingContainerShown: "plyr__preview-scrubbing--is-shown"
                    }
                },
                attributes: {
                    embed: {
                        provider: "data-plyr-provider",
                        id: "data-plyr-embed-id"
                    }
                },
                ads: {
                    enabled: !1,
                    publisherId: "",
                    tagUrl: ""
                },
                previewThumbnails: {
                    enabled: !1,
                    src: ""
                },
                vimeo: {
                    byline: !1,
                    portrait: !1,
                    title: !1,
                    speed: !0,
                    transparent: !1,
                    customControls: !0,
                    referrerPolicy: null,
                    premium: !1
                },
                youtube: {
                    rel: 0,
                    showinfo: 0,
                    iv_load_policy: 3,
                    modestbranding: 1,
                    customControls: !0,
                    noCookie: !1
                }
            }
              , $t = "picture-in-picture"
              , Ut = {
                html5: "html5",
                youtube: "youtube",
                vimeo: "vimeo"
            }
              , Yt = ()=>{}
            ;
            class Xt {
                constructor(t=!1) {
                    this.enabled = window.console && t,
                    this.enabled && this.log("Debugging enabled")
                }
                get log() {
                    return this.enabled ? Function.prototype.bind.call(console.log, console) : Yt
                }
                get warn() {
                    return this.enabled ? Function.prototype.bind.call(console.warn, console) : Yt
                }
                get error() {
                    return this.enabled ? Function.prototype.bind.call(console.error, console) : Yt
                }
            }
            class Jt {
                constructor(e) {
                    t(this, "onChange", ()=>{
                        if (!this.enabled)
                            return;
                        const t = this.player.elements.buttons.fullscreen;
                        R(t) && (t.pressed = this.active);
                        const e = this.target === this.player.media ? this.target : this.player.elements.container;
                        gt.call(this.player, e, this.active ? "enterfullscreen" : "exitfullscreen", !0)
                    }
                    ),
                    t(this, "toggleFallback", (t=!1)=>{
                        if (t ? this.scrollPosition = {
                            x: window.scrollX || 0,
                            y: window.scrollY || 0
                        } : window.scrollTo(this.scrollPosition.x, this.scrollPosition.y),
                        document.body.style.overflow = t ? "hidden" : "",
                        st(this.target, this.player.config.classNames.fullscreen.fallback, t),
                        W.isIos) {
                            let e = document.head.querySelector('meta[name="viewport"]');
                            const i = "viewport-fit=cover";
                            e || (e = document.createElement("meta"),
                            e.setAttribute("name", "viewport"));
                            const s = I(e.content) && e.content.includes(i);
                            t ? (this.cleanupViewport = !s,
                            s || (e.content += `,${i}`)) : this.cleanupViewport && (e.content = e.content.split(",").filter(t=>t.trim() !== i).join(","))
                        }
                        this.onChange()
                    }
                    ),
                    t(this, "trapFocus", t=>{
                        if (W.isIos || !this.active || "Tab" !== t.key || 9 !== t.keyCode)
                            return;
                        const e = document.activeElement
                          , i = at.call(this.player, "a[href], button:not(:disabled), input:not(:disabled), [tabindex]")
                          , [s] = i
                          , n = i[i.length - 1];
                        e !== n || t.shiftKey ? e === s && t.shiftKey && (n.focus(),
                        t.preventDefault()) : (s.focus(),
                        t.preventDefault())
                    }
                    ),
                    t(this, "update", ()=>{
                        if (this.enabled) {
                            let t;
                            t = this.forceFallback ? "Fallback (forced)" : Jt.native ? "Native" : "Fallback",
                            this.player.debug.log(`${t} fullscreen enabled`)
                        } else
                            this.player.debug.log("Fullscreen not supported and fallback disabled");
                        st(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled)
                    }
                    ),
                    t(this, "enter", ()=>{
                        this.enabled && (W.isIos && this.player.config.fullscreen.iosNative ? this.player.isVimeo ? this.player.embed.requestFullscreen() : this.target.webkitEnterFullscreen() : !Jt.native || this.forceFallback ? this.toggleFallback(!0) : this.prefix ? H(this.prefix) || this.target[`${this.prefix}Request ${this.property}`]() : this.target.requestFullscreen({
                            navigationUI: "hide"
                        }))
                    }
                    ),
                    t(this, "exit", ()=>{
                        if (this.enabled)
                            if (W.isIos && this.player.config.fullscreen.iosNative)
                                this.target.webkitExitFullscreen(),
                                bt(this.player.play());
                            else if (!Jt.native || this.forceFallback)
                                this.toggleFallback(!1);
                            else if (this.prefix) {
                                if (!H(this.prefix)) {
                                    const t = "moz" === this.prefix ? "Cancel" : "Exit";
                                    document[`${this.prefix}${t}${this.property}`]()
                                }
                            } else
                                (document.cancelFullScreen || document.exitFullscreen).call(document)
                    }
                    ),
                    t(this, "toggle", ()=>{
                        this.active ? this.exit() : this.enter()
                    }
                    ),
                    this.player = e,
                    this.prefix = Jt.prefix,
                    this.property = Jt.property,
                    this.scrollPosition = {
                        x: 0,
                        y: 0
                    },
                    this.forceFallback = "force" === e.config.fullscreen.fallback,
                    this.player.elements.fullscreen = e.config.fullscreen.container && function(t, e) {
                        const {prototype: i} = Element;
                        return (i.closest || function() {
                            let t = this;
                            do {
                                if (rt.matches(t, e))
                                    return t;
                                t = t.parentElement || t.parentNode
                            } while (null !== t && 1 === t.nodeType);
                            return null
                        }
                        ).call(t, e)
                    }(this.player.elements.container, e.config.fullscreen.container),
                    dt.call(this.player, document, "ms" === this.prefix ? "MSFullscreenChange" : `${this.prefix}fullscreenchange`, ()=>{
                        this.onChange()
                    }
                    ),
                    dt.call(this.player, this.player.elements.container, "dblclick", t=>{
                        R(this.player.elements.controls) && this.player.elements.controls.contains(t.target) || this.player.listeners.proxy(t, this.toggle, "fullscreen")
                    }
                    ),
                    dt.call(this, this.player.elements.container, "keydown", t=>this.trapFocus(t)),
                    this.update()
                }
                static get native() {
                    return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)
                }
                get usingNative() {
                    return Jt.native && !this.forceFallback
                }
                static get prefix() {
                    if (L(document.exitFullscreen))
                        return "";
                    let t = "";
                    return ["webkit", "moz", "ms"].some(e=>!(!L(document[`${e}ExitFullscreen`]) && !L(document[`${e}CancelFullScreen`]) || (t = e,
                    0))),
                    t
                }
                static get property() {
                    return "moz" === this.prefix ? "FullScreen" : "Fullscreen"
                }
                get enabled() {
                    return (Jt.native || this.player.config.fullscreen.fallback) && this.player.config.fullscreen.enabled && this.player.supported.ui && this.player.isVideo
                }
                get active() {
                    if (!this.enabled)
                        return !1;
                    if (!Jt.native || this.forceFallback)
                        return nt(this.target, this.player.config.classNames.fullscreen.fallback);
                    const t = this.prefix ? document[`${this.prefix}${this.property}Element`] : document.fullscreenElement;
                    return t && t.shadowRoot ? t === this.target.getRootNode().host : t === this.target
                }
                get target() {
                    return W.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.fullscreen || this.player.elements.container
                }
            }
            function Kt(t, e=1) {
                return new Promise((i,s)=>{
                    const n = new Image
                      , r = ()=>{
                        delete n.onload,
                        delete n.onerror,
                        (n.naturalWidth >= e ? i : s)(n)
                    }
                    ;
                    Object.assign(n, {
                        onload: r,
                        onerror: r,
                        src: t
                    })
                }
                )
            }
            const Qt = {
                addStyleHook() {
                    st(this.elements.container, this.config.selectors.container.replace(".", ""), !0),
                    st(this.elements.container, this.config.classNames.uiSupported, this.supported.ui)
                },
                toggleNativeControls(t=!1) {
                    t && this.isHTML5 ? this.media.setAttribute("controls", "") : this.media.removeAttribute("controls")
                },
                build() {
                    if (this.listeners.media(),
                    !this.supported.ui)
                        return this.debug.warn(`Basic support only for ${this.provider} ${this.type}`),
                        void Qt.toggleNativeControls.call(this, !0);
                    R(this.elements.controls) || (zt.inject.call(this),
                    this.listeners.controls()),
                    Qt.toggleNativeControls.call(this),
                    this.isHTML5 && jt.setup.call(this),
                    this.volume = null,
                    this.muted = null,
                    this.loop = null,
                    this.quality = null,
                    this.speed = null,
                    zt.updateVolume.call(this),
                    zt.timeUpdate.call(this),
                    Qt.checkPlaying.call(this),
                    st(this.elements.container, this.config.classNames.pip.supported, ct.pip && this.isHTML5 && this.isVideo),
                    st(this.elements.container, this.config.classNames.airplay.supported, ct.airplay && this.isHTML5),
                    st(this.elements.container, this.config.classNames.isIos, W.isIos),
                    st(this.elements.container, this.config.classNames.isTouch, this.touch),
                    this.ready = !0,
                    setTimeout(()=>{
                        gt.call(this, this.media, "ready")
                    }
                    , 0),
                    Qt.setTitle.call(this),
                    this.poster && Qt.setPoster.call(this, this.poster, !1).catch(()=>{}
                    ),
                    this.config.duration && zt.durationUpdate.call(this)
                },
                setTitle() {
                    let t = Bt.get("play", this.config);
                    if (I(this.config.title) && !H(this.config.title) && (t += `, ${this.config.title}`),
                    Array.from(this.elements.buttons.play || []).forEach(e=>{
                        e.setAttribute("aria-label", t)
                    }
                    ),
                    this.isEmbed) {
                        const t = ot.call(this, "iframe");
                        if (!R(t))
                            return;
                        const e = H(this.config.title) ? "video" : this.config.title
                          , i = Bt.get("frameTitle", this.config);
                        t.setAttribute("title", i.replace("{title}", e))
                    }
                },
                togglePoster(t) {
                    st(this.elements.container, this.config.classNames.posterEnabled, t)
                },
                setPoster(t, e=!0) {
                    return e && this.poster ? Promise.reject(new Error("Poster already set")) : (this.media.setAttribute("data-poster", t),
                    this.elements.poster.removeAttribute("hidden"),
                    vt.call(this).then(()=>Kt(t)).catch(e=>{
                        throw t === this.poster && Qt.togglePoster.call(this, !1),
                        e
                    }
                    ).then(()=>{
                        if (t !== this.poster)
                            throw new Error("setPoster cancelled by later call to setPoster")
                    }
                    ).then(()=>(Object.assign(this.elements.poster.style, {
                        backgroundImage: `url('${t}')`,
                        backgroundSize: ""
                    }),
                    Qt.togglePoster.call(this, !0),
                    t)))
                },
                checkPlaying(t) {
                    st(this.elements.container, this.config.classNames.playing, this.playing),
                    st(this.elements.container, this.config.classNames.paused, this.paused),
                    st(this.elements.container, this.config.classNames.stopped, this.stopped),
                    Array.from(this.elements.buttons.play || []).forEach(t=>{
                        Object.assign(t, {
                            pressed: this.playing
                        }),
                        t.setAttribute("aria-label", Bt.get(this.playing ? "pause" : "play", this.config))
                    }
                    ),
                    N(t) && "timeupdate" === t.type || Qt.toggleControls.call(this)
                },
                checkLoading(t) {
                    this.loading = ["stalled", "waiting"].includes(t.type),
                    clearTimeout(this.timers.loading),
                    this.timers.loading = setTimeout(()=>{
                        st(this.elements.container, this.config.classNames.loading, this.loading),
                        Qt.toggleControls.call(this)
                    }
                    , this.loading ? 250 : 0)
                },
                toggleControls(t) {
                    const {controls: e} = this.elements;
                    if (e && this.config.hideControls) {
                        const i = this.touch && this.lastSeekTime + 2e3 > Date.now();
                        this.toggleControls(Boolean(t || this.loading || this.paused || e.pressed || e.hover || i))
                    }
                },
                migrateStyles() {
                    Object.values({
                        ...this.media.style
                    }).filter(t=>!H(t) && I(t) && t.startsWith("--plyr")).forEach(t=>{
                        this.elements.container.style.setProperty(t, this.media.style.getPropertyValue(t)),
                        this.media.style.removeProperty(t)
                    }
                    ),
                    H(this.media.style) && this.media.removeAttribute("style")
                }
            };
            class Zt {
                constructor(e) {
                    t(this, "firstTouch", ()=>{
                        const {player: t} = this
                          , {elements: e} = t;
                        t.touch = !0,
                        st(e.container, t.config.classNames.isTouch, !0)
                    }
                    ),
                    t(this, "setTabFocus", t=>{
                        const {player: e} = this
                          , {elements: i} = e;
                        if (clearTimeout(this.focusTimer),
                        "keydown" === t.type && 9 !== t.which)
                            return;
                        "keydown" === t.type && (this.lastKeyDown = t.timeStamp);
                        const s = t.timeStamp - this.lastKeyDown <= 20;
                        ("focus" !== t.type || s) && ((()=>{
                            const t = e.config.classNames.tabFocus;
                            st(at.call(e, `.${t}`), t, !1)
                        }
                        )(),
                        "focusout" !== t.type && (this.focusTimer = setTimeout(()=>{
                            const t = document.activeElement;
                            i.container.contains(t) && st(document.activeElement, e.config.classNames.tabFocus, !0)
                        }
                        , 10)))
                    }
                    ),
                    t(this, "global", (t=!0)=>{
                        const {player: e} = this;
                        e.config.keyboard.global && pt.call(e, window, "keydown keyup", this.handleKey, t, !1),
                        pt.call(e, document.body, "click", this.toggleMenu, t),
                        mt.call(e, document.body, "touchstart", this.firstTouch),
                        pt.call(e, document.body, "keydown focus blur focusout", this.setTabFocus, t, !1, !0)
                    }
                    ),
                    t(this, "container", ()=>{
                        const {player: t} = this
                          , {config: e, elements: i, timers: s} = t;
                        !e.keyboard.global && e.keyboard.focused && dt.call(t, i.container, "keydown keyup", this.handleKey, !1),
                        dt.call(t, i.container, "mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen", e=>{
                            const {controls: n} = i;
                            n && "enterfullscreen" === e.type && (n.pressed = !1,
                            n.hover = !1);
                            let r = 0;
                            ["touchstart", "touchmove", "mousemove"].includes(e.type) && (Qt.toggleControls.call(t, !0),
                            r = t.touch ? 3e3 : 2e3),
                            clearTimeout(s.controls),
                            s.controls = setTimeout(()=>Qt.toggleControls.call(t, !1), r)
                        }
                        );
                        const n = ()=>{
                            if (!t.isVimeo || t.config.vimeo.premium)
                                return;
                            const e = i.wrapper
                              , {active: s} = t.fullscreen
                              , [n,r] = Ct.call(t)
                              , a = Et(`aspect-ratio: ${n} / ${r}`);
                            if (!s)
                                return void (a ? (e.style.width = null,
                                e.style.height = null) : (e.style.maxWidth = null,
                                e.style.margin = null));
                            const [o,l] = [Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0), Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)]
                              , h = o / l > n / r;
                            a ? (e.style.width = h ? "auto" : "100%",
                            e.style.height = h ? "100%" : "auto") : (e.style.maxWidth = h ? l / r * n + "px" : null,
                            e.style.margin = h ? "0 auto" : null)
                        }
                          , r = ()=>{
                            clearTimeout(s.resized),
                            s.resized = setTimeout(n, 50)
                        }
                        ;
                        dt.call(t, i.container, "enterfullscreen exitfullscreen", e=>{
                            const {target: s} = t.fullscreen;
                            s === i.container && (!t.isEmbed && H(t.config.ratio) || (n(),
                            ("enterfullscreen" === e.type ? dt : ft).call(t, window, "resize", r)))
                        }
                        )
                    }
                    ),
                    t(this, "media", ()=>{
                        const {player: t} = this
                          , {elements: e} = t;
                        if (dt.call(t, t.media, "timeupdate seeking seeked", e=>zt.timeUpdate.call(t, e)),
                        dt.call(t, t.media, "durationchange loadeddata loadedmetadata", e=>zt.durationUpdate.call(t, e)),
                        dt.call(t, t.media, "ended", ()=>{
                            t.isHTML5 && t.isVideo && t.config.resetOnEnd && (t.restart(),
                            t.pause())
                        }
                        ),
                        dt.call(t, t.media, "progress playing seeking seeked", e=>zt.updateProgress.call(t, e)),
                        dt.call(t, t.media, "volumechange", e=>zt.updateVolume.call(t, e)),
                        dt.call(t, t.media, "playing play pause ended emptied timeupdate", e=>Qt.checkPlaying.call(t, e)),
                        dt.call(t, t.media, "waiting canplay seeked playing", e=>Qt.checkLoading.call(t, e)),
                        t.supported.ui && t.config.clickToPlay && !t.isAudio) {
                            const i = ot.call(t, `.${t.config.classNames.video}`);
                            if (!R(i))
                                return;
                            dt.call(t, e.container, "click", s=>{
                                ([e.container, i].includes(s.target) || i.contains(s.target)) && (t.touch && t.config.hideControls || (t.ended ? (this.proxy(s, t.restart, "restart"),
                                this.proxy(s, ()=>{
                                    bt(t.play())
                                }
                                , "play")) : this.proxy(s, ()=>{
                                    bt(t.togglePlay())
                                }
                                , "play")))
                            }
                            )
                        }
                        t.supported.ui && t.config.disableContextMenu && dt.call(t, e.wrapper, "contextmenu", t=>{
                            t.preventDefault()
                        }
                        , !1),
                        dt.call(t, t.media, "volumechange", ()=>{
                            t.storage.set({
                                volume: t.volume,
                                muted: t.muted
                            })
                        }
                        ),
                        dt.call(t, t.media, "ratechange", ()=>{
                            zt.updateSetting.call(t, "speed"),
                            t.storage.set({
                                speed: t.speed
                            })
                        }
                        ),
                        dt.call(t, t.media, "qualitychange", e=>{
                            zt.updateSetting.call(t, "quality", null, e.detail.quality)
                        }
                        ),
                        dt.call(t, t.media, "ready qualitychange", ()=>{
                            zt.setDownloadUrl.call(t)
                        }
                        );
                        const i = t.config.events.concat(["keyup", "keydown"]).join(" ");
                        dt.call(t, t.media, i, i=>{
                            let {detail: s={}} = i;
                            "error" === i.type && (s = t.media.error),
                            gt.call(t, e.container, i.type, !0, s)
                        }
                        )
                    }
                    ),
                    t(this, "proxy", (t,e,i)=>{
                        const {player: s} = this
                          , n = s.config.listeners[i];
                        let r = !0;
                        L(n) && (r = n.call(s, t)),
                        !1 !== r && L(e) && e.call(s, t)
                    }
                    ),
                    t(this, "bind", (t,e,i,s,n=!0)=>{
                        const {player: r} = this
                          , a = r.config.listeners[s]
                          , o = L(a);
                        dt.call(r, t, e, t=>this.proxy(t, i, s), n && !o)
                    }
                    ),
                    t(this, "controls", ()=>{
                        const {player: t} = this
                          , {elements: e} = t
                          , i = W.isIE ? "change" : "input";
                        if (e.buttons.play && Array.from(e.buttons.play).forEach(e=>{
                            this.bind(e, "click", ()=>{
                                bt(t.togglePlay())
                            }
                            , "play")
                        }
                        ),
                        this.bind(e.buttons.restart, "click", t.restart, "restart"),
                        this.bind(e.buttons.rewind, "click", ()=>{
                            t.lastSeekTime = Date.now(),
                            t.rewind()
                        }
                        , "rewind"),
                        this.bind(e.buttons.fastForward, "click", ()=>{
                            t.lastSeekTime = Date.now(),
                            t.forward()
                        }
                        , "fastForward"),
                        this.bind(e.buttons.mute, "click", ()=>{
                            t.muted = !t.muted
                        }
                        , "mute"),
                        this.bind(e.buttons.captions, "click", ()=>t.toggleCaptions()),
                        this.bind(e.buttons.download, "click", ()=>{
                            gt.call(t, t.media, "download")
                        }
                        , "download"),
                        this.bind(e.buttons.fullscreen, "click", ()=>{
                            t.fullscreen.toggle()
                        }
                        , "fullscreen"),
                        this.bind(e.buttons.pip, "click", ()=>{
                            t.pip = "toggle"
                        }
                        , "pip"),
                        this.bind(e.buttons.airplay, "click", t.airplay, "airplay"),
                        this.bind(e.buttons.settings, "click", e=>{
                            e.stopPropagation(),
                            e.preventDefault(),
                            zt.toggleMenu.call(t, e)
                        }
                        , null, !1),
                        this.bind(e.buttons.settings, "keyup", e=>{
                            const i = e.which;
                            [13, 32].includes(i) && (13 !== i ? (e.preventDefault(),
                            e.stopPropagation(),
                            zt.toggleMenu.call(t, e)) : zt.focusFirstMenuItem.call(t, null, !0))
                        }
                        , null, !1),
                        this.bind(e.settings.menu, "keydown", e=>{
                            27 === e.which && zt.toggleMenu.call(t, e)
                        }
                        ),
                        this.bind(e.inputs.seek, "mousedown mousemove", t=>{
                            const i = e.progress.getBoundingClientRect()
                              , s = 100 / i.width * (t.pageX - i.left);
                            t.currentTarget.setAttribute("seek-value", s)
                        }
                        ),
                        this.bind(e.inputs.seek, "mousedown mouseup keydown keyup touchstart touchend", e=>{
                            const i = e.currentTarget
                              , s = e.keyCode ? e.keyCode : e.which
                              , n = "play-on-seeked";
                            if (O(e) && 39 !== s && 37 !== s)
                                return;
                            t.lastSeekTime = Date.now();
                            const r = i.hasAttribute(n)
                              , a = ["mouseup", "touchend", "keyup"].includes(e.type);
                            r && a ? (i.removeAttribute(n),
                            bt(t.play())) : !a && t.playing && (i.setAttribute(n, ""),
                            t.pause())
                        }
                        ),
                        W.isIos) {
                            const e = at.call(t, 'input[type="range"]');
                            Array.from(e).forEach(t=>this.bind(t, i, t=>j(t.target)))
                        }
                        this.bind(e.inputs.seek, i, e=>{
                            const i = e.currentTarget;
                            let s = i.getAttribute("seek-value");
                            H(s) && (s = i.value),
                            i.removeAttribute("seek-value"),
                            t.currentTime = s / i.max * t.duration
                        }
                        , "seek"),
                        this.bind(e.progress, "mouseenter mouseleave mousemove", e=>zt.updateSeekTooltip.call(t, e)),
                        this.bind(e.progress, "mousemove touchmove", e=>{
                            const {previewThumbnails: i} = t;
                            i && i.loaded && i.startMove(e)
                        }
                        ),
                        this.bind(e.progress, "mouseleave touchend click", ()=>{
                            const {previewThumbnails: e} = t;
                            e && e.loaded && e.endMove(!1, !0)
                        }
                        ),
                        this.bind(e.progress, "mousedown touchstart", e=>{
                            const {previewThumbnails: i} = t;
                            i && i.loaded && i.startScrubbing(e)
                        }
                        ),
                        this.bind(e.progress, "mouseup touchend", e=>{
                            const {previewThumbnails: i} = t;
                            i && i.loaded && i.endScrubbing(e)
                        }
                        ),
                        W.isWebkit && Array.from(at.call(t, 'input[type="range"]')).forEach(e=>{
                            this.bind(e, "input", e=>zt.updateRangeFill.call(t, e.target))
                        }
                        ),
                        t.config.toggleInvert && !R(e.display.duration) && this.bind(e.display.currentTime, "click", ()=>{
                            0 !== t.currentTime && (t.config.invertTime = !t.config.invertTime,
                            zt.timeUpdate.call(t))
                        }
                        ),
                        this.bind(e.inputs.volume, i, e=>{
                            t.volume = e.target.value
                        }
                        , "volume"),
                        this.bind(e.controls, "mouseenter mouseleave", i=>{
                            e.controls.hover = !t.touch && "mouseenter" === i.type
                        }
                        ),
                        e.fullscreen && Array.from(e.fullscreen.children).filter(t=>!t.contains(e.container)).forEach(i=>{
                            this.bind(i, "mouseenter mouseleave", i=>{
                                e.controls.hover = !t.touch && "mouseenter" === i.type
                            }
                            )
                        }
                        ),
                        this.bind(e.controls, "mousedown mouseup touchstart touchend touchcancel", t=>{
                            e.controls.pressed = ["mousedown", "touchstart"].includes(t.type)
                        }
                        ),
                        this.bind(e.controls, "focusin", ()=>{
                            const {config: i, timers: s} = t;
                            st(e.controls, i.classNames.noTransition, !0),
                            Qt.toggleControls.call(t, !0),
                            setTimeout(()=>{
                                st(e.controls, i.classNames.noTransition, !1)
                            }
                            , 0);
                            const n = this.touch ? 3e3 : 4e3;
                            clearTimeout(s.controls),
                            s.controls = setTimeout(()=>Qt.toggleControls.call(t, !1), n)
                        }
                        ),
                        this.bind(e.inputs.volume, "wheel", e=>{
                            const i = e.webkitDirectionInvertedFromDevice
                              , [s,n] = [e.deltaX, -e.deltaY].map(t=>i ? -t : t)
                              , r = Math.sign(Math.abs(s) > Math.abs(n) ? s : n);
                            t.increaseVolume(r / 50);
                            const {volume: a} = t.media;
                            (1 === r && a < 1 || -1 === r && a > 0) && e.preventDefault()
                        }
                        , "volume", !1)
                    }
                    ),
                    this.player = e,
                    this.lastKey = null,
                    this.focusTimer = null,
                    this.lastKeyDown = null,
                    this.handleKey = this.handleKey.bind(this),
                    this.toggleMenu = this.toggleMenu.bind(this),
                    this.setTabFocus = this.setTabFocus.bind(this),
                    this.firstTouch = this.firstTouch.bind(this)
                }
                handleKey(t) {
                    const {player: e} = this
                      , {elements: i} = e
                      , s = t.keyCode ? t.keyCode : t.which
                      , n = "keydown" === t.type
                      , r = n && s === this.lastKey;
                    if (!(t.altKey || t.ctrlKey || t.metaKey || t.shiftKey) && D(s))
                        if (n) {
                            const n = document.activeElement;
                            if (R(n)) {
                                const {editable: s} = e.config.selectors
                                  , {seek: r} = i.inputs;
                                if (n !== r && rt(n, s))
                                    return;
                                if (32 === t.which && rt(n, 'button, [role^="menuitem"]'))
                                    return
                            }
                            switch ([32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79].includes(s) && (t.preventDefault(),
                            t.stopPropagation()),
                            s) {
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                                r || (e.currentTime = e.duration / 10 * (s - 48));
                                break;
                            case 32:
                            case 75:
                                r || bt(e.togglePlay());
                                break;
                            case 38:
                                e.increaseVolume(.1);
                                break;
                            case 40:
                                e.decreaseVolume(.1);
                                break;
                            case 77:
                                r || (e.muted = !e.muted);
                                break;
                            case 39:
                                e.forward();
                                break;
                            case 37:
                                e.rewind();
                                break;
                            case 70:
                                e.fullscreen.toggle();
                                break;
                            case 67:
                                r || e.toggleCaptions();
                                break;
                            case 76:
                                e.loop = !e.loop
                            }
                            27 === s && !e.fullscreen.usingNative && e.fullscreen.active && e.fullscreen.toggle(),
                            this.lastKey = s
                        } else
                            this.lastKey = null
                }
                toggleMenu(t) {
                    zt.toggleMenu.call(this.player, t)
                }
            }
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== e || "undefined" != typeof self && self;
            var te = function(t, e) {
                return function(t, e) {
                    t.exports = function() {
                        var t = function() {}
                          , e = {}
                          , i = {}
                          , s = {};
                        function n(t, e) {
                            if (t) {
                                var n = s[t];
                                if (i[t] = e,
                                n)
                                    for (; n.length; )
                                        n[0](t, e),
                                        n.splice(0, 1)
                            }
                        }
                        function r(e, i) {
                            e.call && (e = {
                                success: e
                            }),
                            i.length ? (e.error || t)(i) : (e.success || t)(e)
                        }
                        function a(e, i, s, n) {
                            var r, o, l = document, h = s.async, c = (s.numRetries || 0) + 1, u = s.before || t, p = e.replace(/[\?|#].*$/, ""), d = e.replace(/^(css|img)!/, "");
                            n = n || 0,
                            /(^css!|\.css$)/.test(p) ? ((o = l.createElement("link")).rel = "stylesheet",
                            o.href = d,
                            (r = "hideFocus"in o) && o.relList && (r = 0,
                            o.rel = "preload",
                            o.as = "style")) : /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(p) ? (o = l.createElement("img")).src = d : ((o = l.createElement("script")).src = e,
                            o.async = void 0 === h || h),
                            o.onload = o.onerror = o.onbeforeload = function(t) {
                                var l = t.type[0];
                                if (r)
                                    try {
                                        o.sheet.cssText.length || (l = "e")
                                    } catch (t) {
                                        18 != t.code && (l = "e")
                                    }
                                if ("e" == l) {
                                    if ((n += 1) < c)
                                        return a(e, i, s, n)
                                } else if ("preload" == o.rel && "style" == o.as)
                                    return o.rel = "stylesheet";
                                i(e, l, t.defaultPrevented)
                            }
                            ,
                            !1 !== u(e, o) && l.head.appendChild(o)
                        }
                        function o(t, e, i) {
                            var s, n, r = (t = t.push ? t : [t]).length, o = r, l = [];
                            for (s = function(t, i, s) {
                                if ("e" == i && l.push(t),
                                "b" == i) {
                                    if (!s)
                                        return;
                                    l.push(t)
                                }
                                --r || e(l)
                            }
                            ,
                            n = 0; n < o; n++)
                                a(t[n], s, i)
                        }
                        function l(t, i, s) {
                            var a, l;
                            if (i && i.trim && (a = i),
                            l = (a ? s : i) || {},
                            a) {
                                if (a in e)
                                    throw "LoadJS";
                                e[a] = !0
                            }
                            function h(e, i) {
                                o(t, (function(t) {
                                    r(l, t),
                                    e && r({
                                        success: e,
                                        error: i
                                    }, t),
                                    n(a, t)
                                }
                                ), l)
                            }
                            if (l.returnPromise)
                                return new Promise(h);
                            h()
                        }
                        return l.ready = function(t, e) {
                            return function(t, e) {
                                t = t.push ? t : [t];
                                var n, r, a, o = [], l = t.length, h = l;
                                for (n = function(t, i) {
                                    i.length && o.push(t),
                                    --h || e(o)
                                }
                                ; l--; )
                                    r = t[l],
                                    (a = i[r]) ? n(r, a) : (s[r] = s[r] || []).push(n)
                            }(t, (function(t) {
                                r(e, t)
                            }
                            )),
                            l
                        }
                        ,
                        l.done = function(t) {
                            n(t, [])
                        }
                        ,
                        l.reset = function() {
                            e = {},
                            i = {},
                            s = {}
                        }
                        ,
                        l.isDefined = function(t) {
                            return t in e
                        }
                        ,
                        l
                    }()
                }(e = {
                    exports: {}
                }),
                e.exports
            }();
            function ee(t) {
                return new Promise((e,i)=>{
                    te(t, {
                        success: e,
                        error: i
                    })
                }
                )
            }
            function ie(t) {
                t && !this.embed.hasPlayed && (this.embed.hasPlayed = !0),
                this.media.paused === t && (this.media.paused = !t,
                gt.call(this, this.media, t ? "play" : "pause"))
            }
            const se = {
                setup() {
                    const t = this;
                    st(t.elements.wrapper, t.config.classNames.embed, !0),
                    t.options.speed = t.config.speed.options,
                    At.call(t),
                    M(window.Vimeo) ? se.ready.call(t) : ee(t.config.urls.vimeo.sdk).then(()=>{
                        se.ready.call(t)
                    }
                    ).catch(e=>{
                        t.debug.warn("Vimeo SDK (player.js) failed to load", e)
                    }
                    )
                },
                ready() {
                    const t = this
                      , e = t.config.vimeo
                      , {premium: i, referrerPolicy: s, ...n} = e;
                    i && Object.assign(n, {
                        controls: !1,
                        sidedock: !1
                    });
                    const r = Gt({
                        loop: t.config.loop.active,
                        autoplay: t.autoplay,
                        muted: t.muted,
                        gesture: "media",
                        playsinline: !this.config.fullscreen.iosNative,
                        ...n
                    });
                    let a = t.media.getAttribute("src");
                    H(a) && (a = t.media.getAttribute(t.config.attributes.embed.id));
                    const o = H(l = a) ? null : D(Number(l)) ? l : l.match(/^.*(vimeo.com\/|video\/)(\d+).*/) ? RegExp.$2 : l;
                    var l;
                    const h = J("iframe")
                      , c = Mt(t.config.urls.vimeo.iframe, o, r);
                    if (h.setAttribute("src", c),
                    h.setAttribute("allowfullscreen", ""),
                    h.setAttribute("allow", ["autoplay", "fullscreen", "picture-in-picture", "encrypted-media", "accelerometer", "gyroscope"].join("; ")),
                    H(s) || h.setAttribute("referrerPolicy", s),
                    i || !e.customControls)
                        h.setAttribute("data-poster", t.poster),
                        t.media = tt(h, t.media);
                    else {
                        const e = J("div", {
                            class: t.config.classNames.embedContainer,
                            "data-poster": t.poster
                        });
                        e.appendChild(h),
                        t.media = tt(e, t.media)
                    }
                    e.customControls || Rt(Mt(t.config.urls.vimeo.api, c)).then(e=>{
                        !H(e) && e.thumbnail_url && Qt.setPoster.call(t, e.thumbnail_url).catch(()=>{}
                        )
                    }
                    ),
                    t.embed = new window.Vimeo.Player(h,{
                        autopause: t.config.autopause,
                        muted: t.muted
                    }),
                    t.media.paused = !0,
                    t.media.currentTime = 0,
                    t.supported.ui && t.embed.disableTextTrack(),
                    t.media.play = ()=>(ie.call(t, !0),
                    t.embed.play()),
                    t.media.pause = ()=>(ie.call(t, !1),
                    t.embed.pause()),
                    t.media.stop = ()=>{
                        t.pause(),
                        t.currentTime = 0
                    }
                    ;
                    let {currentTime: u} = t.media;
                    Object.defineProperty(t.media, "currentTime", {
                        get: ()=>u,
                        set(e) {
                            const {embed: i, media: s, paused: n, volume: r} = t
                              , a = n && !i.hasPlayed;
                            s.seeking = !0,
                            gt.call(t, s, "seeking"),
                            Promise.resolve(a && i.setVolume(0)).then(()=>i.setCurrentTime(e)).then(()=>a && i.pause()).then(()=>a && i.setVolume(r)).catch(()=>{}
                            )
                        }
                    });
                    let p = t.config.speed.selected;
                    Object.defineProperty(t.media, "playbackRate", {
                        get: ()=>p,
                        set(e) {
                            t.embed.setPlaybackRate(e).then(()=>{
                                p = e,
                                gt.call(t, t.media, "ratechange")
                            }
                            ).catch(()=>{
                                t.options.speed = [1]
                            }
                            )
                        }
                    });
                    let {volume: d} = t.config;
                    Object.defineProperty(t.media, "volume", {
                        get: ()=>d,
                        set(e) {
                            t.embed.setVolume(e).then(()=>{
                                d = e,
                                gt.call(t, t.media, "volumechange")
                            }
                            )
                        }
                    });
                    let {muted: f} = t.config;
                    Object.defineProperty(t.media, "muted", {
                        get: ()=>f,
                        set(e) {
                            const i = !!F(e) && e;
                            t.embed.setVolume(i ? 0 : t.config.volume).then(()=>{
                                f = i,
                                gt.call(t, t.media, "volumechange")
                            }
                            )
                        }
                    });
                    let m, {loop: g} = t.config;
                    Object.defineProperty(t.media, "loop", {
                        get: ()=>g,
                        set(e) {
                            const i = F(e) ? e : t.config.loop.active;
                            t.embed.setLoop(i).then(()=>{
                                g = i
                            }
                            )
                        }
                    }),
                    t.embed.getVideoUrl().then(e=>{
                        m = e,
                        zt.setDownloadUrl.call(t)
                    }
                    ).catch(t=>{
                        this.debug.warn(t)
                    }
                    ),
                    Object.defineProperty(t.media, "currentSrc", {
                        get: ()=>m
                    }),
                    Object.defineProperty(t.media, "ended", {
                        get: ()=>t.currentTime === t.duration
                    }),
                    Promise.all([t.embed.getVideoWidth(), t.embed.getVideoHeight()]).then(e=>{
                        const [i,s] = e;
                        t.embed.ratio = Tt(i, s),
                        At.call(this)
                    }
                    ),
                    t.embed.setAutopause(t.config.autopause).then(e=>{
                        t.config.autopause = e
                    }
                    ),
                    t.embed.getVideoTitle().then(e=>{
                        t.config.title = e,
                        Qt.setTitle.call(this)
                    }
                    ),
                    t.embed.getCurrentTime().then(e=>{
                        u = e,
                        gt.call(t, t.media, "timeupdate")
                    }
                    ),
                    t.embed.getDuration().then(e=>{
                        t.media.duration = e,
                        gt.call(t, t.media, "durationchange")
                    }
                    ),
                    t.embed.getTextTracks().then(e=>{
                        t.media.textTracks = e,
                        jt.setup.call(t)
                    }
                    ),
                    t.embed.on("cuechange", ({cues: e=[]})=>{
                        const i = e.map(t=>function(t) {
                            const e = document.createDocumentFragment()
                              , i = document.createElement("div");
                            return e.appendChild(i),
                            i.innerHTML = t,
                            e.firstChild.innerText
                        }(t.text));
                        jt.updateCues.call(t, i)
                    }
                    ),
                    t.embed.on("loaded", ()=>{
                        t.embed.getPaused().then(e=>{
                            ie.call(t, !e),
                            e || gt.call(t, t.media, "playing")
                        }
                        ),
                        R(t.embed.element) && t.supported.ui && t.embed.element.setAttribute("tabindex", -1)
                    }
                    ),
                    t.embed.on("bufferstart", ()=>{
                        gt.call(t, t.media, "waiting")
                    }
                    ),
                    t.embed.on("bufferend", ()=>{
                        gt.call(t, t.media, "playing")
                    }
                    ),
                    t.embed.on("play", ()=>{
                        ie.call(t, !0),
                        gt.call(t, t.media, "playing")
                    }
                    ),
                    t.embed.on("pause", ()=>{
                        ie.call(t, !1)
                    }
                    ),
                    t.embed.on("timeupdate", e=>{
                        t.media.seeking = !1,
                        u = e.seconds,
                        gt.call(t, t.media, "timeupdate")
                    }
                    ),
                    t.embed.on("progress", e=>{
                        t.media.buffered = e.percent,
                        gt.call(t, t.media, "progress"),
                        1 === parseInt(e.percent, 10) && gt.call(t, t.media, "canplaythrough"),
                        t.embed.getDuration().then(e=>{
                            e !== t.media.duration && (t.media.duration = e,
                            gt.call(t, t.media, "durationchange"))
                        }
                        )
                    }
                    ),
                    t.embed.on("seeked", ()=>{
                        t.media.seeking = !1,
                        gt.call(t, t.media, "seeked")
                    }
                    ),
                    t.embed.on("ended", ()=>{
                        t.media.paused = !0,
                        gt.call(t, t.media, "ended")
                    }
                    ),
                    t.embed.on("error", e=>{
                        t.media.error = e,
                        gt.call(t, t.media, "error")
                    }
                    ),
                    e.customControls && setTimeout(()=>Qt.build.call(t), 0)
                }
            };
            function ne(t) {
                t && !this.embed.hasPlayed && (this.embed.hasPlayed = !0),
                this.media.paused === t && (this.media.paused = !t,
                gt.call(this, this.media, t ? "play" : "pause"))
            }
            function re(t) {
                return t.noCookie ? "https://www.youtube-nocookie.com" : "http:" === window.location.protocol ? "http://www.youtube.com" : void 0
            }
            const ae = {
                setup() {
                    if (st(this.elements.wrapper, this.config.classNames.embed, !0),
                    M(window.YT) && L(window.YT.Player))
                        ae.ready.call(this);
                    else {
                        const t = window.onYouTubeIframeAPIReady;
                        window.onYouTubeIframeAPIReady = ()=>{
                            L(t) && t(),
                            ae.ready.call(this)
                        }
                        ,
                        ee(this.config.urls.youtube.sdk).catch(t=>{
                            this.debug.warn("YouTube API failed to load", t)
                        }
                        )
                    }
                },
                getTitle(t) {
                    Rt(Mt(this.config.urls.youtube.api, t)).then(t=>{
                        if (M(t)) {
                            const {title: e, height: i, width: s} = t;
                            this.config.title = e,
                            Qt.setTitle.call(this),
                            this.embed.ratio = Tt(s, i)
                        }
                        At.call(this)
                    }
                    ).catch(()=>{
                        At.call(this)
                    }
                    )
                },
                ready() {
                    const t = this
                      , e = t.config.youtube
                      , i = t.media && t.media.getAttribute("id");
                    if (!H(i) && i.startsWith("youtube-"))
                        return;
                    let s = t.media.getAttribute("src");
                    H(s) && (s = t.media.getAttribute(this.config.attributes.embed.id));
                    const n = H(r = s) ? null : r.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/) ? RegExp.$2 : r;
                    var r;
                    const a = J("div", {
                        id: `${t.provider}-${Math.floor(1e4 * Math.random())}`,
                        "data-poster": e.customControls ? t.poster : void 0
                    });
                    if (t.media = tt(a, t.media),
                    e.customControls) {
                        const e = t=>`https://i.ytimg.com/vi/${n}/${t}default.jpg`;
                        Kt(e("maxres"), 121).catch(()=>Kt(e("sd"), 121)).catch(()=>Kt(e("hq"))).then(e=>Qt.setPoster.call(t, e.src)).then(e=>{
                            e.includes("maxres") || (t.elements.poster.style.backgroundSize = "cover")
                        }
                        ).catch(()=>{}
                        )
                    }
                    t.embed = new window.YT.Player(t.media,{
                        videoId: n,
                        host: re(e),
                        playerVars: U({}, {
                            autoplay: t.config.autoplay ? 1 : 0,
                            hl: t.config.hl,
                            controls: t.supported.ui && e.customControls ? 0 : 1,
                            disablekb: 1,
                            playsinline: t.config.fullscreen.iosNative ? 0 : 1,
                            cc_load_policy: t.captions.active ? 1 : 0,
                            cc_lang_pref: t.config.captions.language,
                            widget_referrer: window ? window.location.href : null
                        }, e),
                        events: {
                            onError(e) {
                                if (!t.media.error) {
                                    const i = e.data
                                      , s = {
                                        2: "The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.",
                                        5: "The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.",
                                        100: "The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.",
                                        101: "The owner of the requested video does not allow it to be played in embedded players.",
                                        150: "The owner of the requested video does not allow it to be played in embedded players."
                                    }[i] || "An unknown error occured";
                                    t.media.error = {
                                        code: i,
                                        message: s
                                    },
                                    gt.call(t, t.media, "error")
                                }
                            },
                            onPlaybackRateChange(e) {
                                const i = e.target;
                                t.media.playbackRate = i.getPlaybackRate(),
                                gt.call(t, t.media, "ratechange")
                            },
                            onReady(i) {
                                if (L(t.media.play))
                                    return;
                                const s = i.target;
                                ae.getTitle.call(t, n),
                                t.media.play = ()=>{
                                    ne.call(t, !0),
                                    s.playVideo()
                                }
                                ,
                                t.media.pause = ()=>{
                                    ne.call(t, !1),
                                    s.pauseVideo()
                                }
                                ,
                                t.media.stop = ()=>{
                                    s.stopVideo()
                                }
                                ,
                                t.media.duration = s.getDuration(),
                                t.media.paused = !0,
                                t.media.currentTime = 0,
                                Object.defineProperty(t.media, "currentTime", {
                                    get: ()=>Number(s.getCurrentTime()),
                                    set(e) {
                                        t.paused && !t.embed.hasPlayed && t.embed.mute(),
                                        t.media.seeking = !0,
                                        gt.call(t, t.media, "seeking"),
                                        s.seekTo(e)
                                    }
                                }),
                                Object.defineProperty(t.media, "playbackRate", {
                                    get: ()=>s.getPlaybackRate(),
                                    set(t) {
                                        s.setPlaybackRate(t)
                                    }
                                });
                                let {volume: r} = t.config;
                                Object.defineProperty(t.media, "volume", {
                                    get: ()=>r,
                                    set(e) {
                                        r = e,
                                        s.setVolume(100 * r),
                                        gt.call(t, t.media, "volumechange")
                                    }
                                });
                                let {muted: a} = t.config;
                                Object.defineProperty(t.media, "muted", {
                                    get: ()=>a,
                                    set(e) {
                                        const i = F(e) ? e : a;
                                        a = i,
                                        s[i ? "mute" : "unMute"](),
                                        s.setVolume(100 * r),
                                        gt.call(t, t.media, "volumechange")
                                    }
                                }),
                                Object.defineProperty(t.media, "currentSrc", {
                                    get: ()=>s.getVideoUrl()
                                }),
                                Object.defineProperty(t.media, "ended", {
                                    get: ()=>t.currentTime === t.duration
                                });
                                const o = s.getAvailablePlaybackRates();
                                t.options.speed = o.filter(e=>t.config.speed.options.includes(e)),
                                t.supported.ui && e.customControls && t.media.setAttribute("tabindex", -1),
                                gt.call(t, t.media, "timeupdate"),
                                gt.call(t, t.media, "durationchange"),
                                clearInterval(t.timers.buffering),
                                t.timers.buffering = setInterval(()=>{
                                    t.media.buffered = s.getVideoLoadedFraction(),
                                    (null === t.media.lastBuffered || t.media.lastBuffered < t.media.buffered) && gt.call(t, t.media, "progress"),
                                    t.media.lastBuffered = t.media.buffered,
                                    1 === t.media.buffered && (clearInterval(t.timers.buffering),
                                    gt.call(t, t.media, "canplaythrough"))
                                }
                                , 200),
                                e.customControls && setTimeout(()=>Qt.build.call(t), 50)
                            },
                            onStateChange(i) {
                                const s = i.target;
                                switch (clearInterval(t.timers.playing),
                                t.media.seeking && [1, 2].includes(i.data) && (t.media.seeking = !1,
                                gt.call(t, t.media, "seeked")),
                                i.data) {
                                case -1:
                                    gt.call(t, t.media, "timeupdate"),
                                    t.media.buffered = s.getVideoLoadedFraction(),
                                    gt.call(t, t.media, "progress");
                                    break;
                                case 0:
                                    ne.call(t, !1),
                                    t.media.loop ? (s.stopVideo(),
                                    s.playVideo()) : gt.call(t, t.media, "ended");
                                    break;
                                case 1:
                                    e.customControls && !t.config.autoplay && t.media.paused && !t.embed.hasPlayed ? t.media.pause() : (ne.call(t, !0),
                                    gt.call(t, t.media, "playing"),
                                    t.timers.playing = setInterval(()=>{
                                        gt.call(t, t.media, "timeupdate")
                                    }
                                    , 50),
                                    t.media.duration !== s.getDuration() && (t.media.duration = s.getDuration(),
                                    gt.call(t, t.media, "durationchange")));
                                    break;
                                case 2:
                                    t.muted || t.embed.unMute(),
                                    ne.call(t, !1);
                                    break;
                                case 3:
                                    gt.call(t, t.media, "waiting")
                                }
                                gt.call(t, t.elements.container, "statechange", !1, {
                                    code: i.data
                                })
                            }
                        }
                    })
                }
            }
              , oe = {
                setup() {
                    this.media ? (st(this.elements.container, this.config.classNames.type.replace("{0}", this.type), !0),
                    st(this.elements.container, this.config.classNames.provider.replace("{0}", this.provider), !0),
                    this.isEmbed && st(this.elements.container, this.config.classNames.type.replace("{0}", "video"), !0),
                    this.isVideo && (this.elements.wrapper = J("div", {
                        class: this.config.classNames.video
                    }),
                    Y(this.media, this.elements.wrapper),
                    this.elements.poster = J("div", {
                        class: this.config.classNames.poster
                    }),
                    this.elements.wrapper.appendChild(this.elements.poster)),
                    this.isHTML5 ? _t.setup.call(this) : this.isYouTube ? ae.setup.call(this) : this.isVimeo && se.setup.call(this)) : this.debug.warn("No media element found!")
                }
            };
            class le {
                constructor(e) {
                    t(this, "load", ()=>{
                        this.enabled && (M(window.google) && M(window.google.ima) ? this.ready() : ee(this.player.config.urls.googleIMA.sdk).then(()=>{
                            this.ready()
                        }
                        ).catch(()=>{
                            this.trigger("error", new Error("Google IMA SDK failed to load"))
                        }
                        ))
                    }
                    ),
                    t(this, "ready", ()=>{
                        var t;
                        this.enabled || ((t = this).manager && t.manager.destroy(),
                        t.elements.displayContainer && t.elements.displayContainer.destroy(),
                        t.elements.container.remove()),
                        this.startSafetyTimer(12e3, "ready()"),
                        this.managerPromise.then(()=>{
                            this.clearSafetyTimer("onAdsManagerLoaded()")
                        }
                        ),
                        this.listeners(),
                        this.setupIMA()
                    }
                    ),
                    t(this, "setupIMA", ()=>{
                        this.elements.container = J("div", {
                            class: this.player.config.classNames.ads
                        }),
                        this.player.elements.container.appendChild(this.elements.container),
                        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED),
                        google.ima.settings.setLocale(this.player.config.ads.language),
                        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline),
                        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container,this.player.media),
                        this.loader = new google.ima.AdsLoader(this.elements.displayContainer),
                        this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, t=>this.onAdsManagerLoaded(t), !1),
                        this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, t=>this.onAdError(t), !1),
                        this.requestAds()
                    }
                    ),
                    t(this, "requestAds", ()=>{
                        const {container: t} = this.player.elements;
                        try {
                            const e = new google.ima.AdsRequest;
                            e.adTagUrl = this.tagUrl,
                            e.linearAdSlotWidth = t.offsetWidth,
                            e.linearAdSlotHeight = t.offsetHeight,
                            e.nonLinearAdSlotWidth = t.offsetWidth,
                            e.nonLinearAdSlotHeight = t.offsetHeight,
                            e.forceNonLinearFullSlot = !1,
                            e.setAdWillPlayMuted(!this.player.muted),
                            this.loader.requestAds(e)
                        } catch (t) {
                            this.onAdError(t)
                        }
                    }
                    ),
                    t(this, "pollCountdown", (t=!1)=>{
                        if (!t)
                            return clearInterval(this.countdownTimer),
                            void this.elements.container.removeAttribute("data-badge-text");
                        this.countdownTimer = setInterval(()=>{
                            const t = qt(Math.max(this.manager.getRemainingTime(), 0))
                              , e = `${Bt.get("advertisement", this.player.config)} - ${t}`;
                            this.elements.container.setAttribute("data-badge-text", e)
                        }
                        , 100)
                    }
                    ),
                    t(this, "onAdsManagerLoaded", t=>{
                        if (!this.enabled)
                            return;
                        const e = new google.ima.AdsRenderingSettings;
                        e.restoreCustomPlaybackStateOnAdBreakComplete = !0,
                        e.enablePreloading = !0,
                        this.manager = t.getAdsManager(this.player, e),
                        this.cuePoints = this.manager.getCuePoints(),
                        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, t=>this.onAdError(t)),
                        Object.keys(google.ima.AdEvent.Type).forEach(t=>{
                            this.manager.addEventListener(google.ima.AdEvent.Type[t], t=>this.onAdEvent(t))
                        }
                        ),
                        this.trigger("loaded")
                    }
                    ),
                    t(this, "addCuePoints", ()=>{
                        H(this.cuePoints) || this.cuePoints.forEach(t=>{
                            if (0 !== t && -1 !== t && t < this.player.duration) {
                                const e = this.player.elements.progress;
                                if (R(e)) {
                                    const i = 100 / this.player.duration * t
                                      , s = J("span", {
                                        class: this.player.config.classNames.cues
                                    });
                                    s.style.left = `${i.toString()}%`,
                                    e.appendChild(s)
                                }
                            }
                        }
                        )
                    }
                    ),
                    t(this, "onAdEvent", t=>{
                        const {container: e} = this.player.elements
                          , i = t.getAd()
                          , s = t.getAdData();
                        switch ((t=>{
                            gt.call(this.player, this.player.media, `ads ${t.replace(/_/g, "").toLowerCase()}`)
                        }
                        )(t.type),
                        t.type) {
                        case google.ima.AdEvent.Type.LOADED:
                            this.trigger("loaded"),
                            this.pollCountdown(!0),
                            i.isLinear() || (i.width = e.offsetWidth,
                            i.height = e.offsetHeight);
                            break;
                        case google.ima.AdEvent.Type.STARTED:
                            this.manager.setVolume(this.player.volume);
                            break;
                        case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:
                            this.player.ended ? this.loadAds() : this.loader.contentComplete();
                            break;
                        case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:
                            this.pauseContent();
                            break;
                        case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:
                            this.pollCountdown(),
                            this.resumeContent();
                            break;
                        case google.ima.AdEvent.Type.LOG:
                            s.adError && this.player.debug.warn(`Non-fatal ad error: ${s.adError.getMessage()}`)
                        }
                    }
                    ),
                    t(this, "onAdError", t=>{
                        this.cancel(),
                        this.player.debug.warn("Ads error", t)
                    }
                    ),
                    t(this, "listeners", ()=>{
                        const {container: t} = this.player.elements;
                        let e;
                        this.player.on("canplay", ()=>{
                            this.addCuePoints()
                        }
                        ),
                        this.player.on("ended", ()=>{
                            this.loader.contentComplete()
                        }
                        ),
                        this.player.on("timeupdate", ()=>{
                            e = this.player.currentTime
                        }
                        ),
                        this.player.on("seeked", ()=>{
                            const t = this.player.currentTime;
                            H(this.cuePoints) || this.cuePoints.forEach((i,s)=>{
                                e < i && i < t && (this.manager.discardAdBreak(),
                                this.cuePoints.splice(s, 1))
                            }
                            )
                        }
                        ),
                        window.addEventListener("resize", ()=>{
                            this.manager && this.manager.resize(t.offsetWidth, t.offsetHeight, google.ima.ViewMode.NORMAL)
                        }
                        )
                    }
                    ),
                    t(this, "play", ()=>{
                        const {container: t} = this.player.elements;
                        this.managerPromise || this.resumeContent(),
                        this.managerPromise.then(()=>{
                            this.manager.setVolume(this.player.volume),
                            this.elements.displayContainer.initialize();
                            try {
                                this.initialized || (this.manager.init(t.offsetWidth, t.offsetHeight, google.ima.ViewMode.NORMAL),
                                this.manager.start()),
                                this.initialized = !0
                            } catch (t) {
                                this.onAdError(t)
                            }
                        }
                        ).catch(()=>{}
                        )
                    }
                    ),
                    t(this, "resumeContent", ()=>{
                        this.elements.container.style.zIndex = "",
                        this.playing = !1,
                        bt(this.player.media.play())
                    }
                    ),
                    t(this, "pauseContent", ()=>{
                        this.elements.container.style.zIndex = 3,
                        this.playing = !0,
                        this.player.media.pause()
                    }
                    ),
                    t(this, "cancel", ()=>{
                        this.initialized && this.resumeContent(),
                        this.trigger("error"),
                        this.loadAds()
                    }
                    ),
                    t(this, "loadAds", ()=>{
                        this.managerPromise.then(()=>{
                            this.manager && this.manager.destroy(),
                            this.managerPromise = new Promise(t=>{
                                this.on("loaded", t),
                                this.player.debug.log(this.manager)
                            }
                            ),
                            this.initialized = !1,
                            this.requestAds()
                        }
                        ).catch(()=>{}
                        )
                    }
                    ),
                    t(this, "trigger", (t,...e)=>{
                        const i = this.events[t];
                        B(i) && i.forEach(t=>{
                            L(t) && t.apply(this, e)
                        }
                        )
                    }
                    ),
                    t(this, "on", (t,e)=>(B(this.events[t]) || (this.events[t] = []),
                    this.events[t].push(e),
                    this)),
                    t(this, "startSafetyTimer", (t,e)=>{
                        this.player.debug.log(`Safety timer invoked from: ${e}`),
                        this.safetyTimer = setTimeout(()=>{
                            this.cancel(),
                            this.clearSafetyTimer("startSafetyTimer()")
                        }
                        , t)
                    }
                    ),
                    t(this, "clearSafetyTimer", t=>{
                        _(this.safetyTimer) || (this.player.debug.log(`Safety timer cleared from: ${t}`),
                        clearTimeout(this.safetyTimer),
                        this.safetyTimer = null)
                    }
                    ),
                    this.player = e,
                    this.config = e.config.ads,
                    this.playing = !1,
                    this.initialized = !1,
                    this.elements = {
                        container: null,
                        displayContainer: null
                    },
                    this.manager = null,
                    this.loader = null,
                    this.cuePoints = null,
                    this.events = {},
                    this.safetyTimer = null,
                    this.countdownTimer = null,
                    this.managerPromise = new Promise((t,e)=>{
                        this.on("loaded", t),
                        this.on("error", e)
                    }
                    ),
                    this.load()
                }
                get enabled() {
                    const {config: t} = this;
                    return this.player.isHTML5 && this.player.isVideo && t.enabled && (!H(t.publisherId) || z(t.tagUrl))
                }
                get tagUrl() {
                    const {config: t} = this;
                    return z(t.tagUrl) ? t.tagUrl : `https://go.aniview.com/api/adserver6/vast/?${Gt({
                        AV_PUBLISHERID: "58c25bb0073ef448b1087ad6",
                        AV_CHANNELID: "5a0458dc28a06145e4519d21",
                        AV_URL: window.location.hostname,
                        cb: Date.now(),
                        AV_WIDTH: 640,
                        AV_HEIGHT: 480,
                        AV_CDIM2: t.publisherId
                    })}`
                }
            }
            const he = t=>{
                const e = [];
                return t.split(/\r\n\r\n|\n\n|\r\r/).forEach(t=>{
                    const i = {};
                    t.split(/\r\n|\n|\r/).forEach(t=>{
                        if (D(i.startTime)) {
                            if (!H(t.trim()) && H(i.text)) {
                                const e = t.trim().split("#xywh=");
                                [i.text] = e,
                                e[1] && ([i.x,i.y,i.w,i.h] = e[1].split(","))
                            }
                        } else {
                            const e = t.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/);
                            e && (i.startTime = 60 * Number(e[1] || 0) * 60 + 60 * Number(e[2]) + Number(e[3]) + Number(`0.${e[4]}`),
                            i.endTime = 60 * Number(e[6] || 0) * 60 + 60 * Number(e[7]) + Number(e[8]) + Number(`0.${e[9]}`))
                        }
                    }
                    ),
                    i.text && e.push(i)
                }
                ),
                e
            }
              , ce = (t,e)=>{
                const i = {};
                return t > e.width / e.height ? (i.width = e.width,
                i.height = 1 / t * e.width) : (i.height = e.height,
                i.width = t * e.height),
                i
            }
            ;
            class ue {
                constructor(e) {
                    t(this, "load", ()=>{
                        this.player.elements.display.seekTooltip && (this.player.elements.display.seekTooltip.hidden = this.enabled),
                        this.enabled && this.getThumbnails().then(()=>{
                            this.enabled && (this.render(),
                            this.determineContainerAutoSizing(),
                            this.loaded = !0)
                        }
                        )
                    }
                    ),
                    t(this, "getThumbnails", ()=>new Promise(t=>{
                        const {src: e} = this.player.config.previewThumbnails;
                        if (H(e))
                            throw new Error("Missing previewThumbnails.src config attribute");
                        const i = ()=>{
                            this.thumbnails.sort((t,e)=>t.height - e.height),
                            this.player.debug.log("Preview thumbnails", this.thumbnails),
                            t()
                        }
                        ;
                        if (L(e))
                            e(t=>{
                                this.thumbnails = t,
                                i()
                            }
                            );
                        else {
                            const t = (I(e) ? [e] : e).map(t=>this.getThumbnail(t));
                            Promise.all(t).then(i)
                        }
                    }
                    )),
                    t(this, "getThumbnail", t=>new Promise(e=>{
                        Rt(t).then(i=>{
                            const s = {
                                frames: he(i),
                                height: null,
                                urlPrefix: ""
                            };
                            s.frames[0].text.startsWith("/") || s.frames[0].text.startsWith("http://") || s.frames[0].text.startsWith("https://") || (s.urlPrefix = t.substring(0, t.lastIndexOf("/") + 1));
                            const n = new Image;
                            n.onload = ()=>{
                                s.height = n.naturalHeight,
                                s.width = n.naturalWidth,
                                this.thumbnails.push(s),
                                e()
                            }
                            ,
                            n.src = s.urlPrefix + s.frames[0].text
                        }
                        )
                    }
                    )),
                    t(this, "startMove", t=>{
                        if (this.loaded && N(t) && ["touchmove", "mousemove"].includes(t.type) && this.player.media.duration) {
                            if ("touchmove" === t.type)
                                this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);
                            else {
                                const e = this.player.elements.progress.getBoundingClientRect()
                                  , i = 100 / e.width * (t.pageX - e.left);
                                this.seekTime = this.player.media.duration * (i / 100),
                                this.seekTime < 0 && (this.seekTime = 0),
                                this.seekTime > this.player.media.duration - 1 && (this.seekTime = this.player.media.duration - 1),
                                this.mousePosX = t.pageX,
                                this.elements.thumb.time.innerText = qt(this.seekTime)
                            }
                            this.showImageAtCurrentTime()
                        }
                    }
                    ),
                    t(this, "endMove", ()=>{
                        this.toggleThumbContainer(!1, !0)
                    }
                    ),
                    t(this, "startScrubbing", t=>{
                        (_(t.button) || !1 === t.button || 0 === t.button) && (this.mouseDown = !0,
                        this.player.media.duration && (this.toggleScrubbingContainer(!0),
                        this.toggleThumbContainer(!1, !0),
                        this.showImageAtCurrentTime()))
                    }
                    ),
                    t(this, "endScrubbing", ()=>{
                        this.mouseDown = !1,
                        Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime) ? this.toggleScrubbingContainer(!1) : mt.call(this.player, this.player.media, "timeupdate", ()=>{
                            this.mouseDown || this.toggleScrubbingContainer(!1)
                        }
                        )
                    }
                    ),
                    t(this, "listeners", ()=>{
                        this.player.on("play", ()=>{
                            this.toggleThumbContainer(!1, !0)
                        }
                        ),
                        this.player.on("seeked", ()=>{
                            this.toggleThumbContainer(!1)
                        }
                        ),
                        this.player.on("timeupdate", ()=>{
                            this.lastTime = this.player.media.currentTime
                        }
                        )
                    }
                    ),
                    t(this, "render", ()=>{
                        this.elements.thumb.container = J("div", {
                            class: this.player.config.classNames.previewThumbnails.thumbContainer
                        }),
                        this.elements.thumb.imageContainer = J("div", {
                            class: this.player.config.classNames.previewThumbnails.imageContainer
                        }),
                        this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);
                        const t = J("div", {
                            class: this.player.config.classNames.previewThumbnails.timeContainer
                        });
                        this.elements.thumb.time = J("span", {}, "00:00"),
                        t.appendChild(this.elements.thumb.time),
                        this.elements.thumb.container.appendChild(t),
                        R(this.player.elements.progress) && this.player.elements.progress.appendChild(this.elements.thumb.container),
                        this.elements.scrubbing.container = J("div", {
                            class: this.player.config.classNames.previewThumbnails.scrubbingContainer
                        }),
                        this.player.elements.wrapper.appendChild(this.elements.scrubbing.container)
                    }
                    ),
                    t(this, "destroy", ()=>{
                        this.elements.thumb.container && this.elements.thumb.container.remove(),
                        this.elements.scrubbing.container && this.elements.scrubbing.container.remove()
                    }
                    ),
                    t(this, "showImageAtCurrentTime", ()=>{
                        this.mouseDown ? this.setScrubbingContainerSize() : this.setThumbContainerSizeAndPos();
                        const t = this.thumbnails[0].frames.findIndex(t=>this.seekTime >= t.startTime && this.seekTime <= t.endTime)
                          , e = t >= 0;
                        let i = 0;
                        this.mouseDown || this.toggleThumbContainer(e),
                        e && (this.thumbnails.forEach((e,s)=>{
                            this.loadedImages.includes(e.frames[t].text) && (i = s)
                        }
                        ),
                        t !== this.showingThumb && (this.showingThumb = t,
                        this.loadImage(i)))
                    }
                    ),
                    t(this, "loadImage", (t=0)=>{
                        const e = this.showingThumb
                          , i = this.thumbnails[t]
                          , {urlPrefix: s} = i
                          , n = i.frames[e]
                          , r = i.frames[e].text
                          , a = s + r;
                        if (this.currentImageElement && this.currentImageElement.dataset.filename === r)
                            this.showImage(this.currentImageElement, n, t, e, r, !1),
                            this.currentImageElement.dataset.index = e,
                            this.removeOldImages(this.currentImageElement);
                        else {
                            this.loadingImage && this.usingSprites && (this.loadingImage.onload = null);
                            const i = new Image;
                            i.src = a,
                            i.dataset.index = e,
                            i.dataset.filename = r,
                            this.showingThumbFilename = r,
                            this.player.debug.log(`Loading image: ${a}`),
                            i.onload = ()=>this.showImage(i, n, t, e, r, !0),
                            this.loadingImage = i,
                            this.removeOldImages(i)
                        }
                    }
                    ),
                    t(this, "showImage", (t,e,i,s,n,r=!0)=>{
                        this.player.debug.log(`Showing thumb: ${n}. num: ${s}. qual: ${i}. newimg: ${r}`),
                        this.setImageSizeAndOffset(t, e),
                        r && (this.currentImageContainer.appendChild(t),
                        this.currentImageElement = t,
                        this.loadedImages.includes(n) || this.loadedImages.push(n)),
                        this.preloadNearby(s, !0).then(this.preloadNearby(s, !1)).then(this.getHigherQuality(i, t, e, n))
                    }
                    ),
                    t(this, "removeOldImages", t=>{
                        Array.from(this.currentImageContainer.children).forEach(e=>{
                            if ("img" !== e.tagName.toLowerCase())
                                return;
                            const i = this.usingSprites ? 500 : 1e3;
                            if (e.dataset.index !== t.dataset.index && !e.dataset.deleting) {
                                e.dataset.deleting = !0;
                                const {currentImageContainer: t} = this;
                                setTimeout(()=>{
                                    t.removeChild(e),
                                    this.player.debug.log(`Removing thumb: ${e.dataset.filename}`)
                                }
                                , i)
                            }
                        }
                        )
                    }
                    ),
                    t(this, "preloadNearby", (t,e=!0)=>new Promise(i=>{
                        setTimeout(()=>{
                            const s = this.thumbnails[0].frames[t].text;
                            if (this.showingThumbFilename === s) {
                                let n;
                                n = e ? this.thumbnails[0].frames.slice(t) : this.thumbnails[0].frames.slice(0, t).reverse();
                                let r = !1;
                                n.forEach(t=>{
                                    const e = t.text;
                                    if (e !== s && !this.loadedImages.includes(e)) {
                                        r = !0,
                                        this.player.debug.log(`Preloading thumb filename: ${e}`);
                                        const {urlPrefix: t} = this.thumbnails[0]
                                          , s = t + e
                                          , n = new Image;
                                        n.src = s,
                                        n.onload = ()=>{
                                            this.player.debug.log(`Preloaded thumb filename: ${e}`),
                                            this.loadedImages.includes(e) || this.loadedImages.push(e),
                                            i()
                                        }
                                    }
                                }
                                ),
                                r || i()
                            }
                        }
                        , 300)
                    }
                    )),
                    t(this, "getHigherQuality", (t,e,i,s)=>{
                        if (t < this.thumbnails.length - 1) {
                            let n = e.naturalHeight;
                            this.usingSprites && (n = i.h),
                            n < this.thumbContainerHeight && setTimeout(()=>{
                                this.showingThumbFilename === s && (this.player.debug.log(`Showing higher quality thumb for: ${s}`),
                                this.loadImage(t + 1))
                            }
                            , 300)
                        }
                    }
                    ),
                    t(this, "toggleThumbContainer", (t=!1,e=!1)=>{
                        const i = this.player.config.classNames.previewThumbnails.thumbContainerShown;
                        this.elements.thumb.container.classList.toggle(i, t),
                        !t && e && (this.showingThumb = null,
                        this.showingThumbFilename = null)
                    }
                    ),
                    t(this, "toggleScrubbingContainer", (t=!1)=>{
                        const e = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;
                        this.elements.scrubbing.container.classList.toggle(e, t),
                        t || (this.showingThumb = null,
                        this.showingThumbFilename = null)
                    }
                    ),
                    t(this, "determineContainerAutoSizing", ()=>{
                        (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) && (this.sizeSpecifiedInCSS = !0)
                    }
                    ),
                    t(this, "setThumbContainerSizeAndPos", ()=>{
                        if (this.sizeSpecifiedInCSS) {
                            if (this.elements.thumb.imageContainer.clientHeight > 20 && this.elements.thumb.imageContainer.clientWidth < 20) {
                                const t = Math.floor(this.elements.thumb.imageContainer.clientHeight * this.thumbAspectRatio);
                                this.elements.thumb.imageContainer.style.width = `${t}px`
                            } else if (this.elements.thumb.imageContainer.clientHeight < 20 && this.elements.thumb.imageContainer.clientWidth > 20) {
                                const t = Math.floor(this.elements.thumb.imageContainer.clientWidth / this.thumbAspectRatio);
                                this.elements.thumb.imageContainer.style.height = `${t}px`
                            }
                        } else {
                            const t = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);
                            this.elements.thumb.imageContainer.style.height = `${this.thumbContainerHeight}px`,
                            this.elements.thumb.imageContainer.style.width = `${t}px`
                        }
                        this.setThumbContainerPos()
                    }
                    ),
                    t(this, "setThumbContainerPos", ()=>{
                        const t = this.player.elements.progress.getBoundingClientRect()
                          , e = this.player.elements.container.getBoundingClientRect()
                          , {container: i} = this.elements.thumb
                          , s = e.left - t.left + 10
                          , n = e.right - t.left - i.clientWidth - 10;
                        let r = this.mousePosX - t.left - i.clientWidth / 2;
                        r < s && (r = s),
                        r > n && (r = n),
                        i.style.left = `${r}px`
                    }
                    ),
                    t(this, "setScrubbingContainerSize", ()=>{
                        const {width: t, height: e} = ce(this.thumbAspectRatio, {
                            width: this.player.media.clientWidth,
                            height: this.player.media.clientHeight
                        });
                        this.elements.scrubbing.container.style.width = `${t}px`,
                        this.elements.scrubbing.container.style.height = `${e}px`
                    }
                    ),
                    t(this, "setImageSizeAndOffset", (t,e)=>{
                        if (!this.usingSprites)
                            return;
                        const i = this.thumbContainerHeight / e.h;
                        t.style.height = t.naturalHeight * i + "px",
                        t.style.width = t.naturalWidth * i + "px",
                        t.style.left = `-${e.x * i}px`,
                        t.style.top = `-${e.y * i}px`
                    }
                    ),
                    this.player = e,
                    this.thumbnails = [],
                    this.loaded = !1,
                    this.lastMouseMoveTime = Date.now(),
                    this.mouseDown = !1,
                    this.loadedImages = [],
                    this.elements = {
                        thumb: {},
                        scrubbing: {}
                    },
                    this.load()
                }
                get enabled() {
                    return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled
                }
                get currentImageContainer() {
                    return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer
                }
                get usingSprites() {
                    return Object.keys(this.thumbnails[0].frames[0]).includes("w")
                }
                get thumbAspectRatio() {
                    return this.usingSprites ? this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h : this.thumbnails[0].width / this.thumbnails[0].height
                }
                get thumbContainerHeight() {
                    if (this.mouseDown) {
                        const {height: t} = ce(this.thumbAspectRatio, {
                            width: this.player.media.clientWidth,
                            height: this.player.media.clientHeight
                        });
                        return t
                    }
                    return this.sizeSpecifiedInCSS ? this.elements.thumb.imageContainer.clientHeight : Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4)
                }
                get currentImageElement() {
                    return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement
                }
                set currentImageElement(t) {
                    this.mouseDown ? this.currentScrubbingImageElement = t : this.currentThumbnailImageElement = t
                }
            }
            const pe = {
                insertElements(t, e) {
                    I(e) ? K(t, this.media, {
                        src: e
                    }) : B(e) && e.forEach(e=>{
                        K(t, this.media, e)
                    }
                    )
                },
                change(t) {
                    $(t, "sources.length") ? (_t.cancelRequests.call(this),
                    this.destroy.call(this, ()=>{
                        this.options.quality = [],
                        Q(this.media),
                        this.media = null,
                        R(this.elements.container) && this.elements.container.removeAttribute("class");
                        const {sources: e, type: i} = t
                          , [{provider: s=Ut.html5, src: n}] = e
                          , r = "html5" === s ? i : "div"
                          , a = "html5" === s ? {} : {
                            src: n
                        };
                        Object.assign(this, {
                            provider: s,
                            type: i,
                            supported: ct.check(i, s, this.config.playsinline),
                            media: J(r, a)
                        }),
                        this.elements.container.appendChild(this.media),
                        F(t.autoplay) && (this.config.autoplay = t.autoplay),
                        this.isHTML5 && (this.config.crossorigin && this.media.setAttribute("crossorigin", ""),
                        this.config.autoplay && this.media.setAttribute("autoplay", ""),
                        H(t.poster) || (this.poster = t.poster),
                        this.config.loop.active && this.media.setAttribute("loop", ""),
                        this.config.muted && this.media.setAttribute("muted", ""),
                        this.config.playsinline && this.media.setAttribute("playsinline", "")),
                        Qt.addStyleHook.call(this),
                        this.isHTML5 && pe.insertElements.call(this, "source", e),
                        this.config.title = t.title,
                        oe.setup.call(this),
                        this.isHTML5 && Object.keys(t).includes("tracks") && pe.insertElements.call(this, "track", t.tracks),
                        (this.isHTML5 || this.isEmbed && !this.supported.ui) && Qt.build.call(this),
                        this.isHTML5 && this.media.load(),
                        H(t.previewThumbnails) || (Object.assign(this.config.previewThumbnails, t.previewThumbnails),
                        this.previewThumbnails && this.previewThumbnails.loaded && (this.previewThumbnails.destroy(),
                        this.previewThumbnails = null),
                        this.config.previewThumbnails.enabled && (this.previewThumbnails = new ue(this))),
                        this.fullscreen.update()
                    }
                    , !0)) : this.debug.warn("Invalid source format")
                }
            };
            class de {
                constructor(e, i) {
                    if (t(this, "play", ()=>L(this.media.play) ? (this.ads && this.ads.enabled && this.ads.managerPromise.then(()=>this.ads.play()).catch(()=>bt(this.media.play())),
                    this.media.play()) : null),
                    t(this, "pause", ()=>this.playing && L(this.media.pause) ? this.media.pause() : null),
                    t(this, "togglePlay", t=>(F(t) ? t : !this.playing) ? this.play() : this.pause()),
                    t(this, "stop", ()=>{
                        this.isHTML5 ? (this.pause(),
                        this.restart()) : L(this.media.stop) && this.media.stop()
                    }
                    ),
                    t(this, "restart", ()=>{
                        this.currentTime = 0
                    }
                    ),
                    t(this, "rewind", t=>{
                        this.currentTime -= D(t) ? t : this.config.seekTime
                    }
                    ),
                    t(this, "forward", t=>{
                        this.currentTime += D(t) ? t : this.config.seekTime
                    }
                    ),
                    t(this, "increaseVolume", t=>{
                        const e = this.media.muted ? 0 : this.volume;
                        this.volume = e + (D(t) ? t : 0)
                    }
                    ),
                    t(this, "decreaseVolume", t=>{
                        this.increaseVolume(-t)
                    }
                    ),
                    t(this, "airplay", ()=>{
                        ct.airplay && this.media.webkitShowPlaybackTargetPicker()
                    }
                    ),
                    t(this, "toggleControls", t=>{
                        if (this.supported.ui && !this.isAudio) {
                            const e = nt(this.elements.container, this.config.classNames.hideControls)
                              , i = void 0 === t ? void 0 : !t
                              , s = st(this.elements.container, this.config.classNames.hideControls, i);
                            if (s && B(this.config.controls) && this.config.controls.includes("settings") && !H(this.config.settings) && zt.toggleMenu.call(this, !1),
                            s !== e) {
                                const t = s ? "controlshidden" : "controlsshown";
                                gt.call(this, this.media, t)
                            }
                            return !s
                        }
                        return !1
                    }
                    ),
                    t(this, "on", (t,e)=>{
                        dt.call(this, this.elements.container, t, e)
                    }
                    ),
                    t(this, "once", (t,e)=>{
                        mt.call(this, this.elements.container, t, e)
                    }
                    ),
                    t(this, "off", (t,e)=>{
                        ft(this.elements.container, t, e)
                    }
                    ),
                    t(this, "destroy", (t,e=!1)=>{
                        if (!this.ready)
                            return;
                        const i = ()=>{
                            document.body.style.overflow = "",
                            this.embed = null,
                            e ? (Object.keys(this.elements).length && (Q(this.elements.buttons.play),
                            Q(this.elements.captions),
                            Q(this.elements.controls),
                            Q(this.elements.wrapper),
                            this.elements.buttons.play = null,
                            this.elements.captions = null,
                            this.elements.controls = null,
                            this.elements.wrapper = null),
                            L(t) && t()) : (yt.call(this),
                            _t.cancelRequests.call(this),
                            tt(this.elements.original, this.elements.container),
                            gt.call(this, this.elements.original, "destroyed", !0),
                            L(t) && t.call(this.elements.original),
                            this.ready = !1,
                            setTimeout(()=>{
                                this.elements = null,
                                this.media = null
                            }
                            , 200))
                        }
                        ;
                        this.stop(),
                        clearTimeout(this.timers.loading),
                        clearTimeout(this.timers.controls),
                        clearTimeout(this.timers.resized),
                        this.isHTML5 ? (Qt.toggleNativeControls.call(this, !0),
                        i()) : this.isYouTube ? (clearInterval(this.timers.buffering),
                        clearInterval(this.timers.playing),
                        null !== this.embed && L(this.embed.destroy) && this.embed.destroy(),
                        i()) : this.isVimeo && (null !== this.embed && this.embed.unload().then(i),
                        setTimeout(i, 200))
                    }
                    ),
                    t(this, "supports", t=>ct.mime.call(this, t)),
                    this.timers = {},
                    this.ready = !1,
                    this.loading = !1,
                    this.failed = !1,
                    this.touch = ct.touch,
                    this.media = e,
                    I(this.media) && (this.media = document.querySelectorAll(this.media)),
                    (window.jQuery && this.media instanceof jQuery || V(this.media) || B(this.media)) && (this.media = this.media[0]),
                    this.config = U({}, Wt, de.defaults, i || {}, (()=>{
                        try {
                            return JSON.parse(this.media.getAttribute("data-plyr-config"))
                        } catch (t) {
                            return {}
                        }
                    }
                    )()),
                    this.elements = {
                        container: null,
                        fullscreen: null,
                        captions: null,
                        buttons: {},
                        display: {},
                        progress: {},
                        inputs: {},
                        settings: {
                            popup: null,
                            menu: null,
                            panels: {},
                            buttons: {}
                        }
                    },
                    this.captions = {
                        active: null,
                        currentTrack: -1,
                        meta: new WeakMap
                    },
                    this.fullscreen = {
                        active: !1
                    },
                    this.options = {
                        speed: [],
                        quality: []
                    },
                    this.debug = new Xt(this.config.debug),
                    this.debug.log("Config", this.config),
                    this.debug.log("Support", ct),
                    _(this.media) || !R(this.media))
                        return void this.debug.error("Setup failed: no suitable element passed");
                    if (this.media.plyr)
                        return void this.debug.warn("Target already setup");
                    if (!this.config.enabled)
                        return void this.debug.error("Setup failed: disabled by config");
                    if (!ct.check().api)
                        return void this.debug.error("Setup failed: no support");
                    const s = this.media.cloneNode(!0);
                    s.autoplay = !1,
                    this.elements.original = s;
                    const n = this.media.tagName.toLowerCase();
                    let r = null
                      , a = null;
                    switch (n) {
                    case "div":
                        if (r = this.media.querySelector("iframe"),
                        R(r)) {
                            if (a = Ht(r.getAttribute("src")),
                            this.provider = function(t) {
                                return /^(https?:\/\/)?(www\.)?(youtube\.com|youtube-nocookie\.com|youtu\.?be)\/.+$/.test(t) ? Ut.youtube : /^https?:\/\/player.vimeo.com\/video\/\d{0,9}(?=\b|\/)/.test(t) ? Ut.vimeo : null
                            }(a.toString()),
                            this.elements.container = this.media,
                            this.media = r,
                            this.elements.container.className = "",
                            a.search.length) {
                                const t = ["1", "true"];
                                t.includes(a.searchParams.get("autoplay")) && (this.config.autoplay = !0),
                                t.includes(a.searchParams.get("loop")) && (this.config.loop.active = !0),
                                this.isYouTube ? (this.config.playsinline = t.includes(a.searchParams.get("playsinline")),
                                this.config.youtube.hl = a.searchParams.get("hl")) : this.config.playsinline = !0
                            }
                        } else
                            this.provider = this.media.getAttribute(this.config.attributes.embed.provider),
                            this.media.removeAttribute(this.config.attributes.embed.provider);
                        if (H(this.provider) || !Object.values(Ut).includes(this.provider))
                            return void this.debug.error("Setup failed: Invalid provider");
                        this.type = "video";
                        break;
                    case "video":
                    case "audio":
                        this.type = n,
                        this.provider = Ut.html5,
                        this.media.hasAttribute("crossorigin") && (this.config.crossorigin = !0),
                        this.media.hasAttribute("autoplay") && (this.config.autoplay = !0),
                        (this.media.hasAttribute("playsinline") || this.media.hasAttribute("webkit-playsinline")) && (this.config.playsinline = !0),
                        this.media.hasAttribute("muted") && (this.config.muted = !0),
                        this.media.hasAttribute("loop") && (this.config.loop.active = !0);
                        break;
                    default:
                        return void this.debug.error("Setup failed: unsupported type")
                    }
                    this.supported = ct.check(this.type, this.provider, this.config.playsinline),
                    this.supported.api ? (this.eventListeners = [],
                    this.listeners = new Zt(this),
                    this.storage = new Vt(this),
                    this.media.plyr = this,
                    R(this.elements.container) || (this.elements.container = J("div", {
                        tabindex: 0
                    }),
                    Y(this.media, this.elements.container)),
                    Qt.migrateStyles.call(this),
                    Qt.addStyleHook.call(this),
                    oe.setup.call(this),
                    this.config.debug && dt.call(this, this.elements.container, this.config.events.join(" "), t=>{
                        this.debug.log(`event: ${t.type}`)
                    }
                    ),
                    this.fullscreen = new Jt(this),
                    (this.isHTML5 || this.isEmbed && !this.supported.ui) && Qt.build.call(this),
                    this.listeners.container(),
                    this.listeners.global(),
                    this.config.ads.enabled && (this.ads = new le(this)),
                    this.isHTML5 && this.config.autoplay && this.once("canplay", ()=>bt(this.play())),
                    this.lastSeekTime = 0,
                    this.config.previewThumbnails.enabled && (this.previewThumbnails = new ue(this))) : this.debug.error("Setup failed: no support")
                }
                get isHTML5() {
                    return this.provider === Ut.html5
                }
                get isEmbed() {
                    return this.isYouTube || this.isVimeo
                }
                get isYouTube() {
                    return this.provider === Ut.youtube
                }
                get isVimeo() {
                    return this.provider === Ut.vimeo
                }
                get isVideo() {
                    return "video" === this.type
                }
                get isAudio() {
                    return "audio" === this.type
                }
                get playing() {
                    return Boolean(this.ready && !this.paused && !this.ended)
                }
                get paused() {
                    return Boolean(this.media.paused)
                }
                get stopped() {
                    return Boolean(this.paused && 0 === this.currentTime)
                }
                get ended() {
                    return Boolean(this.media.ended)
                }
                set currentTime(t) {
                    if (!this.duration)
                        return;
                    const e = D(t) && t > 0;
                    this.media.currentTime = e ? Math.min(t, this.duration) : 0,
                    this.debug.log(`Seeking to ${this.currentTime} seconds`)
                }
                get currentTime() {
                    return Number(this.media.currentTime)
                }
                get buffered() {
                    const {buffered: t} = this.media;
                    return D(t) ? t : t && t.length && this.duration > 0 ? t.end(0) / this.duration : 0
                }
                get seeking() {
                    return Boolean(this.media.seeking)
                }
                get duration() {
                    const t = parseFloat(this.config.duration)
                      , e = (this.media || {}).duration
                      , i = D(e) && e !== 1 / 0 ? e : 0;
                    return t || i
                }
                set volume(t) {
                    let e = t;
                    I(e) && (e = Number(e)),
                    D(e) || (e = this.storage.get("volume")),
                    D(e) || ({volume: e} = this.config),
                    e > 1 && (e = 1),
                    e < 0 && (e = 0),
                    this.config.volume = e,
                    this.media.volume = e,
                    !H(t) && this.muted && e > 0 && (this.muted = !1)
                }
                get volume() {
                    return Number(this.media.volume)
                }
                set muted(t) {
                    let e = t;
                    F(e) || (e = this.storage.get("muted")),
                    F(e) || (e = this.config.muted),
                    this.config.muted = e,
                    this.media.muted = e
                }
                get muted() {
                    return Boolean(this.media.muted)
                }
                get hasAudio() {
                    return !this.isHTML5 || !!this.isAudio || Boolean(this.media.mozHasAudio) || Boolean(this.media.webkitAudioDecodedByteCount) || Boolean(this.media.audioTracks && this.media.audioTracks.length)
                }
                set speed(t) {
                    let e = null;
                    D(t) && (e = t),
                    D(e) || (e = this.storage.get("speed")),
                    D(e) || (e = this.config.speed.selected);
                    const {minimumSpeed: i, maximumSpeed: s} = this;
                    e = function(t=0, e=0, i=255) {
                        return Math.min(Math.max(t, e), i)
                    }(e, i, s),
                    this.config.speed.selected = e,
                    setTimeout(()=>{
                        this.media.playbackRate = e
                    }
                    , 0)
                }
                get speed() {
                    return Number(this.media.playbackRate)
                }
                get minimumSpeed() {
                    return this.isYouTube ? Math.min(...this.options.speed) : this.isVimeo ? .5 : .0625
                }
                get maximumSpeed() {
                    return this.isYouTube ? Math.max(...this.options.speed) : this.isVimeo ? 2 : 16
                }
                set quality(t) {
                    const e = this.config.quality
                      , i = this.options.quality;
                    if (!i.length)
                        return;
                    let s = [!H(t) && Number(t), this.storage.get("quality"), e.selected, e.default].find(D)
                      , n = !0;
                    if (!i.includes(s)) {
                        const t = St(i, s);
                        this.debug.warn(`Unsupported quality option: ${s}, using ${t} instead`),
                        s = t,
                        n = !1
                    }
                    e.selected = s,
                    this.media.quality = s,
                    n && this.storage.set({
                        quality: s
                    })
                }
                get quality() {
                    return this.media.quality
                }
                set loop(t) {
                    const e = F(t) ? t : this.config.loop.active;
                    this.config.loop.active = e,
                    this.media.loop = e
                }
                get loop() {
                    return Boolean(this.media.loop)
                }
                set source(t) {
                    pe.change.call(this, t)
                }
                get source() {
                    return this.media.currentSrc
                }
                get download() {
                    const {download: t} = this.config.urls;
                    return z(t) ? t : this.source
                }
                set download(t) {
                    z(t) && (this.config.urls.download = t,
                    zt.setDownloadUrl.call(this))
                }
                set poster(t) {
                    this.isVideo ? Qt.setPoster.call(this, t, !1).catch(()=>{}
                    ) : this.debug.warn("Poster can only be set for video")
                }
                get poster() {
                    return this.isVideo ? this.media.getAttribute("poster") || this.media.getAttribute("data-poster") : null
                }
                get ratio() {
                    if (!this.isVideo)
                        return null;
                    const t = xt(Ct.call(this));
                    return B(t) ? t.join(":") : t
                }
                set ratio(t) {
                    this.isVideo ? I(t) && kt(t) ? (this.config.ratio = xt(t),
                    At.call(this)) : this.debug.error(`Invalid aspect ratio specified (${t})`) : this.debug.warn("Aspect ratio can only be set for video")
                }
                set autoplay(t) {
                    const e = F(t) ? t : this.config.autoplay;
                    this.config.autoplay = e
                }
                get autoplay() {
                    return Boolean(this.config.autoplay)
                }
                toggleCaptions(t) {
                    jt.toggle.call(this, t, !1)
                }
                set currentTrack(t) {
                    jt.set.call(this, t, !1)
                }
                get currentTrack() {
                    const {toggled: t, currentTrack: e} = this.captions;
                    return t ? e : -1
                }
                set language(t) {
                    jt.setLanguage.call(this, t, !1)
                }
                get language() {
                    return (jt.getCurrentTrack.call(this) || {}).language
                }
                set pip(t) {
                    if (!ct.pip)
                        return;
                    const e = F(t) ? t : !this.pip;
                    L(this.media.webkitSetPresentationMode) && this.media.webkitSetPresentationMode(e ? $t : "inline"),
                    L(this.media.requestPictureInPicture) && (!this.pip && e ? this.media.requestPictureInPicture() : this.pip && !e && document.exitPictureInPicture())
                }
                get pip() {
                    return ct.pip ? H(this.media.webkitPresentationMode) ? this.media === document.pictureInPictureElement : this.media.webkitPresentationMode === $t : null
                }
                static supported(t, e, i) {
                    return ct.check(t, e, i)
                }
                static loadSprite(t, e) {
                    return Nt(t, e)
                }
                static setup(t, e={}) {
                    let i = null;
                    return I(t) ? i = Array.from(document.querySelectorAll(t)) : V(t) ? i = Array.from(t) : B(t) && (i = t.filter(R)),
                    H(i) ? null : i.map(t=>new de(t,e))
                }
            }
            var fe;
            return de.defaults = (fe = Wt,
            JSON.parse(JSON.stringify(fe))),
            de
        }())
    }
    ).call(this, i(15))
}
, function(t, e, i) {
    var s = i(0)
      , n = i(25)
      , r = i(63)
      , a = i(64);
    function o(e) {
        var i = "function" == typeof Map ? new Map : void 0;
        return t.exports = o = function(t) {
            if (null === t || !r(t))
                return t;
            if ("function" != typeof t)
                throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== i) {
                if (i.has(t))
                    return i.get(t);
                i.set(t, e)
            }
            function e() {
                return a(t, arguments, s(this).constructor)
            }
            return e.prototype = Object.create(t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            n(e, t)
        }
        ,
        o(e)
    }
    t.exports = o
}
, function(module, exports, __webpack_require__) {
    "undefined" != typeof navigator && function(t, e) {
        module.exports = e()
    }(0, (function() {
        "use strict";
        var svgNS = "http://www.w3.org/2000/svg"
          , locationHref = ""
          , _useWebWorker = !1
          , initialDefaultFrame = -999999
          , setWebWorker = function(t) {
            _useWebWorker = !!t
        }
          , getWebWorker = function() {
            return _useWebWorker
        }
          , setLocationHref = function(t) {
            locationHref = t
        }
          , getLocationHref = function() {
            return locationHref
        };
        function createTag(t) {
            return document.createElement(t)
        }
        function extendPrototype(t, e) {
            var i, s, n = t.length;
            for (i = 0; i < n; i += 1)
                for (var r in s = t[i].prototype)
                    Object.prototype.hasOwnProperty.call(s, r) && (e.prototype[r] = s[r])
        }
        function getDescriptor(t, e) {
            return Object.getOwnPropertyDescriptor(t, e)
        }
        function createProxyFunction(t) {
            function e() {}
            return e.prototype = t,
            e
        }
        var audioControllerFactory = function() {
            function t(t) {
                this.audios = [],
                this.audioFactory = t,
                this._volume = 1,
                this._isMuted = !1
            }
            return t.prototype = {
                addAudio: function(t) {
                    this.audios.push(t)
                },
                pause: function() {
                    var t, e = this.audios.length;
                    for (t = 0; t < e; t += 1)
                        this.audios[t].pause()
                },
                resume: function() {
                    var t, e = this.audios.length;
                    for (t = 0; t < e; t += 1)
                        this.audios[t].resume()
                },
                setRate: function(t) {
                    var e, i = this.audios.length;
                    for (e = 0; e < i; e += 1)
                        this.audios[e].setRate(t)
                },
                createAudio: function(t) {
                    return this.audioFactory ? this.audioFactory(t) : window.Howl ? new window.Howl({
                        src: [t]
                    }) : {
                        isPlaying: !1,
                        play: function() {
                            this.isPlaying = !0
                        },
                        seek: function() {
                            this.isPlaying = !1
                        },
                        playing: function() {},
                        rate: function() {},
                        setVolume: function() {}
                    }
                },
                setAudioFactory: function(t) {
                    this.audioFactory = t
                },
                setVolume: function(t) {
                    this._volume = t,
                    this._updateVolume()
                },
                mute: function() {
                    this._isMuted = !0,
                    this._updateVolume()
                },
                unmute: function() {
                    this._isMuted = !1,
                    this._updateVolume()
                },
                getVolume: function() {
                    return this._volume
                },
                _updateVolume: function() {
                    var t, e = this.audios.length;
                    for (t = 0; t < e; t += 1)
                        this.audios[t].volume(this._volume * (this._isMuted ? 0 : 1))
                }
            },
            function() {
                return new t
            }
        }()
          , createTypedArray = function() {
            function t(t, e) {
                var i, s = 0, n = [];
                switch (t) {
                case "int16":
                case "uint8c":
                    i = 1;
                    break;
                default:
                    i = 1.1
                }
                for (s = 0; s < e; s += 1)
                    n.push(i);
                return n
            }
            return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array ? function(e, i) {
                return "float32" === e ? new Float32Array(i) : "int16" === e ? new Int16Array(i) : "uint8c" === e ? new Uint8ClampedArray(i) : t(e, i)
            }
            : t
        }();
        function createSizedArray(t) {
            return Array.apply(null, {
                length: t
            })
        }
        function _typeof$6(t) {
            return (_typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            )(t)
        }
        var subframeEnabled = !0
          , expressionsPlugin = null
          , expressionsInterfaces = null
          , idPrefix$1 = ""
          , isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
          , _shouldRoundValues = !1
          , bmPow = Math.pow
          , bmSqrt = Math.sqrt
          , bmFloor = Math.floor
          , bmMax = Math.max
          , bmMin = Math.min
          , BMMath = {};
        function ProjectInterface$1() {
            return {}
        }
        !function() {
            var t, e = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"], i = e.length;
            for (t = 0; t < i; t += 1)
                BMMath[e[t]] = Math[e[t]]
        }(),
        BMMath.random = Math.random,
        BMMath.abs = function(t) {
            if ("object" === _typeof$6(t) && t.length) {
                var e, i = createSizedArray(t.length), s = t.length;
                for (e = 0; e < s; e += 1)
                    i[e] = Math.abs(t[e]);
                return i
            }
            return Math.abs(t)
        }
        ;
        var defaultCurveSegments = 150
          , degToRads = Math.PI / 180
          , roundCorner = .5519;
        function roundValues(t) {
            _shouldRoundValues = !!t
        }
        function bmRnd(t) {
            return _shouldRoundValues ? Math.round(t) : t
        }
        function styleDiv(t) {
            t.style.position = "absolute",
            t.style.top = 0,
            t.style.left = 0,
            t.style.display = "block",
            t.style.transformOrigin = "0 0",
            t.style.webkitTransformOrigin = "0 0",
            t.style.backfaceVisibility = "visible",
            t.style.webkitBackfaceVisibility = "visible",
            t.style.transformStyle = "preserve-3d",
            t.style.webkitTransformStyle = "preserve-3d",
            t.style.mozTransformStyle = "preserve-3d"
        }
        function BMEnterFrameEvent(t, e, i, s) {
            this.type = t,
            this.currentTime = e,
            this.totalTime = i,
            this.direction = s < 0 ? -1 : 1
        }
        function BMCompleteEvent(t, e) {
            this.type = t,
            this.direction = e < 0 ? -1 : 1
        }
        function BMCompleteLoopEvent(t, e, i, s) {
            this.type = t,
            this.currentLoop = i,
            this.totalLoops = e,
            this.direction = s < 0 ? -1 : 1
        }
        function BMSegmentStartEvent(t, e, i) {
            this.type = t,
            this.firstFrame = e,
            this.totalFrames = i
        }
        function BMDestroyEvent(t, e) {
            this.type = t,
            this.target = e
        }
        function BMRenderFrameErrorEvent(t, e) {
            this.type = "renderFrameError",
            this.nativeError = t,
            this.currentTime = e
        }
        function BMConfigErrorEvent(t) {
            this.type = "configError",
            this.nativeError = t
        }
        function BMAnimationConfigErrorEvent(t, e) {
            this.type = t,
            this.nativeError = e
        }
        var createElementID = (_count = 0,
        function() {
            return idPrefix$1 + "__lottie_element_" + (_count += 1)
        }
        ), _count;
        function HSVtoRGB(t, e, i) {
            var s, n, r, a, o, l, h, c;
            switch (l = i * (1 - e),
            h = i * (1 - (o = 6 * t - (a = Math.floor(6 * t))) * e),
            c = i * (1 - (1 - o) * e),
            a % 6) {
            case 0:
                s = i,
                n = c,
                r = l;
                break;
            case 1:
                s = h,
                n = i,
                r = l;
                break;
            case 2:
                s = l,
                n = i,
                r = c;
                break;
            case 3:
                s = l,
                n = h,
                r = i;
                break;
            case 4:
                s = c,
                n = l,
                r = i;
                break;
            case 5:
                s = i,
                n = l,
                r = h
            }
            return [s, n, r]
        }
        function RGBtoHSV(t, e, i) {
            var s, n = Math.max(t, e, i), r = Math.min(t, e, i), a = n - r, o = 0 === n ? 0 : a / n, l = n / 255;
            switch (n) {
            case r:
                s = 0;
                break;
            case t:
                s = e - i + a * (e < i ? 6 : 0),
                s /= 6 * a;
                break;
            case e:
                s = i - t + 2 * a,
                s /= 6 * a;
                break;
            case i:
                s = t - e + 4 * a,
                s /= 6 * a
            }
            return [s, o, l]
        }
        function addSaturationToRGB(t, e) {
            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return i[1] += e,
            i[1] > 1 ? i[1] = 1 : i[1] <= 0 && (i[1] = 0),
            HSVtoRGB(i[0], i[1], i[2])
        }
        function addBrightnessToRGB(t, e) {
            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return i[2] += e,
            i[2] > 1 ? i[2] = 1 : i[2] < 0 && (i[2] = 0),
            HSVtoRGB(i[0], i[1], i[2])
        }
        function addHueToRGB(t, e) {
            var i = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
            return i[0] += e / 360,
            i[0] > 1 ? i[0] -= 1 : i[0] < 0 && (i[0] += 1),
            HSVtoRGB(i[0], i[1], i[2])
        }
        var rgbToHex = function() {
            var t, e, i = [];
            for (t = 0; t < 256; t += 1)
                e = t.toString(16),
                i[t] = 1 === e.length ? "0" + e : e;
            return function(t, e, s) {
                return t < 0 && (t = 0),
                e < 0 && (e = 0),
                s < 0 && (s = 0),
                "#" + i[t] + i[e] + i[s]
            }
        }()
          , setSubframeEnabled = function(t) {
            subframeEnabled = !!t
        }
          , getSubframeEnabled = function() {
            return subframeEnabled
        }
          , setExpressionsPlugin = function(t) {
            expressionsPlugin = t
        }
          , getExpressionsPlugin = function() {
            return expressionsPlugin
        }
          , setExpressionInterfaces = function(t) {
            expressionsInterfaces = t
        }
          , getExpressionInterfaces = function() {
            return expressionsInterfaces
        }
          , setDefaultCurveSegments = function(t) {
            defaultCurveSegments = t
        }
          , getDefaultCurveSegments = function() {
            return defaultCurveSegments
        }
          , setIdPrefix = function(t) {
            idPrefix$1 = t
        }
          , getIdPrefix = function() {
            return idPrefix$1
        };
        function createNS(t) {
            return document.createElementNS(svgNS, t)
        }
        function _typeof$5(t) {
            return (_typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            )(t)
        }
        var dataManager = function() {
            var t, e, i = 1, s = [], n = {
                onmessage: function() {},
                postMessage: function(e) {
                    t({
                        data: e
                    })
                }
            }, r = {
                postMessage: function(t) {
                    n.onmessage({
                        data: t
                    })
                }
            };
            function a() {
                e || ((e = function(e) {
                    if (window.Worker && window.Blob && getWebWorker()) {
                        var i = new Blob(["var _workerSelf = self; self.onmessage = ", e.toString()],{
                            type: "text/javascript"
                        })
                          , s = URL.createObjectURL(i);
                        return new Worker(s)
                    }
                    return t = e,
                    n
                }((function(t) {
                    if (r.dataManager || (r.dataManager = function() {
                        function t(n, r) {
                            var a, o, l, h, c, p, d = n.length;
                            for (o = 0; o < d; o += 1)
                                if ("ks"in (a = n[o]) && !a.completed) {
                                    if (a.completed = !0,
                                    a.hasMask) {
                                        var f = a.masksProperties;
                                        for (h = f.length,
                                        l = 0; l < h; l += 1)
                                            if (f[l].pt.k.i)
                                                s(f[l].pt.k);
                                            else
                                                for (p = f[l].pt.k.length,
                                                c = 0; c < p; c += 1)
                                                    f[l].pt.k[c].s && s(f[l].pt.k[c].s[0]),
                                                    f[l].pt.k[c].e && s(f[l].pt.k[c].e[0])
                                    }
                                    0 === a.ty ? (a.layers = e(a.refId, r),
                                    t(a.layers, r)) : 4 === a.ty ? i(a.shapes) : 5 === a.ty && u(a)
                                }
                        }
                        function e(t, e) {
                            var i = function(t, e) {
                                for (var i = 0, s = e.length; i < s; ) {
                                    if (e[i].id === t)
                                        return e[i];
                                    i += 1
                                }
                                return null
                            }(t, e);
                            return i ? i.layers.__used ? JSON.parse(JSON.stringify(i.layers)) : (i.layers.__used = !0,
                            i.layers) : null
                        }
                        function i(t) {
                            var e, n, r;
                            for (e = t.length - 1; e >= 0; e -= 1)
                                if ("sh" === t[e].ty)
                                    if (t[e].ks.k.i)
                                        s(t[e].ks.k);
                                    else
                                        for (r = t[e].ks.k.length,
                                        n = 0; n < r; n += 1)
                                            t[e].ks.k[n].s && s(t[e].ks.k[n].s[0]),
                                            t[e].ks.k[n].e && s(t[e].ks.k[n].e[0]);
                                else
                                    "gr" === t[e].ty && i(t[e].it)
                        }
                        function s(t) {
                            var e, i = t.i.length;
                            for (e = 0; e < i; e += 1)
                                t.i[e][0] += t.v[e][0],
                                t.i[e][1] += t.v[e][1],
                                t.o[e][0] += t.v[e][0],
                                t.o[e][1] += t.v[e][1]
                        }
                        function n(t, e) {
                            var i = e ? e.split(".") : [100, 100, 100];
                            return t[0] > i[0] || !(i[0] > t[0]) && (t[1] > i[1] || !(i[1] > t[1]) && (t[2] > i[2] || !(i[2] > t[2]) && null))
                        }
                        var r, a = function() {
                            var t = [4, 4, 14];
                            function e(t) {
                                var e, i, s, n = t.length;
                                for (e = 0; e < n; e += 1)
                                    5 === t[e].ty && (i = t[e],
                                    s = void 0,
                                    s = i.t.d,
                                    i.t.d = {
                                        k: [{
                                            s: s,
                                            t: 0
                                        }]
                                    })
                            }
                            return function(i) {
                                if (n(t, i.v) && (e(i.layers),
                                i.assets)) {
                                    var s, r = i.assets.length;
                                    for (s = 0; s < r; s += 1)
                                        i.assets[s].layers && e(i.assets[s].layers)
                                }
                            }
                        }(), o = (r = [4, 7, 99],
                        function(t) {
                            if (t.chars && !n(r, t.v)) {
                                var e, s = t.chars.length;
                                for (e = 0; e < s; e += 1) {
                                    var a = t.chars[e];
                                    a.data && a.data.shapes && (i(a.data.shapes),
                                    a.data.ip = 0,
                                    a.data.op = 99999,
                                    a.data.st = 0,
                                    a.data.sr = 1,
                                    a.data.ks = {
                                        p: {
                                            k: [0, 0],
                                            a: 0
                                        },
                                        s: {
                                            k: [100, 100],
                                            a: 0
                                        },
                                        a: {
                                            k: [0, 0],
                                            a: 0
                                        },
                                        r: {
                                            k: 0,
                                            a: 0
                                        },
                                        o: {
                                            k: 100,
                                            a: 0
                                        }
                                    },
                                    t.chars[e].t || (a.data.shapes.push({
                                        ty: "no"
                                    }),
                                    a.data.shapes[0].it.push({
                                        p: {
                                            k: [0, 0],
                                            a: 0
                                        },
                                        s: {
                                            k: [100, 100],
                                            a: 0
                                        },
                                        a: {
                                            k: [0, 0],
                                            a: 0
                                        },
                                        r: {
                                            k: 0,
                                            a: 0
                                        },
                                        o: {
                                            k: 100,
                                            a: 0
                                        },
                                        sk: {
                                            k: 0,
                                            a: 0
                                        },
                                        sa: {
                                            k: 0,
                                            a: 0
                                        },
                                        ty: "tr"
                                    })))
                                }
                            }
                        }
                        ), l = function() {
                            var t = [5, 7, 15];
                            function e(t) {
                                var e, i, s, n = t.length;
                                for (e = 0; e < n; e += 1)
                                    5 === t[e].ty && (i = t[e],
                                    s = void 0,
                                    "number" == typeof (s = i.t.p).a && (s.a = {
                                        a: 0,
                                        k: s.a
                                    }),
                                    "number" == typeof s.p && (s.p = {
                                        a: 0,
                                        k: s.p
                                    }),
                                    "number" == typeof s.r && (s.r = {
                                        a: 0,
                                        k: s.r
                                    }))
                            }
                            return function(i) {
                                if (n(t, i.v) && (e(i.layers),
                                i.assets)) {
                                    var s, r = i.assets.length;
                                    for (s = 0; s < r; s += 1)
                                        i.assets[s].layers && e(i.assets[s].layers)
                                }
                            }
                        }(), h = function() {
                            var t = [4, 1, 9];
                            function e(t) {
                                var i, s, n, r = t.length;
                                for (i = 0; i < r; i += 1)
                                    if ("gr" === t[i].ty)
                                        e(t[i].it);
                                    else if ("fl" === t[i].ty || "st" === t[i].ty)
                                        if (t[i].c.k && t[i].c.k[0].i)
                                            for (n = t[i].c.k.length,
                                            s = 0; s < n; s += 1)
                                                t[i].c.k[s].s && (t[i].c.k[s].s[0] /= 255,
                                                t[i].c.k[s].s[1] /= 255,
                                                t[i].c.k[s].s[2] /= 255,
                                                t[i].c.k[s].s[3] /= 255),
                                                t[i].c.k[s].e && (t[i].c.k[s].e[0] /= 255,
                                                t[i].c.k[s].e[1] /= 255,
                                                t[i].c.k[s].e[2] /= 255,
                                                t[i].c.k[s].e[3] /= 255);
                                        else
                                            t[i].c.k[0] /= 255,
                                            t[i].c.k[1] /= 255,
                                            t[i].c.k[2] /= 255,
                                            t[i].c.k[3] /= 255
                            }
                            function i(t) {
                                var i, s = t.length;
                                for (i = 0; i < s; i += 1)
                                    4 === t[i].ty && e(t[i].shapes)
                            }
                            return function(e) {
                                if (n(t, e.v) && (i(e.layers),
                                e.assets)) {
                                    var s, r = e.assets.length;
                                    for (s = 0; s < r; s += 1)
                                        e.assets[s].layers && i(e.assets[s].layers)
                                }
                            }
                        }(), c = function() {
                            var t = [4, 4, 18];
                            function e(t) {
                                var i, s, n;
                                for (i = t.length - 1; i >= 0; i -= 1)
                                    if ("sh" === t[i].ty)
                                        if (t[i].ks.k.i)
                                            t[i].ks.k.c = t[i].closed;
                                        else
                                            for (n = t[i].ks.k.length,
                                            s = 0; s < n; s += 1)
                                                t[i].ks.k[s].s && (t[i].ks.k[s].s[0].c = t[i].closed),
                                                t[i].ks.k[s].e && (t[i].ks.k[s].e[0].c = t[i].closed);
                                    else
                                        "gr" === t[i].ty && e(t[i].it)
                            }
                            function i(t) {
                                var i, s, n, r, a, o, l = t.length;
                                for (s = 0; s < l; s += 1) {
                                    if ((i = t[s]).hasMask) {
                                        var h = i.masksProperties;
                                        for (r = h.length,
                                        n = 0; n < r; n += 1)
                                            if (h[n].pt.k.i)
                                                h[n].pt.k.c = h[n].cl;
                                            else
                                                for (o = h[n].pt.k.length,
                                                a = 0; a < o; a += 1)
                                                    h[n].pt.k[a].s && (h[n].pt.k[a].s[0].c = h[n].cl),
                                                    h[n].pt.k[a].e && (h[n].pt.k[a].e[0].c = h[n].cl)
                                    }
                                    4 === i.ty && e(i.shapes)
                                }
                            }
                            return function(e) {
                                if (n(t, e.v) && (i(e.layers),
                                e.assets)) {
                                    var s, r = e.assets.length;
                                    for (s = 0; s < r; s += 1)
                                        e.assets[s].layers && i(e.assets[s].layers)
                                }
                            }
                        }();
                        function u(t) {
                            0 === t.t.a.length && t.t.p
                        }
                        var p = {
                            completeData: function(i) {
                                i.__complete || (h(i),
                                a(i),
                                o(i),
                                l(i),
                                c(i),
                                t(i.layers, i.assets),
                                function(i, s) {
                                    if (i) {
                                        var n = 0
                                          , r = i.length;
                                        for (n = 0; n < r; n += 1)
                                            1 === i[n].t && (i[n].data.layers = e(i[n].data.refId, s),
                                            t(i[n].data.layers, s))
                                    }
                                }(i.chars, i.assets),
                                i.__complete = !0)
                            }
                        };
                        return p.checkColors = h,
                        p.checkChars = o,
                        p.checkPathProperties = l,
                        p.checkShapes = c,
                        p.completeLayers = t,
                        p
                    }()),
                    r.assetLoader || (r.assetLoader = function() {
                        function t(t) {
                            var e = t.getResponseHeader("content-type");
                            return e && "json" === t.responseType && -1 !== e.indexOf("json") || t.response && "object" === _typeof$5(t.response) ? t.response : t.response && "string" == typeof t.response ? JSON.parse(t.response) : t.responseText ? JSON.parse(t.responseText) : null
                        }
                        return {
                            load: function(e, i, s, n) {
                                var r, a = new XMLHttpRequest;
                                try {
                                    a.responseType = "json"
                                } catch (t) {}
                                a.onreadystatechange = function() {
                                    if (4 === a.readyState)
                                        if (200 === a.status)
                                            r = t(a),
                                            s(r);
                                        else
                                            try {
                                                r = t(a),
                                                s(r)
                                            } catch (t) {
                                                n && n(t)
                                            }
                                }
                                ;
                                try {
                                    a.open(["G", "E", "T"].join(""), e, !0)
                                } catch (t) {
                                    a.open(["G", "E", "T"].join(""), i + "/" + e, !0)
                                }
                                a.send()
                            }
                        }
                    }()),
                    "loadAnimation" === t.data.type)
                        r.assetLoader.load(t.data.path, t.data.fullPath, (function(e) {
                            r.dataManager.completeData(e),
                            r.postMessage({
                                id: t.data.id,
                                payload: e,
                                status: "success"
                            })
                        }
                        ), (function() {
                            r.postMessage({
                                id: t.data.id,
                                status: "error"
                            })
                        }
                        ));
                    else if ("complete" === t.data.type) {
                        var e = t.data.animation;
                        r.dataManager.completeData(e),
                        r.postMessage({
                            id: t.data.id,
                            payload: e,
                            status: "success"
                        })
                    } else
                        "loadData" === t.data.type && r.assetLoader.load(t.data.path, t.data.fullPath, (function(e) {
                            r.postMessage({
                                id: t.data.id,
                                payload: e,
                                status: "success"
                            })
                        }
                        ), (function() {
                            r.postMessage({
                                id: t.data.id,
                                status: "error"
                            })
                        }
                        ))
                }
                ))).onmessage = function(t) {
                    var e = t.data
                      , i = e.id
                      , n = s[i];
                    s[i] = null,
                    "success" === e.status ? n.onComplete(e.payload) : n.onError && n.onError()
                }
                )
            }
            function o(t, e) {
                var n = "processId_" + (i += 1);
                return s[n] = {
                    onComplete: t,
                    onError: e
                },
                n
            }
            return {
                loadAnimation: function(t, i, s) {
                    a();
                    var n = o(i, s);
                    e.postMessage({
                        type: "loadAnimation",
                        path: t,
                        fullPath: window.location.origin + window.location.pathname,
                        id: n
                    })
                },
                loadData: function(t, i, s) {
                    a();
                    var n = o(i, s);
                    e.postMessage({
                        type: "loadData",
                        path: t,
                        fullPath: window.location.origin + window.location.pathname,
                        id: n
                    })
                },
                completeAnimation: function(t, i, s) {
                    a();
                    var n = o(i, s);
                    e.postMessage({
                        type: "complete",
                        animation: t,
                        id: n
                    })
                }
            }
        }()
          , ImagePreloader = function() {
            var t = function() {
                var t = createTag("canvas");
                t.width = 1,
                t.height = 1;
                var e = t.getContext("2d");
                return e.fillStyle = "rgba(0,0,0,0)",
                e.fillRect(0, 0, 1, 1),
                t
            }();
            function e() {
                this.loadedAssets += 1,
                this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
            }
            function i() {
                this.loadedFootagesCount += 1,
                this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
            }
            function s(t, e, i) {
                var s = "";
                if (t.e)
                    s = t.p;
                else if (e) {
                    var n = t.p;
                    -1 !== n.indexOf("images/") && (n = n.split("/")[1]),
                    s = e + n
                } else
                    s = i,
                    s += t.u ? t.u : "",
                    s += t.p;
                return s
            }
            function n(t) {
                var e = 0
                  , i = setInterval(function() {
                    (t.getBBox().width || e > 500) && (this._imageLoaded(),
                    clearInterval(i)),
                    e += 1
                }
                .bind(this), 50)
            }
            function r(t) {
                var e = {
                    assetData: t
                }
                  , i = s(t, this.assetsPath, this.path);
                return dataManager.loadData(i, function(t) {
                    e.img = t,
                    this._footageLoaded()
                }
                .bind(this), function() {
                    e.img = {},
                    this._footageLoaded()
                }
                .bind(this)),
                e
            }
            function a() {
                this._imageLoaded = e.bind(this),
                this._footageLoaded = i.bind(this),
                this.testImageLoaded = n.bind(this),
                this.createFootageData = r.bind(this),
                this.assetsPath = "",
                this.path = "",
                this.totalImages = 0,
                this.totalFootages = 0,
                this.loadedAssets = 0,
                this.loadedFootagesCount = 0,
                this.imagesLoadedCb = null,
                this.images = []
            }
            return a.prototype = {
                loadAssets: function(t, e) {
                    var i;
                    this.imagesLoadedCb = e;
                    var s = t.length;
                    for (i = 0; i < s; i += 1)
                        t[i].layers || (t[i].t && "seq" !== t[i].t ? 3 === t[i].t && (this.totalFootages += 1,
                        this.images.push(this.createFootageData(t[i]))) : (this.totalImages += 1,
                        this.images.push(this._createImageData(t[i]))))
                },
                setAssetsPath: function(t) {
                    this.assetsPath = t || ""
                },
                setPath: function(t) {
                    this.path = t || ""
                },
                loadedImages: function() {
                    return this.totalImages === this.loadedAssets
                },
                loadedFootages: function() {
                    return this.totalFootages === this.loadedFootagesCount
                },
                destroy: function() {
                    this.imagesLoadedCb = null,
                    this.images.length = 0
                },
                getAsset: function(t) {
                    for (var e = 0, i = this.images.length; e < i; ) {
                        if (this.images[e].assetData === t)
                            return this.images[e].img;
                        e += 1
                    }
                    return null
                },
                createImgData: function(e) {
                    var i = s(e, this.assetsPath, this.path)
                      , n = createTag("img");
                    n.crossOrigin = "anonymous",
                    n.addEventListener("load", this._imageLoaded, !1),
                    n.addEventListener("error", function() {
                        r.img = t,
                        this._imageLoaded()
                    }
                    .bind(this), !1),
                    n.src = i;
                    var r = {
                        img: n,
                        assetData: e
                    };
                    return r
                },
                createImageData: function(e) {
                    var i = s(e, this.assetsPath, this.path)
                      , n = createNS("image");
                    isSafari ? this.testImageLoaded(n) : n.addEventListener("load", this._imageLoaded, !1),
                    n.addEventListener("error", function() {
                        r.img = t,
                        this._imageLoaded()
                    }
                    .bind(this), !1),
                    n.setAttributeNS("http://www.w3.org/1999/xlink", "href", i),
                    this._elementHelper.append ? this._elementHelper.append(n) : this._elementHelper.appendChild(n);
                    var r = {
                        img: n,
                        assetData: e
                    };
                    return r
                },
                imageLoaded: e,
                footageLoaded: i,
                setCacheType: function(t, e) {
                    "svg" === t ? (this._elementHelper = e,
                    this._createImageData = this.createImageData.bind(this)) : this._createImageData = this.createImgData.bind(this)
                }
            },
            a
        }();
        function BaseEvent() {}
        BaseEvent.prototype = {
            triggerEvent: function(t, e) {
                if (this._cbs[t])
                    for (var i = this._cbs[t], s = 0; s < i.length; s += 1)
                        i[s](e)
            },
            addEventListener: function(t, e) {
                return this._cbs[t] || (this._cbs[t] = []),
                this._cbs[t].push(e),
                function() {
                    this.removeEventListener(t, e)
                }
                .bind(this)
            },
            removeEventListener: function(t, e) {
                if (e) {
                    if (this._cbs[t]) {
                        for (var i = 0, s = this._cbs[t].length; i < s; )
                            this._cbs[t][i] === e && (this._cbs[t].splice(i, 1),
                            i -= 1,
                            s -= 1),
                            i += 1;
                        this._cbs[t].length || (this._cbs[t] = null)
                    }
                } else
                    this._cbs[t] = null
            }
        };
        var markerParser = function() {
            function t(t) {
                for (var e, i = t.split("\r\n"), s = {}, n = 0, r = 0; r < i.length; r += 1)
                    2 === (e = i[r].split(":")).length && (s[e[0]] = e[1].trim(),
                    n += 1);
                if (0 === n)
                    throw new Error;
                return s
            }
            return function(e) {
                for (var i = [], s = 0; s < e.length; s += 1) {
                    var n = e[s]
                      , r = {
                        time: n.tm,
                        duration: n.dr
                    };
                    try {
                        r.payload = JSON.parse(e[s].cm)
                    } catch (i) {
                        try {
                            r.payload = t(e[s].cm)
                        } catch (t) {
                            r.payload = {
                                name: e[s].cm
                            }
                        }
                    }
                    i.push(r)
                }
                return i
            }
        }()
          , ProjectInterface = function() {
            function t(t) {
                this.compositions.push(t)
            }
            return function() {
                function e(t) {
                    for (var e = 0, i = this.compositions.length; e < i; ) {
                        if (this.compositions[e].data && this.compositions[e].data.nm === t)
                            return this.compositions[e].prepareFrame && this.compositions[e].data.xt && this.compositions[e].prepareFrame(this.currentFrame),
                            this.compositions[e].compInterface;
                        e += 1
                    }
                    return null
                }
                return e.compositions = [],
                e.currentFrame = 0,
                e.registerComposition = t,
                e
            }
        }()
          , renderers = {}
          , registerRenderer = function(t, e) {
            renderers[t] = e
        };
        function getRenderer(t) {
            return renderers[t]
        }
        function _typeof$4(t) {
            return (_typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            )(t)
        }
        var AnimationItem = function() {
            this._cbs = [],
            this.name = "",
            this.path = "",
            this.isLoaded = !1,
            this.currentFrame = 0,
            this.currentRawFrame = 0,
            this.firstFrame = 0,
            this.totalFrames = 0,
            this.frameRate = 0,
            this.frameMult = 0,
            this.playSpeed = 1,
            this.playDirection = 1,
            this.playCount = 0,
            this.animationData = {},
            this.assets = [],
            this.isPaused = !0,
            this.autoplay = !1,
            this.loop = !0,
            this.renderer = null,
            this.animationID = createElementID(),
            this.assetsPath = "",
            this.timeCompleted = 0,
            this.segmentPos = 0,
            this.isSubframeEnabled = getSubframeEnabled(),
            this.segments = [],
            this._idle = !0,
            this._completedLoop = !1,
            this.projectInterface = ProjectInterface(),
            this.imagePreloader = new ImagePreloader,
            this.audioController = audioControllerFactory(),
            this.markers = [],
            this.configAnimation = this.configAnimation.bind(this),
            this.onSetupError = this.onSetupError.bind(this),
            this.onSegmentComplete = this.onSegmentComplete.bind(this),
            this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame",0,0,0)
        };
        extendPrototype([BaseEvent], AnimationItem),
        AnimationItem.prototype.setParams = function(t) {
            (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
            var e = "svg";
            t.animType ? e = t.animType : t.renderer && (e = t.renderer);
            var i = getRenderer(e);
            this.renderer = new i(this,t.rendererSettings),
            this.imagePreloader.setCacheType(e, this.renderer.globalData.defs),
            this.renderer.setProjectInterface(this.projectInterface),
            this.animType = e,
            "" === t.loop || null === t.loop || void 0 === t.loop || !0 === t.loop ? this.loop = !0 : !1 === t.loop ? this.loop = !1 : this.loop = parseInt(t.loop, 10),
            this.autoplay = !("autoplay"in t) || t.autoplay,
            this.name = t.name ? t.name : "",
            this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") || t.autoloadSegments,
            this.assetsPath = t.assetsPath,
            this.initialSegment = t.initialSegment,
            t.audioFactory && this.audioController.setAudioFactory(t.audioFactory),
            t.animationData ? this.setupAnimation(t.animationData) : t.path && (-1 !== t.path.lastIndexOf("\\") ? this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1) : this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1),
            this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1),
            this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")),
            dataManager.loadAnimation(t.path, this.configAnimation, this.onSetupError))
        }
        ,
        AnimationItem.prototype.onSetupError = function() {
            this.trigger("data_failed")
        }
        ,
        AnimationItem.prototype.setupAnimation = function(t) {
            dataManager.completeAnimation(t, this.configAnimation)
        }
        ,
        AnimationItem.prototype.setData = function(t, e) {
            e && "object" !== _typeof$4(e) && (e = JSON.parse(e));
            var i = {
                wrapper: t,
                animationData: e
            }
              , s = t.attributes;
            i.path = s.getNamedItem("data-animation-path") ? s.getNamedItem("data-animation-path").value : s.getNamedItem("data-bm-path") ? s.getNamedItem("data-bm-path").value : s.getNamedItem("bm-path") ? s.getNamedItem("bm-path").value : "",
            i.animType = s.getNamedItem("data-anim-type") ? s.getNamedItem("data-anim-type").value : s.getNamedItem("data-bm-type") ? s.getNamedItem("data-bm-type").value : s.getNamedItem("bm-type") ? s.getNamedItem("bm-type").value : s.getNamedItem("data-bm-renderer") ? s.getNamedItem("data-bm-renderer").value : s.getNamedItem("bm-renderer") ? s.getNamedItem("bm-renderer").value : "canvas";
            var n = s.getNamedItem("data-anim-loop") ? s.getNamedItem("data-anim-loop").value : s.getNamedItem("data-bm-loop") ? s.getNamedItem("data-bm-loop").value : s.getNamedItem("bm-loop") ? s.getNamedItem("bm-loop").value : "";
            "false" === n ? i.loop = !1 : "true" === n ? i.loop = !0 : "" !== n && (i.loop = parseInt(n, 10));
            var r = s.getNamedItem("data-anim-autoplay") ? s.getNamedItem("data-anim-autoplay").value : s.getNamedItem("data-bm-autoplay") ? s.getNamedItem("data-bm-autoplay").value : !s.getNamedItem("bm-autoplay") || s.getNamedItem("bm-autoplay").value;
            i.autoplay = "false" !== r,
            i.name = s.getNamedItem("data-name") ? s.getNamedItem("data-name").value : s.getNamedItem("data-bm-name") ? s.getNamedItem("data-bm-name").value : s.getNamedItem("bm-name") ? s.getNamedItem("bm-name").value : "",
            "false" === (s.getNamedItem("data-anim-prerender") ? s.getNamedItem("data-anim-prerender").value : s.getNamedItem("data-bm-prerender") ? s.getNamedItem("data-bm-prerender").value : s.getNamedItem("bm-prerender") ? s.getNamedItem("bm-prerender").value : "") && (i.prerender = !1),
            this.setParams(i)
        }
        ,
        AnimationItem.prototype.includeLayers = function(t) {
            t.op > this.animationData.op && (this.animationData.op = t.op,
            this.totalFrames = Math.floor(t.op - this.animationData.ip));
            var e, i, s = this.animationData.layers, n = s.length, r = t.layers, a = r.length;
            for (i = 0; i < a; i += 1)
                for (e = 0; e < n; ) {
                    if (s[e].id === r[i].id) {
                        s[e] = r[i];
                        break
                    }
                    e += 1
                }
            if ((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars),
            this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)),
            t.assets)
                for (n = t.assets.length,
                e = 0; e < n; e += 1)
                    this.animationData.assets.push(t.assets[e]);
            this.animationData.__complete = !1,
            dataManager.completeAnimation(this.animationData, this.onSegmentComplete)
        }
        ,
        AnimationItem.prototype.onSegmentComplete = function(t) {
            this.animationData = t;
            var e = getExpressionsPlugin();
            e && e.initExpressions(this),
            this.loadNextSegment()
        }
        ,
        AnimationItem.prototype.loadNextSegment = function() {
            var t = this.animationData.segments;
            if (!t || 0 === t.length || !this.autoloadSegments)
                return this.trigger("data_ready"),
                void (this.timeCompleted = this.totalFrames);
            var e = t.shift();
            this.timeCompleted = e.time * this.frameRate;
            var i = this.path + this.fileName + "_" + this.segmentPos + ".json";
            this.segmentPos += 1,
            dataManager.loadData(i, this.includeLayers.bind(this), function() {
                this.trigger("data_failed")
            }
            .bind(this))
        }
        ,
        AnimationItem.prototype.loadSegments = function() {
            this.animationData.segments || (this.timeCompleted = this.totalFrames),
            this.loadNextSegment()
        }
        ,
        AnimationItem.prototype.imagesLoaded = function() {
            this.trigger("loaded_images"),
            this.checkLoaded()
        }
        ,
        AnimationItem.prototype.preloadImages = function() {
            this.imagePreloader.setAssetsPath(this.assetsPath),
            this.imagePreloader.setPath(this.path),
            this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))
        }
        ,
        AnimationItem.prototype.configAnimation = function(t) {
            if (this.renderer)
                try {
                    this.animationData = t,
                    this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]),
                    this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip),
                    this.firstFrame = Math.round(this.animationData.ip)),
                    this.renderer.configAnimation(t),
                    t.assets || (t.assets = []),
                    this.assets = this.animationData.assets,
                    this.frameRate = this.animationData.fr,
                    this.frameMult = this.animationData.fr / 1e3,
                    this.renderer.searchExtraCompositions(t.assets),
                    this.markers = markerParser(t.markers || []),
                    this.trigger("config_ready"),
                    this.preloadImages(),
                    this.loadSegments(),
                    this.updaFrameModifier(),
                    this.waitForFontsLoaded(),
                    this.isPaused && this.audioController.pause()
                } catch (t) {
                    this.triggerConfigError(t)
                }
        }
        ,
        AnimationItem.prototype.waitForFontsLoaded = function() {
            this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20))
        }
        ,
        AnimationItem.prototype.checkLoaded = function() {
            if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages()) {
                this.isLoaded = !0;
                var t = getExpressionsPlugin();
                t && t.initExpressions(this),
                this.renderer.initItems(),
                setTimeout(function() {
                    this.trigger("DOMLoaded")
                }
                .bind(this), 0),
                this.gotoFrame(),
                this.autoplay && this.play()
            }
        }
        ,
        AnimationItem.prototype.resize = function(t, e) {
            var i = "number" == typeof t ? t : void 0
              , s = "number" == typeof e ? e : void 0;
            this.renderer.updateContainerSize(i, s)
        }
        ,
        AnimationItem.prototype.setSubframe = function(t) {
            this.isSubframeEnabled = !!t
        }
        ,
        AnimationItem.prototype.gotoFrame = function() {
            this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame,
            this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted),
            this.trigger("enterFrame"),
            this.renderFrame(),
            this.trigger("drawnFrame")
        }
        ,
        AnimationItem.prototype.renderFrame = function() {
            if (!1 !== this.isLoaded && this.renderer)
                try {
                    this.renderer.renderFrame(this.currentFrame + this.firstFrame)
                } catch (t) {
                    this.triggerRenderFrameError(t)
                }
        }
        ,
        AnimationItem.prototype.play = function(t) {
            t && this.name !== t || !0 === this.isPaused && (this.isPaused = !1,
            this.trigger("_pause"),
            this.audioController.resume(),
            this._idle && (this._idle = !1,
            this.trigger("_active")))
        }
        ,
        AnimationItem.prototype.pause = function(t) {
            t && this.name !== t || !1 === this.isPaused && (this.isPaused = !0,
            this.trigger("_play"),
            this._idle = !0,
            this.trigger("_idle"),
            this.audioController.pause())
        }
        ,
        AnimationItem.prototype.togglePause = function(t) {
            t && this.name !== t || (!0 === this.isPaused ? this.play() : this.pause())
        }
        ,
        AnimationItem.prototype.stop = function(t) {
            t && this.name !== t || (this.pause(),
            this.playCount = 0,
            this._completedLoop = !1,
            this.setCurrentRawFrameValue(0))
        }
        ,
        AnimationItem.prototype.getMarkerData = function(t) {
            for (var e, i = 0; i < this.markers.length; i += 1)
                if ((e = this.markers[i]).payload && e.payload.name === t)
                    return e;
            return null
        }
        ,
        AnimationItem.prototype.goToAndStop = function(t, e, i) {
            if (!i || this.name === i) {
                var s = Number(t);
                if (isNaN(s)) {
                    var n = this.getMarkerData(t);
                    n && this.goToAndStop(n.time, !0)
                } else
                    e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);
                this.pause()
            }
        }
        ,
        AnimationItem.prototype.goToAndPlay = function(t, e, i) {
            if (!i || this.name === i) {
                var s = Number(t);
                if (isNaN(s)) {
                    var n = this.getMarkerData(t);
                    n && (n.duration ? this.playSegments([n.time, n.time + n.duration], !0) : this.goToAndStop(n.time, !0))
                } else
                    this.goToAndStop(s, e, i);
                this.play()
            }
        }
        ,
        AnimationItem.prototype.advanceTime = function(t) {
            if (!0 !== this.isPaused && !1 !== this.isLoaded) {
                var e = this.currentRawFrame + t * this.frameModifier
                  , i = !1;
                e >= this.totalFrames - 1 && this.frameModifier > 0 ? this.loop && this.playCount !== this.loop ? e >= this.totalFrames ? (this.playCount += 1,
                this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames),
                this._completedLoop = !0,
                this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(e) : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || (i = !0,
                e = this.totalFrames - 1) : e < 0 ? this.checkSegments(e % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && !0 !== this.loop ? (i = !0,
                e = 0) : (this.setCurrentRawFrameValue(this.totalFrames + e % this.totalFrames),
                this._completedLoop ? this.trigger("loopComplete") : this._completedLoop = !0)) : this.setCurrentRawFrameValue(e),
                i && (this.setCurrentRawFrameValue(e),
                this.pause(),
                this.trigger("complete"))
            }
        }
        ,
        AnimationItem.prototype.adjustSegment = function(t, e) {
            this.playCount = 0,
            t[1] < t[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)),
            this.totalFrames = t[0] - t[1],
            this.timeCompleted = this.totalFrames,
            this.firstFrame = t[1],
            this.setCurrentRawFrameValue(this.totalFrames - .001 - e)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)),
            this.totalFrames = t[1] - t[0],
            this.timeCompleted = this.totalFrames,
            this.firstFrame = t[0],
            this.setCurrentRawFrameValue(.001 + e)),
            this.trigger("segmentStart")
        }
        ,
        AnimationItem.prototype.setSegment = function(t, e) {
            var i = -1;
            this.isPaused && (this.currentRawFrame + this.firstFrame < t ? i = t : this.currentRawFrame + this.firstFrame > e && (i = e - t)),
            this.firstFrame = t,
            this.totalFrames = e - t,
            this.timeCompleted = this.totalFrames,
            -1 !== i && this.goToAndStop(i, !0)
        }
        ,
        AnimationItem.prototype.playSegments = function(t, e) {
            if (e && (this.segments.length = 0),
            "object" === _typeof$4(t[0])) {
                var i, s = t.length;
                for (i = 0; i < s; i += 1)
                    this.segments.push(t[i])
            } else
                this.segments.push(t);
            this.segments.length && e && this.adjustSegment(this.segments.shift(), 0),
            this.isPaused && this.play()
        }
        ,
        AnimationItem.prototype.resetSegments = function(t) {
            this.segments.length = 0,
            this.segments.push([this.animationData.ip, this.animationData.op]),
            t && this.checkSegments(0)
        }
        ,
        AnimationItem.prototype.checkSegments = function(t) {
            return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t),
            !0)
        }
        ,
        AnimationItem.prototype.destroy = function(t) {
            t && this.name !== t || !this.renderer || (this.renderer.destroy(),
            this.imagePreloader.destroy(),
            this.trigger("destroy"),
            this._cbs = null,
            this.onEnterFrame = null,
            this.onLoopComplete = null,
            this.onComplete = null,
            this.onSegmentStart = null,
            this.onDestroy = null,
            this.renderer = null,
            this.renderer = null,
            this.imagePreloader = null,
            this.projectInterface = null)
        }
        ,
        AnimationItem.prototype.setCurrentRawFrameValue = function(t) {
            this.currentRawFrame = t,
            this.gotoFrame()
        }
        ,
        AnimationItem.prototype.setSpeed = function(t) {
            this.playSpeed = t,
            this.updaFrameModifier()
        }
        ,
        AnimationItem.prototype.setDirection = function(t) {
            this.playDirection = t < 0 ? -1 : 1,
            this.updaFrameModifier()
        }
        ,
        AnimationItem.prototype.setLoop = function(t) {
            this.loop = t
        }
        ,
        AnimationItem.prototype.setVolume = function(t, e) {
            e && this.name !== e || this.audioController.setVolume(t)
        }
        ,
        AnimationItem.prototype.getVolume = function() {
            return this.audioController.getVolume()
        }
        ,
        AnimationItem.prototype.mute = function(t) {
            t && this.name !== t || this.audioController.mute()
        }
        ,
        AnimationItem.prototype.unmute = function(t) {
            t && this.name !== t || this.audioController.unmute()
        }
        ,
        AnimationItem.prototype.updaFrameModifier = function() {
            this.frameModifier = this.frameMult * this.playSpeed * this.playDirection,
            this.audioController.setRate(this.playSpeed * this.playDirection)
        }
        ,
        AnimationItem.prototype.getPath = function() {
            return this.path
        }
        ,
        AnimationItem.prototype.getAssetsPath = function(t) {
            var e = "";
            if (t.e)
                e = t.p;
            else if (this.assetsPath) {
                var i = t.p;
                -1 !== i.indexOf("images/") && (i = i.split("/")[1]),
                e = this.assetsPath + i
            } else
                e = this.path,
                e += t.u ? t.u : "",
                e += t.p;
            return e
        }
        ,
        AnimationItem.prototype.getAssetData = function(t) {
            for (var e = 0, i = this.assets.length; e < i; ) {
                if (t === this.assets[e].id)
                    return this.assets[e];
                e += 1
            }
            return null
        }
        ,
        AnimationItem.prototype.hide = function() {
            this.renderer.hide()
        }
        ,
        AnimationItem.prototype.show = function() {
            this.renderer.show()
        }
        ,
        AnimationItem.prototype.getDuration = function(t) {
            return t ? this.totalFrames : this.totalFrames / this.frameRate
        }
        ,
        AnimationItem.prototype.updateDocumentData = function(t, e, i) {
            try {
                this.renderer.getElementByPath(t).updateDocumentData(e, i)
            } catch (t) {}
        }
        ,
        AnimationItem.prototype.trigger = function(t) {
            if (this._cbs && this._cbs[t])
                switch (t) {
                case "enterFrame":
                    this.triggerEvent(t, new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameModifier));
                    break;
                case "drawnFrame":
                    this.drawnFrameEvent.currentTime = this.currentFrame,
                    this.drawnFrameEvent.totalTime = this.totalFrames,
                    this.drawnFrameEvent.direction = this.frameModifier,
                    this.triggerEvent(t, this.drawnFrameEvent);
                    break;
                case "loopComplete":
                    this.triggerEvent(t, new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult));
                    break;
                case "complete":
                    this.triggerEvent(t, new BMCompleteEvent(t,this.frameMult));
                    break;
                case "segmentStart":
                    this.triggerEvent(t, new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames));
                    break;
                case "destroy":
                    this.triggerEvent(t, new BMDestroyEvent(t,this));
                    break;
                default:
                    this.triggerEvent(t)
                }
            "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameMult)),
            "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult)),
            "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t,this.frameMult)),
            "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames)),
            "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t,this))
        }
        ,
        AnimationItem.prototype.triggerRenderFrameError = function(t) {
            var e = new BMRenderFrameErrorEvent(t,this.currentFrame);
            this.triggerEvent("error", e),
            this.onError && this.onError.call(this, e)
        }
        ,
        AnimationItem.prototype.triggerConfigError = function(t) {
            var e = new BMConfigErrorEvent(t,this.currentFrame);
            this.triggerEvent("error", e),
            this.onError && this.onError.call(this, e)
        }
        ;
        var animationManager = function() {
            var t = {}
              , e = []
              , i = 0
              , s = 0
              , n = 0
              , r = !0
              , a = !1;
            function o(t) {
                for (var i = 0, n = t.target; i < s; )
                    e[i].animation === n && (e.splice(i, 1),
                    i -= 1,
                    s -= 1,
                    n.isPaused || c()),
                    i += 1
            }
            function l(t, i) {
                if (!t)
                    return null;
                for (var n = 0; n < s; ) {
                    if (e[n].elem === t && null !== e[n].elem)
                        return e[n].animation;
                    n += 1
                }
                var r = new AnimationItem;
                return u(r, t),
                r.setData(t, i),
                r
            }
            function h() {
                n += 1,
                f()
            }
            function c() {
                n -= 1
            }
            function u(t, i) {
                t.addEventListener("destroy", o),
                t.addEventListener("_active", h),
                t.addEventListener("_idle", c),
                e.push({
                    elem: i,
                    animation: t
                }),
                s += 1
            }
            function p(t) {
                var o, l = t - i;
                for (o = 0; o < s; o += 1)
                    e[o].animation.advanceTime(l);
                i = t,
                n && !a ? window.requestAnimationFrame(p) : r = !0
            }
            function d(t) {
                i = t,
                window.requestAnimationFrame(p)
            }
            function f() {
                !a && n && r && (window.requestAnimationFrame(d),
                r = !1)
            }
            return t.registerAnimation = l,
            t.loadAnimation = function(t) {
                var e = new AnimationItem;
                return u(e, null),
                e.setParams(t),
                e
            }
            ,
            t.setSpeed = function(t, i) {
                var n;
                for (n = 0; n < s; n += 1)
                    e[n].animation.setSpeed(t, i)
            }
            ,
            t.setDirection = function(t, i) {
                var n;
                for (n = 0; n < s; n += 1)
                    e[n].animation.setDirection(t, i)
            }
            ,
            t.play = function(t) {
                var i;
                for (i = 0; i < s; i += 1)
                    e[i].animation.play(t)
            }
            ,
            t.pause = function(t) {
                var i;
                for (i = 0; i < s; i += 1)
                    e[i].animation.pause(t)
            }
            ,
            t.stop = function(t) {
                var i;
                for (i = 0; i < s; i += 1)
                    e[i].animation.stop(t)
            }
            ,
            t.togglePause = function(t) {
                var i;
                for (i = 0; i < s; i += 1)
                    e[i].animation.togglePause(t)
            }
            ,
            t.searchAnimations = function(t, e, i) {
                var s, n = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))), r = n.length;
                for (s = 0; s < r; s += 1)
                    i && n[s].setAttribute("data-bm-type", i),
                    l(n[s], t);
                if (e && 0 === r) {
                    i || (i = "svg");
                    var a = document.getElementsByTagName("body")[0];
                    a.innerText = "";
                    var o = createTag("div");
                    o.style.width = "100%",
                    o.style.height = "100%",
                    o.setAttribute("data-bm-type", i),
                    a.appendChild(o),
                    l(o, t)
                }
            }
            ,
            t.resize = function() {
                var t;
                for (t = 0; t < s; t += 1)
                    e[t].animation.resize()
            }
            ,
            t.goToAndStop = function(t, i, n) {
                var r;
                for (r = 0; r < s; r += 1)
                    e[r].animation.goToAndStop(t, i, n)
            }
            ,
            t.destroy = function(t) {
                var i;
                for (i = s - 1; i >= 0; i -= 1)
                    e[i].animation.destroy(t)
            }
            ,
            t.freeze = function() {
                a = !0
            }
            ,
            t.unfreeze = function() {
                a = !1,
                f()
            }
            ,
            t.setVolume = function(t, i) {
                var n;
                for (n = 0; n < s; n += 1)
                    e[n].animation.setVolume(t, i)
            }
            ,
            t.mute = function(t) {
                var i;
                for (i = 0; i < s; i += 1)
                    e[i].animation.mute(t)
            }
            ,
            t.unmute = function(t) {
                var i;
                for (i = 0; i < s; i += 1)
                    e[i].animation.unmute(t)
            }
            ,
            t.getRegisteredAnimations = function() {
                var t, i = e.length, s = [];
                for (t = 0; t < i; t += 1)
                    s.push(e[t].animation);
                return s
            }
            ,
            t
        }()
          , BezierFactory = function() {
            var t = {
                getBezierEasing: function(t, i, s, n, r) {
                    var a = r || ("bez_" + t + "_" + i + "_" + s + "_" + n).replace(/\./g, "p");
                    if (e[a])
                        return e[a];
                    var o = new l([t, i, s, n]);
                    return e[a] = o,
                    o
                }
            }
              , e = {};
            var i = "function" == typeof Float32Array;
            function s(t, e) {
                return 1 - 3 * e + 3 * t
            }
            function n(t, e) {
                return 3 * e - 6 * t
            }
            function r(t) {
                return 3 * t
            }
            function a(t, e, i) {
                return ((s(e, i) * t + n(e, i)) * t + r(e)) * t
            }
            function o(t, e, i) {
                return 3 * s(e, i) * t * t + 2 * n(e, i) * t + r(e)
            }
            function l(t) {
                this._p = t,
                this._mSampleValues = i ? new Float32Array(11) : new Array(11),
                this._precomputed = !1,
                this.get = this.get.bind(this)
            }
            return l.prototype = {
                get: function(t) {
                    var e = this._p[0]
                      , i = this._p[1]
                      , s = this._p[2]
                      , n = this._p[3];
                    return this._precomputed || this._precompute(),
                    e === i && s === n ? t : 0 === t ? 0 : 1 === t ? 1 : a(this._getTForX(t), i, n)
                },
                _precompute: function() {
                    var t = this._p[0]
                      , e = this._p[1]
                      , i = this._p[2]
                      , s = this._p[3];
                    this._precomputed = !0,
                    t === e && i === s || this._calcSampleValues()
                },
                _calcSampleValues: function() {
                    for (var t = this._p[0], e = this._p[2], i = 0; i < 11; ++i)
                        this._mSampleValues[i] = a(.1 * i, t, e)
                },
                _getTForX: function(t) {
                    for (var e = this._p[0], i = this._p[2], s = this._mSampleValues, n = 0, r = 1; 10 !== r && s[r] <= t; ++r)
                        n += .1;
                    var l = n + .1 * ((t - s[--r]) / (s[r + 1] - s[r]))
                      , h = o(l, e, i);
                    return h >= .001 ? function(t, e, i, s) {
                        for (var n = 0; n < 4; ++n) {
                            var r = o(e, i, s);
                            if (0 === r)
                                return e;
                            e -= (a(e, i, s) - t) / r
                        }
                        return e
                    }(t, l, e, i) : 0 === h ? l : function(t, e, i, s, n) {
                        var r, o, l = 0;
                        do {
                            (r = a(o = e + (i - e) / 2, s, n) - t) > 0 ? i = o : e = o
                        } while (Math.abs(r) > 1e-7 && ++l < 10);
                        return o
                    }(t, n, n + .1, e, i)
                }
            },
            t
        }()
          , pooling = {
            double: function(t) {
                return t.concat(createSizedArray(t.length))
            }
        }
          , poolFactory = function(t, e, i) {
            var s = 0
              , n = t
              , r = createSizedArray(n);
            return {
                newElement: function() {
                    return s ? r[s -= 1] : e()
                },
                release: function(t) {
                    s === n && (r = pooling.double(r),
                    n *= 2),
                    i && i(t),
                    r[s] = t,
                    s += 1
                }
            }
        }
          , bezierLengthPool = poolFactory(8, (function() {
            return {
                addedLength: 0,
                percents: createTypedArray("float32", getDefaultCurveSegments()),
                lengths: createTypedArray("float32", getDefaultCurveSegments())
            }
        }
        ))
          , segmentsLengthPool = poolFactory(8, (function() {
            return {
                lengths: [],
                totalLength: 0
            }
        }
        ), (function(t) {
            var e, i = t.lengths.length;
            for (e = 0; e < i; e += 1)
                bezierLengthPool.release(t.lengths[e]);
            t.lengths.length = 0
        }
        ));
        function bezFunction() {
            var t = Math;
            function e(t, e, i, s, n, r) {
                var a = t * s + e * n + i * r - n * s - r * t - i * e;
                return a > -.001 && a < .001
            }
            var i = function(t, e, i, s) {
                var n, r, a, o, l, h, c = getDefaultCurveSegments(), u = 0, p = [], d = [], f = bezierLengthPool.newElement();
                for (a = i.length,
                n = 0; n < c; n += 1) {
                    for (l = n / (c - 1),
                    h = 0,
                    r = 0; r < a; r += 1)
                        o = bmPow(1 - l, 3) * t[r] + 3 * bmPow(1 - l, 2) * l * i[r] + 3 * (1 - l) * bmPow(l, 2) * s[r] + bmPow(l, 3) * e[r],
                        p[r] = o,
                        null !== d[r] && (h += bmPow(p[r] - d[r], 2)),
                        d[r] = p[r];
                    h && (u += h = bmSqrt(h)),
                    f.percents[n] = l,
                    f.lengths[n] = u
                }
                return f.addedLength = u,
                f
            };
            function s(t) {
                this.segmentLength = 0,
                this.points = new Array(t)
            }
            function n(t, e) {
                this.partialLength = t,
                this.point = e
            }
            var r, a = (r = {},
            function(t, i, a, o) {
                var l = (t[0] + "_" + t[1] + "_" + i[0] + "_" + i[1] + "_" + a[0] + "_" + a[1] + "_" + o[0] + "_" + o[1]).replace(/\./g, "p");
                if (!r[l]) {
                    var h, c, u, p, d, f, m, g = getDefaultCurveSegments(), y = 0, v = null;
                    2 === t.length && (t[0] !== i[0] || t[1] !== i[1]) && e(t[0], t[1], i[0], i[1], t[0] + a[0], t[1] + a[1]) && e(t[0], t[1], i[0], i[1], i[0] + o[0], i[1] + o[1]) && (g = 2);
                    var b = new s(g);
                    for (u = a.length,
                    h = 0; h < g; h += 1) {
                        for (m = createSizedArray(u),
                        d = h / (g - 1),
                        f = 0,
                        c = 0; c < u; c += 1)
                            p = bmPow(1 - d, 3) * t[c] + 3 * bmPow(1 - d, 2) * d * (t[c] + a[c]) + 3 * (1 - d) * bmPow(d, 2) * (i[c] + o[c]) + bmPow(d, 3) * i[c],
                            m[c] = p,
                            null !== v && (f += bmPow(m[c] - v[c], 2));
                        y += f = bmSqrt(f),
                        b.points[h] = new n(f,m),
                        v = m
                    }
                    b.segmentLength = y,
                    r[l] = b
                }
                return r[l]
            }
            );
            function o(t, e) {
                var i = e.percents
                  , s = e.lengths
                  , n = i.length
                  , r = bmFloor((n - 1) * t)
                  , a = t * e.addedLength
                  , o = 0;
                if (r === n - 1 || 0 === r || a === s[r])
                    return i[r];
                for (var l = s[r] > a ? -1 : 1, h = !0; h; )
                    if (s[r] <= a && s[r + 1] > a ? (o = (a - s[r]) / (s[r + 1] - s[r]),
                    h = !1) : r += l,
                    r < 0 || r >= n - 1) {
                        if (r === n - 1)
                            return i[r];
                        h = !1
                    }
                return i[r] + (i[r + 1] - i[r]) * o
            }
            var l = createTypedArray("float32", 8);
            return {
                getSegmentsLength: function(t) {
                    var e, s = segmentsLengthPool.newElement(), n = t.c, r = t.v, a = t.o, o = t.i, l = t._length, h = s.lengths, c = 0;
                    for (e = 0; e < l - 1; e += 1)
                        h[e] = i(r[e], r[e + 1], a[e], o[e + 1]),
                        c += h[e].addedLength;
                    return n && l && (h[e] = i(r[e], r[0], a[e], o[0]),
                    c += h[e].addedLength),
                    s.totalLength = c,
                    s
                },
                getNewSegment: function(e, i, s, n, r, a, h) {
                    r < 0 ? r = 0 : r > 1 && (r = 1);
                    var c, u = o(r, h), p = o(a = a > 1 ? 1 : a, h), d = e.length, f = 1 - u, m = 1 - p, g = f * f * f, y = u * f * f * 3, v = u * u * f * 3, b = u * u * u, w = f * f * m, S = u * f * m + f * u * m + f * f * p, E = u * u * m + f * u * p + u * f * p, P = u * u * p, k = f * m * m, x = u * m * m + f * p * m + f * m * p, C = u * p * m + f * p * p + u * m * p, A = u * p * p, T = m * m * m, _ = p * m * m + m * p * m + m * m * p, M = p * p * m + m * p * p + p * m * p, D = p * p * p;
                    for (c = 0; c < d; c += 1)
                        l[4 * c] = t.round(1e3 * (g * e[c] + y * s[c] + v * n[c] + b * i[c])) / 1e3,
                        l[4 * c + 1] = t.round(1e3 * (w * e[c] + S * s[c] + E * n[c] + P * i[c])) / 1e3,
                        l[4 * c + 2] = t.round(1e3 * (k * e[c] + x * s[c] + C * n[c] + A * i[c])) / 1e3,
                        l[4 * c + 3] = t.round(1e3 * (T * e[c] + _ * s[c] + M * n[c] + D * i[c])) / 1e3;
                    return l
                },
                getPointInSegment: function(e, i, s, n, r, a) {
                    var l = o(r, a)
                      , h = 1 - l;
                    return [t.round(1e3 * (h * h * h * e[0] + (l * h * h + h * l * h + h * h * l) * s[0] + (l * l * h + h * l * l + l * h * l) * n[0] + l * l * l * i[0])) / 1e3, t.round(1e3 * (h * h * h * e[1] + (l * h * h + h * l * h + h * h * l) * s[1] + (l * l * h + h * l * l + l * h * l) * n[1] + l * l * l * i[1])) / 1e3]
                },
                buildBezierData: a,
                pointOnLine2D: e,
                pointOnLine3D: function(i, s, n, r, a, o, l, h, c) {
                    if (0 === n && 0 === o && 0 === c)
                        return e(i, s, r, a, l, h);
                    var u, p = t.sqrt(t.pow(r - i, 2) + t.pow(a - s, 2) + t.pow(o - n, 2)), d = t.sqrt(t.pow(l - i, 2) + t.pow(h - s, 2) + t.pow(c - n, 2)), f = t.sqrt(t.pow(l - r, 2) + t.pow(h - a, 2) + t.pow(c - o, 2));
                    return (u = p > d ? p > f ? p - d - f : f - d - p : f > d ? f - d - p : d - p - f) > -1e-4 && u < 1e-4
                }
            }
        }
        var bez = bezFunction()
          , PropertyFactory = function() {
            var t = initialDefaultFrame
              , e = Math.abs;
            function i(t, e) {
                var i, n = this.offsetTime;
                "multidimensional" === this.propType && (i = createTypedArray("float32", this.pv.length));
                for (var r, a, o, l, h, c, u, p, d, f = e.lastIndex, m = f, g = this.keyframes.length - 1, y = !0; y; ) {
                    if (r = this.keyframes[m],
                    a = this.keyframes[m + 1],
                    m === g - 1 && t >= a.t - n) {
                        r.h && (r = a),
                        f = 0;
                        break
                    }
                    if (a.t - n > t) {
                        f = m;
                        break
                    }
                    m < g - 1 ? m += 1 : (f = 0,
                    y = !1)
                }
                o = this.keyframesMetadata[m] || {};
                var v, b = a.t - n, w = r.t - n;
                if (r.to) {
                    o.bezierData || (o.bezierData = bez.buildBezierData(r.s, a.s || r.e, r.to, r.ti));
                    var S = o.bezierData;
                    if (t >= b || t < w) {
                        var E = t >= b ? S.points.length - 1 : 0;
                        for (h = S.points[E].point.length,
                        l = 0; l < h; l += 1)
                            i[l] = S.points[E].point[l]
                    } else {
                        o.__fnct ? d = o.__fnct : (d = BezierFactory.getBezierEasing(r.o.x, r.o.y, r.i.x, r.i.y, r.n).get,
                        o.__fnct = d),
                        c = d((t - w) / (b - w));
                        var P, k = S.segmentLength * c, x = e.lastFrame < t && e._lastKeyframeIndex === m ? e._lastAddedLength : 0;
                        for (p = e.lastFrame < t && e._lastKeyframeIndex === m ? e._lastPoint : 0,
                        y = !0,
                        u = S.points.length; y; ) {
                            if (x += S.points[p].partialLength,
                            0 === k || 0 === c || p === S.points.length - 1) {
                                for (h = S.points[p].point.length,
                                l = 0; l < h; l += 1)
                                    i[l] = S.points[p].point[l];
                                break
                            }
                            if (k >= x && k < x + S.points[p + 1].partialLength) {
                                for (P = (k - x) / S.points[p + 1].partialLength,
                                h = S.points[p].point.length,
                                l = 0; l < h; l += 1)
                                    i[l] = S.points[p].point[l] + (S.points[p + 1].point[l] - S.points[p].point[l]) * P;
                                break
                            }
                            p < u - 1 ? p += 1 : y = !1
                        }
                        e._lastPoint = p,
                        e._lastAddedLength = x - S.points[p].partialLength,
                        e._lastKeyframeIndex = m
                    }
                } else {
                    var C, A, T, _, M;
                    if (g = r.s.length,
                    v = a.s || r.e,
                    this.sh && 1 !== r.h)
                        if (t >= b)
                            i[0] = v[0],
                            i[1] = v[1],
                            i[2] = v[2];
                        else if (t <= w)
                            i[0] = r.s[0],
                            i[1] = r.s[1],
                            i[2] = r.s[2];
                        else {
                            !function(t, e) {
                                var i = e[0]
                                  , s = e[1]
                                  , n = e[2]
                                  , r = e[3]
                                  , a = Math.atan2(2 * s * r - 2 * i * n, 1 - 2 * s * s - 2 * n * n)
                                  , o = Math.asin(2 * i * s + 2 * n * r)
                                  , l = Math.atan2(2 * i * r - 2 * s * n, 1 - 2 * i * i - 2 * n * n);
                                t[0] = a / degToRads,
                                t[1] = o / degToRads,
                                t[2] = l / degToRads
                            }(i, function(t, e, i) {
                                var s, n, r, a, o, l = [], h = t[0], c = t[1], u = t[2], p = t[3], d = e[0], f = e[1], m = e[2], g = e[3];
                                (n = h * d + c * f + u * m + p * g) < 0 && (n = -n,
                                d = -d,
                                f = -f,
                                m = -m,
                                g = -g);
                                1 - n > 1e-6 ? (s = Math.acos(n),
                                r = Math.sin(s),
                                a = Math.sin((1 - i) * s) / r,
                                o = Math.sin(i * s) / r) : (a = 1 - i,
                                o = i);
                                return l[0] = a * h + o * d,
                                l[1] = a * c + o * f,
                                l[2] = a * u + o * m,
                                l[3] = a * p + o * g,
                                l
                            }(s(r.s), s(v), (t - w) / (b - w)))
                        }
                    else
                        for (m = 0; m < g; m += 1)
                            1 !== r.h && (t >= b ? c = 1 : t < w ? c = 0 : (r.o.x.constructor === Array ? (o.__fnct || (o.__fnct = []),
                            o.__fnct[m] ? d = o.__fnct[m] : (C = void 0 === r.o.x[m] ? r.o.x[0] : r.o.x[m],
                            A = void 0 === r.o.y[m] ? r.o.y[0] : r.o.y[m],
                            T = void 0 === r.i.x[m] ? r.i.x[0] : r.i.x[m],
                            _ = void 0 === r.i.y[m] ? r.i.y[0] : r.i.y[m],
                            d = BezierFactory.getBezierEasing(C, A, T, _).get,
                            o.__fnct[m] = d)) : o.__fnct ? d = o.__fnct : (C = r.o.x,
                            A = r.o.y,
                            T = r.i.x,
                            _ = r.i.y,
                            d = BezierFactory.getBezierEasing(C, A, T, _).get,
                            r.keyframeMetadata = d),
                            c = d((t - w) / (b - w)))),
                            v = a.s || r.e,
                            M = 1 === r.h ? r.s[m] : r.s[m] + (v[m] - r.s[m]) * c,
                            "multidimensional" === this.propType ? i[m] = M : i = M
                }
                return e.lastIndex = f,
                i
            }
            function s(t) {
                var e = t[0] * degToRads
                  , i = t[1] * degToRads
                  , s = t[2] * degToRads
                  , n = Math.cos(e / 2)
                  , r = Math.cos(i / 2)
                  , a = Math.cos(s / 2)
                  , o = Math.sin(e / 2)
                  , l = Math.sin(i / 2)
                  , h = Math.sin(s / 2);
                return [o * l * a + n * r * h, o * r * a + n * l * h, n * l * a - o * r * h, n * r * a - o * l * h]
            }
            function n() {
                var e = this.comp.renderedFrame - this.offsetTime
                  , i = this.keyframes[0].t - this.offsetTime
                  , s = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                if (!(e === this._caching.lastFrame || this._caching.lastFrame !== t && (this._caching.lastFrame >= s && e >= s || this._caching.lastFrame < i && e < i))) {
                    this._caching.lastFrame >= e && (this._caching._lastKeyframeIndex = -1,
                    this._caching.lastIndex = 0);
                    var n = this.interpolateValue(e, this._caching);
                    this.pv = n
                }
                return this._caching.lastFrame = e,
                this.pv
            }
            function r(t) {
                var i;
                if ("unidimensional" === this.propType)
                    i = t * this.mult,
                    e(this.v - i) > 1e-5 && (this.v = i,
                    this._mdf = !0);
                else
                    for (var s = 0, n = this.v.length; s < n; )
                        i = t[s] * this.mult,
                        e(this.v[s] - i) > 1e-5 && (this.v[s] = i,
                        this._mdf = !0),
                        s += 1
            }
            function a() {
                if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                    if (this.lock)
                        this.setVValue(this.pv);
                    else {
                        var t;
                        this.lock = !0,
                        this._mdf = this._isFirstFrame;
                        var e = this.effectsSequence.length
                          , i = this.kf ? this.pv : this.data.k;
                        for (t = 0; t < e; t += 1)
                            i = this.effectsSequence[t](i);
                        this.setVValue(i),
                        this._isFirstFrame = !1,
                        this.lock = !1,
                        this.frameId = this.elem.globalData.frameId
                    }
            }
            function o(t) {
                this.effectsSequence.push(t),
                this.container.addDynamicProperty(this)
            }
            function l(t, e, i, s) {
                this.propType = "unidimensional",
                this.mult = i || 1,
                this.data = e,
                this.v = i ? e.k * i : e.k,
                this.pv = e.k,
                this._mdf = !1,
                this.elem = t,
                this.container = s,
                this.comp = t.comp,
                this.k = !1,
                this.kf = !1,
                this.vel = 0,
                this.effectsSequence = [],
                this._isFirstFrame = !0,
                this.getValue = a,
                this.setVValue = r,
                this.addEffect = o
            }
            function h(t, e, i, s) {
                var n;
                this.propType = "multidimensional",
                this.mult = i || 1,
                this.data = e,
                this._mdf = !1,
                this.elem = t,
                this.container = s,
                this.comp = t.comp,
                this.k = !1,
                this.kf = !1,
                this.frameId = -1;
                var l = e.k.length;
                for (this.v = createTypedArray("float32", l),
                this.pv = createTypedArray("float32", l),
                this.vel = createTypedArray("float32", l),
                n = 0; n < l; n += 1)
                    this.v[n] = e.k[n] * this.mult,
                    this.pv[n] = e.k[n];
                this._isFirstFrame = !0,
                this.effectsSequence = [],
                this.getValue = a,
                this.setVValue = r,
                this.addEffect = o
            }
            function c(e, s, l, h) {
                this.propType = "unidimensional",
                this.keyframes = s.k,
                this.keyframesMetadata = [],
                this.offsetTime = e.data.st,
                this.frameId = -1,
                this._caching = {
                    lastFrame: t,
                    lastIndex: 0,
                    value: 0,
                    _lastKeyframeIndex: -1
                },
                this.k = !0,
                this.kf = !0,
                this.data = s,
                this.mult = l || 1,
                this.elem = e,
                this.container = h,
                this.comp = e.comp,
                this.v = t,
                this.pv = t,
                this._isFirstFrame = !0,
                this.getValue = a,
                this.setVValue = r,
                this.interpolateValue = i,
                this.effectsSequence = [n.bind(this)],
                this.addEffect = o
            }
            function u(e, s, l, h) {
                var c;
                this.propType = "multidimensional";
                var u, p, d, f, m = s.k.length;
                for (c = 0; c < m - 1; c += 1)
                    s.k[c].to && s.k[c].s && s.k[c + 1] && s.k[c + 1].s && (u = s.k[c].s,
                    p = s.k[c + 1].s,
                    d = s.k[c].to,
                    f = s.k[c].ti,
                    (2 === u.length && (u[0] !== p[0] || u[1] !== p[1]) && bez.pointOnLine2D(u[0], u[1], p[0], p[1], u[0] + d[0], u[1] + d[1]) && bez.pointOnLine2D(u[0], u[1], p[0], p[1], p[0] + f[0], p[1] + f[1]) || 3 === u.length && (u[0] !== p[0] || u[1] !== p[1] || u[2] !== p[2]) && bez.pointOnLine3D(u[0], u[1], u[2], p[0], p[1], p[2], u[0] + d[0], u[1] + d[1], u[2] + d[2]) && bez.pointOnLine3D(u[0], u[1], u[2], p[0], p[1], p[2], p[0] + f[0], p[1] + f[1], p[2] + f[2])) && (s.k[c].to = null,
                    s.k[c].ti = null),
                    u[0] === p[0] && u[1] === p[1] && 0 === d[0] && 0 === d[1] && 0 === f[0] && 0 === f[1] && (2 === u.length || u[2] === p[2] && 0 === d[2] && 0 === f[2]) && (s.k[c].to = null,
                    s.k[c].ti = null));
                this.effectsSequence = [n.bind(this)],
                this.data = s,
                this.keyframes = s.k,
                this.keyframesMetadata = [],
                this.offsetTime = e.data.st,
                this.k = !0,
                this.kf = !0,
                this._isFirstFrame = !0,
                this.mult = l || 1,
                this.elem = e,
                this.container = h,
                this.comp = e.comp,
                this.getValue = a,
                this.setVValue = r,
                this.interpolateValue = i,
                this.frameId = -1;
                var g = s.k[0].s.length;
                for (this.v = createTypedArray("float32", g),
                this.pv = createTypedArray("float32", g),
                c = 0; c < g; c += 1)
                    this.v[c] = t,
                    this.pv[c] = t;
                this._caching = {
                    lastFrame: t,
                    lastIndex: 0,
                    value: createTypedArray("float32", g)
                },
                this.addEffect = o
            }
            return {
                getProp: function(t, e, i, s, n) {
                    var r;
                    if (e.k.length)
                        if ("number" == typeof e.k[0])
                            r = new h(t,e,s,n);
                        else
                            switch (i) {
                            case 0:
                                r = new c(t,e,s,n);
                                break;
                            case 1:
                                r = new u(t,e,s,n)
                            }
                    else
                        r = new l(t,e,s,n);
                    return r.effectsSequence.length && n.addDynamicProperty(r),
                    r
                }
            }
        }();
        function DynamicPropertyContainer() {}
        DynamicPropertyContainer.prototype = {
            addDynamicProperty: function(t) {
                -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t),
                this.container.addDynamicProperty(this),
                this._isAnimated = !0)
            },
            iterateDynamicProperties: function() {
                var t;
                this._mdf = !1;
                var e = this.dynamicProperties.length;
                for (t = 0; t < e; t += 1)
                    this.dynamicProperties[t].getValue(),
                    this.dynamicProperties[t]._mdf && (this._mdf = !0)
            },
            initDynamicPropertyContainer: function(t) {
                this.container = t,
                this.dynamicProperties = [],
                this._mdf = !1,
                this._isAnimated = !1
            }
        };
        var pointPool = poolFactory(8, (function() {
            return createTypedArray("float32", 2)
        }
        ));
        function ShapePath() {
            this.c = !1,
            this._length = 0,
            this._maxLength = 8,
            this.v = createSizedArray(this._maxLength),
            this.o = createSizedArray(this._maxLength),
            this.i = createSizedArray(this._maxLength)
        }
        ShapePath.prototype.setPathData = function(t, e) {
            this.c = t,
            this.setLength(e);
            for (var i = 0; i < e; )
                this.v[i] = pointPool.newElement(),
                this.o[i] = pointPool.newElement(),
                this.i[i] = pointPool.newElement(),
                i += 1
        }
        ,
        ShapePath.prototype.setLength = function(t) {
            for (; this._maxLength < t; )
                this.doubleArrayLength();
            this._length = t
        }
        ,
        ShapePath.prototype.doubleArrayLength = function() {
            this.v = this.v.concat(createSizedArray(this._maxLength)),
            this.i = this.i.concat(createSizedArray(this._maxLength)),
            this.o = this.o.concat(createSizedArray(this._maxLength)),
            this._maxLength *= 2
        }
        ,
        ShapePath.prototype.setXYAt = function(t, e, i, s, n) {
            var r;
            switch (this._length = Math.max(this._length, s + 1),
            this._length >= this._maxLength && this.doubleArrayLength(),
            i) {
            case "v":
                r = this.v;
                break;
            case "i":
                r = this.i;
                break;
            case "o":
                r = this.o;
                break;
            default:
                r = []
            }
            (!r[s] || r[s] && !n) && (r[s] = pointPool.newElement()),
            r[s][0] = t,
            r[s][1] = e
        }
        ,
        ShapePath.prototype.setTripleAt = function(t, e, i, s, n, r, a, o) {
            this.setXYAt(t, e, "v", a, o),
            this.setXYAt(i, s, "o", a, o),
            this.setXYAt(n, r, "i", a, o)
        }
        ,
        ShapePath.prototype.reverse = function() {
            var t = new ShapePath;
            t.setPathData(this.c, this._length);
            var e = this.v
              , i = this.o
              , s = this.i
              , n = 0;
            this.c && (t.setTripleAt(e[0][0], e[0][1], s[0][0], s[0][1], i[0][0], i[0][1], 0, !1),
            n = 1);
            var r, a = this._length - 1, o = this._length;
            for (r = n; r < o; r += 1)
                t.setTripleAt(e[a][0], e[a][1], s[a][0], s[a][1], i[a][0], i[a][1], r, !1),
                a -= 1;
            return t
        }
        ,
        ShapePath.prototype.length = function() {
            return this._length
        }
        ;
        var shapePool = (factory = poolFactory(4, (function() {
            return new ShapePath
        }
        ), (function(t) {
            var e, i = t._length;
            for (e = 0; e < i; e += 1)
                pointPool.release(t.v[e]),
                pointPool.release(t.i[e]),
                pointPool.release(t.o[e]),
                t.v[e] = null,
                t.i[e] = null,
                t.o[e] = null;
            t._length = 0,
            t.c = !1
        }
        )),
        factory.clone = function(t) {
            var e, i = factory.newElement(), s = void 0 === t._length ? t.v.length : t._length;
            for (i.setLength(s),
            i.c = t.c,
            e = 0; e < s; e += 1)
                i.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);
            return i
        }
        ,
        factory), factory;
        function ShapeCollection() {
            this._length = 0,
            this._maxLength = 4,
            this.shapes = createSizedArray(this._maxLength)
        }
        ShapeCollection.prototype.addShape = function(t) {
            this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)),
            this._maxLength *= 2),
            this.shapes[this._length] = t,
            this._length += 1
        }
        ,
        ShapeCollection.prototype.releaseShapes = function() {
            var t;
            for (t = 0; t < this._length; t += 1)
                shapePool.release(this.shapes[t]);
            this._length = 0
        }
        ;
        var shapeCollectionPool = (ob = {
            newShapeCollection: function() {
                return _length ? pool[_length -= 1] : new ShapeCollection
            },
            release: function(t) {
                var e, i = t._length;
                for (e = 0; e < i; e += 1)
                    shapePool.release(t.shapes[e]);
                t._length = 0,
                _length === _maxLength && (pool = pooling.double(pool),
                _maxLength *= 2),
                pool[_length] = t,
                _length += 1
            }
        },
        _length = 0,
        _maxLength = 4,
        pool = createSizedArray(_maxLength),
        ob), ob, _length, _maxLength, pool, ShapePropertyFactory = function() {
            function t(t, e, i) {
                var s, n, r, a, o, l, h, c, u, p = i.lastIndex, d = this.keyframes;
                if (t < d[0].t - this.offsetTime)
                    s = d[0].s[0],
                    r = !0,
                    p = 0;
                else if (t >= d[d.length - 1].t - this.offsetTime)
                    s = d[d.length - 1].s ? d[d.length - 1].s[0] : d[d.length - 2].e[0],
                    r = !0;
                else {
                    for (var f, m, g, y = p, v = d.length - 1, b = !0; b && (f = d[y],
                    !((m = d[y + 1]).t - this.offsetTime > t)); )
                        y < v - 1 ? y += 1 : b = !1;
                    if (g = this.keyframesMetadata[y] || {},
                    p = y,
                    !(r = 1 === f.h)) {
                        if (t >= m.t - this.offsetTime)
                            c = 1;
                        else if (t < f.t - this.offsetTime)
                            c = 0;
                        else {
                            var w;
                            g.__fnct ? w = g.__fnct : (w = BezierFactory.getBezierEasing(f.o.x, f.o.y, f.i.x, f.i.y).get,
                            g.__fnct = w),
                            c = w((t - (f.t - this.offsetTime)) / (m.t - this.offsetTime - (f.t - this.offsetTime)))
                        }
                        n = m.s ? m.s[0] : f.e[0]
                    }
                    s = f.s[0]
                }
                for (l = e._length,
                h = s.i[0].length,
                i.lastIndex = p,
                a = 0; a < l; a += 1)
                    for (o = 0; o < h; o += 1)
                        u = r ? s.i[a][o] : s.i[a][o] + (n.i[a][o] - s.i[a][o]) * c,
                        e.i[a][o] = u,
                        u = r ? s.o[a][o] : s.o[a][o] + (n.o[a][o] - s.o[a][o]) * c,
                        e.o[a][o] = u,
                        u = r ? s.v[a][o] : s.v[a][o] + (n.v[a][o] - s.v[a][o]) * c,
                        e.v[a][o] = u
            }
            function e() {
                var t = this.comp.renderedFrame - this.offsetTime
                  , e = this.keyframes[0].t - this.offsetTime
                  , i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime
                  , s = this._caching.lastFrame;
                return -999999 !== s && (s < e && t < e || s > i && t > i) || (this._caching.lastIndex = s < t ? this._caching.lastIndex : 0,
                this.interpolateShape(t, this.pv, this._caching)),
                this._caching.lastFrame = t,
                this.pv
            }
            function i() {
                this.paths = this.localShapeCollection
            }
            function s(t) {
                (function(t, e) {
                    if (t._length !== e._length || t.c !== e.c)
                        return !1;
                    var i, s = t._length;
                    for (i = 0; i < s; i += 1)
                        if (t.v[i][0] !== e.v[i][0] || t.v[i][1] !== e.v[i][1] || t.o[i][0] !== e.o[i][0] || t.o[i][1] !== e.o[i][1] || t.i[i][0] !== e.i[i][0] || t.i[i][1] !== e.i[i][1])
                            return !1;
                    return !0
                }
                )(this.v, t) || (this.v = shapePool.clone(t),
                this.localShapeCollection.releaseShapes(),
                this.localShapeCollection.addShape(this.v),
                this._mdf = !0,
                this.paths = this.localShapeCollection)
            }
            function n() {
                if (this.elem.globalData.frameId !== this.frameId)
                    if (this.effectsSequence.length)
                        if (this.lock)
                            this.setVValue(this.pv);
                        else {
                            var t, e;
                            this.lock = !0,
                            this._mdf = !1,
                            t = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
                            var i = this.effectsSequence.length;
                            for (e = 0; e < i; e += 1)
                                t = this.effectsSequence[e](t);
                            this.setVValue(t),
                            this.lock = !1,
                            this.frameId = this.elem.globalData.frameId
                        }
                    else
                        this._mdf = !1
            }
            function r(t, e, s) {
                this.propType = "shape",
                this.comp = t.comp,
                this.container = t,
                this.elem = t,
                this.data = e,
                this.k = !1,
                this.kf = !1,
                this._mdf = !1;
                var n = 3 === s ? e.pt.k : e.ks.k;
                this.v = shapePool.clone(n),
                this.pv = shapePool.clone(this.v),
                this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                this.paths = this.localShapeCollection,
                this.paths.addShape(this.v),
                this.reset = i,
                this.effectsSequence = []
            }
            function a(t) {
                this.effectsSequence.push(t),
                this.container.addDynamicProperty(this)
            }
            function o(t, s, n) {
                this.propType = "shape",
                this.comp = t.comp,
                this.elem = t,
                this.container = t,
                this.offsetTime = t.data.st,
                this.keyframes = 3 === n ? s.pt.k : s.ks.k,
                this.keyframesMetadata = [],
                this.k = !0,
                this.kf = !0;
                var r = this.keyframes[0].s[0].i.length;
                this.v = shapePool.newElement(),
                this.v.setPathData(this.keyframes[0].s[0].c, r),
                this.pv = shapePool.clone(this.v),
                this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                this.paths = this.localShapeCollection,
                this.paths.addShape(this.v),
                this.lastFrame = -999999,
                this.reset = i,
                this._caching = {
                    lastFrame: -999999,
                    lastIndex: 0
                },
                this.effectsSequence = [e.bind(this)]
            }
            r.prototype.interpolateShape = t,
            r.prototype.getValue = n,
            r.prototype.setVValue = s,
            r.prototype.addEffect = a,
            o.prototype.getValue = n,
            o.prototype.interpolateShape = t,
            o.prototype.setVValue = s,
            o.prototype.addEffect = a;
            var l = function() {
                var t = roundCorner;
                function e(t, e) {
                    this.v = shapePool.newElement(),
                    this.v.setPathData(!0, 4),
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.paths = this.localShapeCollection,
                    this.localShapeCollection.addShape(this.v),
                    this.d = e.d,
                    this.elem = t,
                    this.comp = t.comp,
                    this.frameId = -1,
                    this.initDynamicPropertyContainer(t),
                    this.p = PropertyFactory.getProp(t, e.p, 1, 0, this),
                    this.s = PropertyFactory.getProp(t, e.s, 1, 0, this),
                    this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                    this.convertEllToPath())
                }
                return e.prototype = {
                    reset: i,
                    getValue: function() {
                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties(),
                        this._mdf && this.convertEllToPath())
                    },
                    convertEllToPath: function() {
                        var e = this.p.v[0]
                          , i = this.p.v[1]
                          , s = this.s.v[0] / 2
                          , n = this.s.v[1] / 2
                          , r = 3 !== this.d
                          , a = this.v;
                        a.v[0][0] = e,
                        a.v[0][1] = i - n,
                        a.v[1][0] = r ? e + s : e - s,
                        a.v[1][1] = i,
                        a.v[2][0] = e,
                        a.v[2][1] = i + n,
                        a.v[3][0] = r ? e - s : e + s,
                        a.v[3][1] = i,
                        a.i[0][0] = r ? e - s * t : e + s * t,
                        a.i[0][1] = i - n,
                        a.i[1][0] = r ? e + s : e - s,
                        a.i[1][1] = i - n * t,
                        a.i[2][0] = r ? e + s * t : e - s * t,
                        a.i[2][1] = i + n,
                        a.i[3][0] = r ? e - s : e + s,
                        a.i[3][1] = i + n * t,
                        a.o[0][0] = r ? e + s * t : e - s * t,
                        a.o[0][1] = i - n,
                        a.o[1][0] = r ? e + s : e - s,
                        a.o[1][1] = i + n * t,
                        a.o[2][0] = r ? e - s * t : e + s * t,
                        a.o[2][1] = i + n,
                        a.o[3][0] = r ? e - s : e + s,
                        a.o[3][1] = i - n * t
                    }
                },
                extendPrototype([DynamicPropertyContainer], e),
                e
            }()
              , h = function() {
                function t(t, e) {
                    this.v = shapePool.newElement(),
                    this.v.setPathData(!0, 0),
                    this.elem = t,
                    this.comp = t.comp,
                    this.data = e,
                    this.frameId = -1,
                    this.d = e.d,
                    this.initDynamicPropertyContainer(t),
                    1 === e.sy ? (this.ir = PropertyFactory.getProp(t, e.ir, 0, 0, this),
                    this.is = PropertyFactory.getProp(t, e.is, 0, .01, this),
                    this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath,
                    this.pt = PropertyFactory.getProp(t, e.pt, 0, 0, this),
                    this.p = PropertyFactory.getProp(t, e.p, 1, 0, this),
                    this.r = PropertyFactory.getProp(t, e.r, 0, degToRads, this),
                    this.or = PropertyFactory.getProp(t, e.or, 0, 0, this),
                    this.os = PropertyFactory.getProp(t, e.os, 0, .01, this),
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.localShapeCollection.addShape(this.v),
                    this.paths = this.localShapeCollection,
                    this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                    this.convertToPath())
                }
                return t.prototype = {
                    reset: i,
                    getValue: function() {
                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties(),
                        this._mdf && this.convertToPath())
                    },
                    convertStarToPath: function() {
                        var t, e, i, s, n = 2 * Math.floor(this.pt.v), r = 2 * Math.PI / n, a = !0, o = this.or.v, l = this.ir.v, h = this.os.v, c = this.is.v, u = 2 * Math.PI * o / (2 * n), p = 2 * Math.PI * l / (2 * n), d = -Math.PI / 2;
                        d += this.r.v;
                        var f = 3 === this.data.d ? -1 : 1;
                        for (this.v._length = 0,
                        t = 0; t < n; t += 1) {
                            i = a ? h : c,
                            s = a ? u : p;
                            var m = (e = a ? o : l) * Math.cos(d)
                              , g = e * Math.sin(d)
                              , y = 0 === m && 0 === g ? 0 : g / Math.sqrt(m * m + g * g)
                              , v = 0 === m && 0 === g ? 0 : -m / Math.sqrt(m * m + g * g);
                            m += +this.p.v[0],
                            g += +this.p.v[1],
                            this.v.setTripleAt(m, g, m - y * s * i * f, g - v * s * i * f, m + y * s * i * f, g + v * s * i * f, t, !0),
                            a = !a,
                            d += r * f
                        }
                    },
                    convertPolygonToPath: function() {
                        var t, e = Math.floor(this.pt.v), i = 2 * Math.PI / e, s = this.or.v, n = this.os.v, r = 2 * Math.PI * s / (4 * e), a = .5 * -Math.PI, o = 3 === this.data.d ? -1 : 1;
                        for (a += this.r.v,
                        this.v._length = 0,
                        t = 0; t < e; t += 1) {
                            var l = s * Math.cos(a)
                              , h = s * Math.sin(a)
                              , c = 0 === l && 0 === h ? 0 : h / Math.sqrt(l * l + h * h)
                              , u = 0 === l && 0 === h ? 0 : -l / Math.sqrt(l * l + h * h);
                            l += +this.p.v[0],
                            h += +this.p.v[1],
                            this.v.setTripleAt(l, h, l - c * r * n * o, h - u * r * n * o, l + c * r * n * o, h + u * r * n * o, t, !0),
                            a += i * o
                        }
                        this.paths.length = 0,
                        this.paths[0] = this.v
                    }
                },
                extendPrototype([DynamicPropertyContainer], t),
                t
            }()
              , c = function() {
                function t(t, e) {
                    this.v = shapePool.newElement(),
                    this.v.c = !0,
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.localShapeCollection.addShape(this.v),
                    this.paths = this.localShapeCollection,
                    this.elem = t,
                    this.comp = t.comp,
                    this.frameId = -1,
                    this.d = e.d,
                    this.initDynamicPropertyContainer(t),
                    this.p = PropertyFactory.getProp(t, e.p, 1, 0, this),
                    this.s = PropertyFactory.getProp(t, e.s, 1, 0, this),
                    this.r = PropertyFactory.getProp(t, e.r, 0, 0, this),
                    this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                    this.convertRectToPath())
                }
                return t.prototype = {
                    convertRectToPath: function() {
                        var t = this.p.v[0]
                          , e = this.p.v[1]
                          , i = this.s.v[0] / 2
                          , s = this.s.v[1] / 2
                          , n = bmMin(i, s, this.r.v)
                          , r = n * (1 - roundCorner);
                        this.v._length = 0,
                        2 === this.d || 1 === this.d ? (this.v.setTripleAt(t + i, e - s + n, t + i, e - s + n, t + i, e - s + r, 0, !0),
                        this.v.setTripleAt(t + i, e + s - n, t + i, e + s - r, t + i, e + s - n, 1, !0),
                        0 !== n ? (this.v.setTripleAt(t + i - n, e + s, t + i - n, e + s, t + i - r, e + s, 2, !0),
                        this.v.setTripleAt(t - i + n, e + s, t - i + r, e + s, t - i + n, e + s, 3, !0),
                        this.v.setTripleAt(t - i, e + s - n, t - i, e + s - n, t - i, e + s - r, 4, !0),
                        this.v.setTripleAt(t - i, e - s + n, t - i, e - s + r, t - i, e - s + n, 5, !0),
                        this.v.setTripleAt(t - i + n, e - s, t - i + n, e - s, t - i + r, e - s, 6, !0),
                        this.v.setTripleAt(t + i - n, e - s, t + i - r, e - s, t + i - n, e - s, 7, !0)) : (this.v.setTripleAt(t - i, e + s, t - i + r, e + s, t - i, e + s, 2),
                        this.v.setTripleAt(t - i, e - s, t - i, e - s + r, t - i, e - s, 3))) : (this.v.setTripleAt(t + i, e - s + n, t + i, e - s + r, t + i, e - s + n, 0, !0),
                        0 !== n ? (this.v.setTripleAt(t + i - n, e - s, t + i - n, e - s, t + i - r, e - s, 1, !0),
                        this.v.setTripleAt(t - i + n, e - s, t - i + r, e - s, t - i + n, e - s, 2, !0),
                        this.v.setTripleAt(t - i, e - s + n, t - i, e - s + n, t - i, e - s + r, 3, !0),
                        this.v.setTripleAt(t - i, e + s - n, t - i, e + s - r, t - i, e + s - n, 4, !0),
                        this.v.setTripleAt(t - i + n, e + s, t - i + n, e + s, t - i + r, e + s, 5, !0),
                        this.v.setTripleAt(t + i - n, e + s, t + i - r, e + s, t + i - n, e + s, 6, !0),
                        this.v.setTripleAt(t + i, e + s - n, t + i, e + s - n, t + i, e + s - r, 7, !0)) : (this.v.setTripleAt(t - i, e - s, t - i + r, e - s, t - i, e - s, 1, !0),
                        this.v.setTripleAt(t - i, e + s, t - i, e + s - r, t - i, e + s, 2, !0),
                        this.v.setTripleAt(t + i, e + s, t + i - r, e + s, t + i, e + s, 3, !0)))
                    },
                    getValue: function() {
                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties(),
                        this._mdf && this.convertRectToPath())
                    },
                    reset: i
                },
                extendPrototype([DynamicPropertyContainer], t),
                t
            }();
            var u = {
                getShapeProp: function(t, e, i) {
                    var s;
                    return 3 === i || 4 === i ? s = (3 === i ? e.pt : e.ks).k.length ? new o(t,e,i) : new r(t,e,i) : 5 === i ? s = new c(t,e) : 6 === i ? s = new l(t,e) : 7 === i && (s = new h(t,e)),
                    s.k && t.addDynamicProperty(s),
                    s
                },
                getConstructorFunction: function() {
                    return r
                },
                getKeyframedConstructorFunction: function() {
                    return o
                }
            };
            return u
        }(), Matrix = function() {
            var t = Math.cos
              , e = Math.sin
              , i = Math.tan
              , s = Math.round;
            function n() {
                return this.props[0] = 1,
                this.props[1] = 0,
                this.props[2] = 0,
                this.props[3] = 0,
                this.props[4] = 0,
                this.props[5] = 1,
                this.props[6] = 0,
                this.props[7] = 0,
                this.props[8] = 0,
                this.props[9] = 0,
                this.props[10] = 1,
                this.props[11] = 0,
                this.props[12] = 0,
                this.props[13] = 0,
                this.props[14] = 0,
                this.props[15] = 1,
                this
            }
            function r(i) {
                if (0 === i)
                    return this;
                var s = t(i)
                  , n = e(i);
                return this._t(s, -n, 0, 0, n, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }
            function a(i) {
                if (0 === i)
                    return this;
                var s = t(i)
                  , n = e(i);
                return this._t(1, 0, 0, 0, 0, s, -n, 0, 0, n, s, 0, 0, 0, 0, 1)
            }
            function o(i) {
                if (0 === i)
                    return this;
                var s = t(i)
                  , n = e(i);
                return this._t(s, 0, n, 0, 0, 1, 0, 0, -n, 0, s, 0, 0, 0, 0, 1)
            }
            function l(i) {
                if (0 === i)
                    return this;
                var s = t(i)
                  , n = e(i);
                return this._t(s, -n, 0, 0, n, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }
            function h(t, e) {
                return this._t(1, e, t, 1, 0, 0)
            }
            function c(t, e) {
                return this.shear(i(t), i(e))
            }
            function u(s, n) {
                var r = t(n)
                  , a = e(n);
                return this._t(r, a, 0, 0, -a, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, i(s), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(r, -a, 0, 0, a, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }
            function p(t, e, i) {
                return i || 0 === i || (i = 1),
                1 === t && 1 === e && 1 === i ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1)
            }
            function d(t, e, i, s, n, r, a, o, l, h, c, u, p, d, f, m) {
                return this.props[0] = t,
                this.props[1] = e,
                this.props[2] = i,
                this.props[3] = s,
                this.props[4] = n,
                this.props[5] = r,
                this.props[6] = a,
                this.props[7] = o,
                this.props[8] = l,
                this.props[9] = h,
                this.props[10] = c,
                this.props[11] = u,
                this.props[12] = p,
                this.props[13] = d,
                this.props[14] = f,
                this.props[15] = m,
                this
            }
            function f(t, e, i) {
                return i = i || 0,
                0 !== t || 0 !== e || 0 !== i ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, i, 1) : this
            }
            function m(t, e, i, s, n, r, a, o, l, h, c, u, p, d, f, m) {
                var g = this.props;
                if (1 === t && 0 === e && 0 === i && 0 === s && 0 === n && 1 === r && 0 === a && 0 === o && 0 === l && 0 === h && 1 === c && 0 === u)
                    return g[12] = g[12] * t + g[15] * p,
                    g[13] = g[13] * r + g[15] * d,
                    g[14] = g[14] * c + g[15] * f,
                    g[15] *= m,
                    this._identityCalculated = !1,
                    this;
                var y = g[0]
                  , v = g[1]
                  , b = g[2]
                  , w = g[3]
                  , S = g[4]
                  , E = g[5]
                  , P = g[6]
                  , k = g[7]
                  , x = g[8]
                  , C = g[9]
                  , A = g[10]
                  , T = g[11]
                  , _ = g[12]
                  , M = g[13]
                  , D = g[14]
                  , I = g[15];
                return g[0] = y * t + v * n + b * l + w * p,
                g[1] = y * e + v * r + b * h + w * d,
                g[2] = y * i + v * a + b * c + w * f,
                g[3] = y * s + v * o + b * u + w * m,
                g[4] = S * t + E * n + P * l + k * p,
                g[5] = S * e + E * r + P * h + k * d,
                g[6] = S * i + E * a + P * c + k * f,
                g[7] = S * s + E * o + P * u + k * m,
                g[8] = x * t + C * n + A * l + T * p,
                g[9] = x * e + C * r + A * h + T * d,
                g[10] = x * i + C * a + A * c + T * f,
                g[11] = x * s + C * o + A * u + T * m,
                g[12] = _ * t + M * n + D * l + I * p,
                g[13] = _ * e + M * r + D * h + I * d,
                g[14] = _ * i + M * a + D * c + I * f,
                g[15] = _ * s + M * o + D * u + I * m,
                this._identityCalculated = !1,
                this
            }
            function g() {
                return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]),
                this._identityCalculated = !0),
                this._identity
            }
            function y(t) {
                for (var e = 0; e < 16; ) {
                    if (t.props[e] !== this.props[e])
                        return !1;
                    e += 1
                }
                return !0
            }
            function v(t) {
                var e;
                for (e = 0; e < 16; e += 1)
                    t.props[e] = this.props[e];
                return t
            }
            function b(t) {
                var e;
                for (e = 0; e < 16; e += 1)
                    this.props[e] = t[e]
            }
            function w(t, e, i) {
                return {
                    x: t * this.props[0] + e * this.props[4] + i * this.props[8] + this.props[12],
                    y: t * this.props[1] + e * this.props[5] + i * this.props[9] + this.props[13],
                    z: t * this.props[2] + e * this.props[6] + i * this.props[10] + this.props[14]
                }
            }
            function S(t, e, i) {
                return t * this.props[0] + e * this.props[4] + i * this.props[8] + this.props[12]
            }
            function E(t, e, i) {
                return t * this.props[1] + e * this.props[5] + i * this.props[9] + this.props[13]
            }
            function P(t, e, i) {
                return t * this.props[2] + e * this.props[6] + i * this.props[10] + this.props[14]
            }
            function k() {
                var t = this.props[0] * this.props[5] - this.props[1] * this.props[4]
                  , e = this.props[5] / t
                  , i = -this.props[1] / t
                  , s = -this.props[4] / t
                  , n = this.props[0] / t
                  , r = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t
                  , a = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t
                  , o = new Matrix;
                return o.props[0] = e,
                o.props[1] = i,
                o.props[4] = s,
                o.props[5] = n,
                o.props[12] = r,
                o.props[13] = a,
                o
            }
            function x(t) {
                return this.getInverseMatrix().applyToPointArray(t[0], t[1], t[2] || 0)
            }
            function C(t) {
                var e, i = t.length, s = [];
                for (e = 0; e < i; e += 1)
                    s[e] = x(t[e]);
                return s
            }
            function A(t, e, i) {
                var s = createTypedArray("float32", 6);
                if (this.isIdentity())
                    s[0] = t[0],
                    s[1] = t[1],
                    s[2] = e[0],
                    s[3] = e[1],
                    s[4] = i[0],
                    s[5] = i[1];
                else {
                    var n = this.props[0]
                      , r = this.props[1]
                      , a = this.props[4]
                      , o = this.props[5]
                      , l = this.props[12]
                      , h = this.props[13];
                    s[0] = t[0] * n + t[1] * a + l,
                    s[1] = t[0] * r + t[1] * o + h,
                    s[2] = e[0] * n + e[1] * a + l,
                    s[3] = e[0] * r + e[1] * o + h,
                    s[4] = i[0] * n + i[1] * a + l,
                    s[5] = i[0] * r + i[1] * o + h
                }
                return s
            }
            function T(t, e, i) {
                return this.isIdentity() ? [t, e, i] : [t * this.props[0] + e * this.props[4] + i * this.props[8] + this.props[12], t * this.props[1] + e * this.props[5] + i * this.props[9] + this.props[13], t * this.props[2] + e * this.props[6] + i * this.props[10] + this.props[14]]
            }
            function _(t, e) {
                if (this.isIdentity())
                    return t + "," + e;
                var i = this.props;
                return Math.round(100 * (t * i[0] + e * i[4] + i[12])) / 100 + "," + Math.round(100 * (t * i[1] + e * i[5] + i[13])) / 100
            }
            function M() {
                for (var t = 0, e = this.props, i = "matrix3d("; t < 16; )
                    i += s(1e4 * e[t]) / 1e4,
                    i += 15 === t ? ")" : ",",
                    t += 1;
                return i
            }
            function D(t) {
                return t < 1e-6 && t > 0 || t > -1e-6 && t < 0 ? s(1e4 * t) / 1e4 : t
            }
            function I() {
                var t = this.props;
                return "matrix(" + D(t[0]) + "," + D(t[1]) + "," + D(t[4]) + "," + D(t[5]) + "," + D(t[12]) + "," + D(t[13]) + ")"
            }
            return function() {
                this.reset = n,
                this.rotate = r,
                this.rotateX = a,
                this.rotateY = o,
                this.rotateZ = l,
                this.skew = c,
                this.skewFromAxis = u,
                this.shear = h,
                this.scale = p,
                this.setTransform = d,
                this.translate = f,
                this.transform = m,
                this.applyToPoint = w,
                this.applyToX = S,
                this.applyToY = E,
                this.applyToZ = P,
                this.applyToPointArray = T,
                this.applyToTriplePoints = A,
                this.applyToPointStringified = _,
                this.toCSS = M,
                this.to2dCSS = I,
                this.clone = v,
                this.cloneFromProps = b,
                this.equals = y,
                this.inversePoints = C,
                this.inversePoint = x,
                this.getInverseMatrix = k,
                this._t = this.transform,
                this.isIdentity = g,
                this._identity = !0,
                this._identityCalculated = !1,
                this.props = createTypedArray("float32", 16),
                this.reset()
            }
        }();
        function _typeof$3(t) {
            return (_typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            )(t)
        }
        var lottie = {}
          , standalone = "__[STANDALONE]__"
          , animationData = "__[ANIMATIONDATA]__"
          , renderer = "";
        function setLocation(t) {
            setLocationHref(t)
        }
        function searchAnimations() {
            !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations()
        }
        function setSubframeRendering(t) {
            setSubframeEnabled(t)
        }
        function setPrefix(t) {
            setIdPrefix(t)
        }
        function loadAnimation(t) {
            return !0 === standalone && (t.animationData = JSON.parse(animationData)),
            animationManager.loadAnimation(t)
        }
        function setQuality(t) {
            if ("string" == typeof t)
                switch (t) {
                case "high":
                    setDefaultCurveSegments(200);
                    break;
                default:
                case "medium":
                    setDefaultCurveSegments(50);
                    break;
                case "low":
                    setDefaultCurveSegments(10)
                }
            else
                !isNaN(t) && t > 1 && setDefaultCurveSegments(t);
            getDefaultCurveSegments() >= 50 ? roundValues(!1) : roundValues(!0)
        }
        function inBrowser() {
            return "undefined" != typeof navigator
        }
        function installPlugin(t, e) {
            "expressions" === t && setExpressionsPlugin(e)
        }
        function getFactory(t) {
            switch (t) {
            case "propertyFactory":
                return PropertyFactory;
            case "shapePropertyFactory":
                return ShapePropertyFactory;
            case "matrix":
                return Matrix;
            default:
                return null
            }
        }
        function checkReady() {
            "complete" === document.readyState && (clearInterval(readyStateCheckInterval),
            searchAnimations())
        }
        function getQueryVariable(t) {
            for (var e = queryString.split("&"), i = 0; i < e.length; i += 1) {
                var s = e[i].split("=");
                if (decodeURIComponent(s[0]) == t)
                    return decodeURIComponent(s[1])
            }
            return null
        }
        lottie.play = animationManager.play,
        lottie.pause = animationManager.pause,
        lottie.setLocationHref = setLocation,
        lottie.togglePause = animationManager.togglePause,
        lottie.setSpeed = animationManager.setSpeed,
        lottie.setDirection = animationManager.setDirection,
        lottie.stop = animationManager.stop,
        lottie.searchAnimations = searchAnimations,
        lottie.registerAnimation = animationManager.registerAnimation,
        lottie.loadAnimation = loadAnimation,
        lottie.setSubframeRendering = setSubframeRendering,
        lottie.resize = animationManager.resize,
        lottie.goToAndStop = animationManager.goToAndStop,
        lottie.destroy = animationManager.destroy,
        lottie.setQuality = setQuality,
        lottie.inBrowser = inBrowser,
        lottie.installPlugin = installPlugin,
        lottie.freeze = animationManager.freeze,
        lottie.unfreeze = animationManager.unfreeze,
        lottie.setVolume = animationManager.setVolume,
        lottie.mute = animationManager.mute,
        lottie.unmute = animationManager.unmute,
        lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations,
        lottie.useWebWorker = setWebWorker,
        lottie.setIDPrefix = setPrefix,
        lottie.__getFactory = getFactory,
        lottie.version = "5.10.2";
        var queryString = "";
        if (standalone) {
            var scripts = document.getElementsByTagName("script")
              , index = scripts.length - 1
              , myScript = scripts[index] || {
                src: ""
            };
            queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, "") : "",
            renderer = getQueryVariable("renderer")
        }
        var readyStateCheckInterval = setInterval(checkReady, 100);
        try {
            "object" === _typeof$3(exports) && void 0 !== module || __webpack_require__(41) || (window.bodymovin = lottie)
        } catch (t) {}
        var ShapeModifiers = function() {
            var t = {}
              , e = {};
            return t.registerModifier = function(t, i) {
                e[t] || (e[t] = i)
            }
            ,
            t.getModifier = function(t, i, s) {
                return new e[t](i,s)
            }
            ,
            t
        }();
        function ShapeModifier() {}
        function TrimModifier() {}
        function PuckerAndBloatModifier() {}
        ShapeModifier.prototype.initModifierProperties = function() {}
        ,
        ShapeModifier.prototype.addShapeToModifier = function() {}
        ,
        ShapeModifier.prototype.addShape = function(t) {
            if (!this.closed) {
                t.sh.container.addDynamicProperty(t.sh);
                var e = {
                    shape: t.sh,
                    data: t,
                    localShapeCollection: shapeCollectionPool.newShapeCollection()
                };
                this.shapes.push(e),
                this.addShapeToModifier(e),
                this._isAnimated && t.setAsAnimated()
            }
        }
        ,
        ShapeModifier.prototype.init = function(t, e) {
            this.shapes = [],
            this.elem = t,
            this.initDynamicPropertyContainer(t),
            this.initModifierProperties(t, e),
            this.frameId = initialDefaultFrame,
            this.closed = !1,
            this.k = !1,
            this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
        }
        ,
        ShapeModifier.prototype.processKeys = function() {
            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
            this.iterateDynamicProperties())
        }
        ,
        extendPrototype([DynamicPropertyContainer], ShapeModifier),
        extendPrototype([ShapeModifier], TrimModifier),
        TrimModifier.prototype.initModifierProperties = function(t, e) {
            this.s = PropertyFactory.getProp(t, e.s, 0, .01, this),
            this.e = PropertyFactory.getProp(t, e.e, 0, .01, this),
            this.o = PropertyFactory.getProp(t, e.o, 0, 0, this),
            this.sValue = 0,
            this.eValue = 0,
            this.getValue = this.processKeys,
            this.m = e.m,
            this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length
        }
        ,
        TrimModifier.prototype.addShapeToModifier = function(t) {
            t.pathsData = []
        }
        ,
        TrimModifier.prototype.calculateShapeEdges = function(t, e, i, s, n) {
            var r = [];
            e <= 1 ? r.push({
                s: t,
                e: e
            }) : t >= 1 ? r.push({
                s: t - 1,
                e: e - 1
            }) : (r.push({
                s: t,
                e: 1
            }),
            r.push({
                s: 0,
                e: e - 1
            }));
            var a, o, l = [], h = r.length;
            for (a = 0; a < h; a += 1) {
                var c, u;
                if (!((o = r[a]).e * n < s || o.s * n > s + i))
                    c = o.s * n <= s ? 0 : (o.s * n - s) / i,
                    u = o.e * n >= s + i ? 1 : (o.e * n - s) / i,
                    l.push([c, u])
            }
            return l.length || l.push([0, 0]),
            l
        }
        ,
        TrimModifier.prototype.releasePathsData = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
                segmentsLengthPool.release(t[e]);
            return t.length = 0,
            t
        }
        ,
        TrimModifier.prototype.processShapes = function(t) {
            var e, i, s, n;
            if (this._mdf || t) {
                var r = this.o.v % 360 / 360;
                if (r < 0 && (r += 1),
                (e = this.s.v > 1 ? 1 + r : this.s.v < 0 ? 0 + r : this.s.v + r) > (i = this.e.v > 1 ? 1 + r : this.e.v < 0 ? 0 + r : this.e.v + r)) {
                    var a = e;
                    e = i,
                    i = a
                }
                e = 1e-4 * Math.round(1e4 * e),
                i = 1e-4 * Math.round(1e4 * i),
                this.sValue = e,
                this.eValue = i
            } else
                e = this.sValue,
                i = this.eValue;
            var o, l, h, c, u, p = this.shapes.length, d = 0;
            if (i === e)
                for (n = 0; n < p; n += 1)
                    this.shapes[n].localShapeCollection.releaseShapes(),
                    this.shapes[n].shape._mdf = !0,
                    this.shapes[n].shape.paths = this.shapes[n].localShapeCollection,
                    this._mdf && (this.shapes[n].pathsData.length = 0);
            else if (1 === i && 0 === e || 0 === i && 1 === e) {
                if (this._mdf)
                    for (n = 0; n < p; n += 1)
                        this.shapes[n].pathsData.length = 0,
                        this.shapes[n].shape._mdf = !0
            } else {
                var f, m, g = [];
                for (n = 0; n < p; n += 1)
                    if ((f = this.shapes[n]).shape._mdf || this._mdf || t || 2 === this.m) {
                        if (l = (s = f.shape.paths)._length,
                        u = 0,
                        !f.shape._mdf && f.pathsData.length)
                            u = f.totalShapeLength;
                        else {
                            for (h = this.releasePathsData(f.pathsData),
                            o = 0; o < l; o += 1)
                                c = bez.getSegmentsLength(s.shapes[o]),
                                h.push(c),
                                u += c.totalLength;
                            f.totalShapeLength = u,
                            f.pathsData = h
                        }
                        d += u,
                        f.shape._mdf = !0
                    } else
                        f.shape.paths = f.localShapeCollection;
                var y, v = e, b = i, w = 0;
                for (n = p - 1; n >= 0; n -= 1)
                    if ((f = this.shapes[n]).shape._mdf) {
                        for ((m = f.localShapeCollection).releaseShapes(),
                        2 === this.m && p > 1 ? (y = this.calculateShapeEdges(e, i, f.totalShapeLength, w, d),
                        w += f.totalShapeLength) : y = [[v, b]],
                        l = y.length,
                        o = 0; o < l; o += 1) {
                            v = y[o][0],
                            b = y[o][1],
                            g.length = 0,
                            b <= 1 ? g.push({
                                s: f.totalShapeLength * v,
                                e: f.totalShapeLength * b
                            }) : v >= 1 ? g.push({
                                s: f.totalShapeLength * (v - 1),
                                e: f.totalShapeLength * (b - 1)
                            }) : (g.push({
                                s: f.totalShapeLength * v,
                                e: f.totalShapeLength
                            }),
                            g.push({
                                s: 0,
                                e: f.totalShapeLength * (b - 1)
                            }));
                            var S = this.addShapes(f, g[0]);
                            if (g[0].s !== g[0].e) {
                                if (g.length > 1)
                                    if (f.shape.paths.shapes[f.shape.paths._length - 1].c) {
                                        var E = S.pop();
                                        this.addPaths(S, m),
                                        S = this.addShapes(f, g[1], E)
                                    } else
                                        this.addPaths(S, m),
                                        S = this.addShapes(f, g[1]);
                                this.addPaths(S, m)
                            }
                        }
                        f.shape.paths = m
                    }
            }
        }
        ,
        TrimModifier.prototype.addPaths = function(t, e) {
            var i, s = t.length;
            for (i = 0; i < s; i += 1)
                e.addShape(t[i])
        }
        ,
        TrimModifier.prototype.addSegment = function(t, e, i, s, n, r, a) {
            n.setXYAt(e[0], e[1], "o", r),
            n.setXYAt(i[0], i[1], "i", r + 1),
            a && n.setXYAt(t[0], t[1], "v", r),
            n.setXYAt(s[0], s[1], "v", r + 1)
        }
        ,
        TrimModifier.prototype.addSegmentFromArray = function(t, e, i, s) {
            e.setXYAt(t[1], t[5], "o", i),
            e.setXYAt(t[2], t[6], "i", i + 1),
            s && e.setXYAt(t[0], t[4], "v", i),
            e.setXYAt(t[3], t[7], "v", i + 1)
        }
        ,
        TrimModifier.prototype.addShapes = function(t, e, i) {
            var s, n, r, a, o, l, h, c, u = t.pathsData, p = t.shape.paths.shapes, d = t.shape.paths._length, f = 0, m = [], g = !0;
            for (i ? (o = i._length,
            c = i._length) : (i = shapePool.newElement(),
            o = 0,
            c = 0),
            m.push(i),
            s = 0; s < d; s += 1) {
                for (l = u[s].lengths,
                i.c = p[s].c,
                r = p[s].c ? l.length : l.length + 1,
                n = 1; n < r; n += 1)
                    if (f + (a = l[n - 1]).addedLength < e.s)
                        f += a.addedLength,
                        i.c = !1;
                    else {
                        if (f > e.e) {
                            i.c = !1;
                            break
                        }
                        e.s <= f && e.e >= f + a.addedLength ? (this.addSegment(p[s].v[n - 1], p[s].o[n - 1], p[s].i[n], p[s].v[n], i, o, g),
                        g = !1) : (h = bez.getNewSegment(p[s].v[n - 1], p[s].v[n], p[s].o[n - 1], p[s].i[n], (e.s - f) / a.addedLength, (e.e - f) / a.addedLength, l[n - 1]),
                        this.addSegmentFromArray(h, i, o, g),
                        g = !1,
                        i.c = !1),
                        f += a.addedLength,
                        o += 1
                    }
                if (p[s].c && l.length) {
                    if (a = l[n - 1],
                    f <= e.e) {
                        var y = l[n - 1].addedLength;
                        e.s <= f && e.e >= f + y ? (this.addSegment(p[s].v[n - 1], p[s].o[n - 1], p[s].i[0], p[s].v[0], i, o, g),
                        g = !1) : (h = bez.getNewSegment(p[s].v[n - 1], p[s].v[0], p[s].o[n - 1], p[s].i[0], (e.s - f) / y, (e.e - f) / y, l[n - 1]),
                        this.addSegmentFromArray(h, i, o, g),
                        g = !1,
                        i.c = !1)
                    } else
                        i.c = !1;
                    f += a.addedLength,
                    o += 1
                }
                if (i._length && (i.setXYAt(i.v[c][0], i.v[c][1], "i", c),
                i.setXYAt(i.v[i._length - 1][0], i.v[i._length - 1][1], "o", i._length - 1)),
                f > e.e)
                    break;
                s < d - 1 && (i = shapePool.newElement(),
                g = !0,
                m.push(i),
                o = 0)
            }
            return m
        }
        ,
        extendPrototype([ShapeModifier], PuckerAndBloatModifier),
        PuckerAndBloatModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys,
            this.amount = PropertyFactory.getProp(t, e.a, 0, null, this),
            this._isAnimated = !!this.amount.effectsSequence.length
        }
        ,
        PuckerAndBloatModifier.prototype.processPath = function(t, e) {
            var i = e / 100
              , s = [0, 0]
              , n = t._length
              , r = 0;
            for (r = 0; r < n; r += 1)
                s[0] += t.v[r][0],
                s[1] += t.v[r][1];
            s[0] /= n,
            s[1] /= n;
            var a, o, l, h, c, u, p = shapePool.newElement();
            for (p.c = t.c,
            r = 0; r < n; r += 1)
                a = t.v[r][0] + (s[0] - t.v[r][0]) * i,
                o = t.v[r][1] + (s[1] - t.v[r][1]) * i,
                l = t.o[r][0] + (s[0] - t.o[r][0]) * -i,
                h = t.o[r][1] + (s[1] - t.o[r][1]) * -i,
                c = t.i[r][0] + (s[0] - t.i[r][0]) * -i,
                u = t.i[r][1] + (s[1] - t.i[r][1]) * -i,
                p.setTripleAt(a, o, l, h, c, u, r);
            return p
        }
        ,
        PuckerAndBloatModifier.prototype.processShapes = function(t) {
            var e, i, s, n, r, a, o = this.shapes.length, l = this.amount.v;
            if (0 !== l)
                for (i = 0; i < o; i += 1) {
                    if (a = (r = this.shapes[i]).localShapeCollection,
                    r.shape._mdf || this._mdf || t)
                        for (a.releaseShapes(),
                        r.shape._mdf = !0,
                        e = r.shape.paths.shapes,
                        n = r.shape.paths._length,
                        s = 0; s < n; s += 1)
                            a.addShape(this.processPath(e[s], l));
                    r.shape.paths = r.localShapeCollection
                }
            this.dynamicProperties.length || (this._mdf = !1)
        }
        ;
        var TransformPropertyFactory = function() {
            var t = [0, 0];
            function e(t, e, i) {
                if (this.elem = t,
                this.frameId = -1,
                this.propType = "transform",
                this.data = e,
                this.v = new Matrix,
                this.pre = new Matrix,
                this.appliedTransformations = 0,
                this.initDynamicPropertyContainer(i || t),
                e.p && e.p.s ? (this.px = PropertyFactory.getProp(t, e.p.x, 0, 0, this),
                this.py = PropertyFactory.getProp(t, e.p.y, 0, 0, this),
                e.p.z && (this.pz = PropertyFactory.getProp(t, e.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(t, e.p || {
                    k: [0, 0, 0]
                }, 1, 0, this),
                e.rx) {
                    if (this.rx = PropertyFactory.getProp(t, e.rx, 0, degToRads, this),
                    this.ry = PropertyFactory.getProp(t, e.ry, 0, degToRads, this),
                    this.rz = PropertyFactory.getProp(t, e.rz, 0, degToRads, this),
                    e.or.k[0].ti) {
                        var s, n = e.or.k.length;
                        for (s = 0; s < n; s += 1)
                            e.or.k[s].to = null,
                            e.or.k[s].ti = null
                    }
                    this.or = PropertyFactory.getProp(t, e.or, 1, degToRads, this),
                    this.or.sh = !0
                } else
                    this.r = PropertyFactory.getProp(t, e.r || {
                        k: 0
                    }, 0, degToRads, this);
                e.sk && (this.sk = PropertyFactory.getProp(t, e.sk, 0, degToRads, this),
                this.sa = PropertyFactory.getProp(t, e.sa, 0, degToRads, this)),
                this.a = PropertyFactory.getProp(t, e.a || {
                    k: [0, 0, 0]
                }, 1, 0, this),
                this.s = PropertyFactory.getProp(t, e.s || {
                    k: [100, 100, 100]
                }, 1, .01, this),
                e.o ? this.o = PropertyFactory.getProp(t, e.o, 0, .01, t) : this.o = {
                    _mdf: !1,
                    v: 1
                },
                this._isDirty = !0,
                this.dynamicProperties.length || this.getValue(!0)
            }
            return e.prototype = {
                applyToMatrix: function(t) {
                    var e = this._mdf;
                    this.iterateDynamicProperties(),
                    this._mdf = this._mdf || e,
                    this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                    this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                    this.sk && t.skewFromAxis(-this.sk.v, this.sa.v),
                    this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                    this.data.p.s ? this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                },
                getValue: function(e) {
                    if (this.elem.globalData.frameId !== this.frameId) {
                        if (this._isDirty && (this.precalculateMatrix(),
                        this._isDirty = !1),
                        this.iterateDynamicProperties(),
                        this._mdf || e) {
                            var i;
                            if (this.v.cloneFromProps(this.pre.props),
                            this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                            this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                            this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v),
                            this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                            this.autoOriented) {
                                var s, n;
                                if (i = this.elem.globalData.frameRate,
                                this.p && this.p.keyframes && this.p.getValueAtTime)
                                    this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (s = this.p.getValueAtTime((this.p.keyframes[0].t + .01) / i, 0),
                                    n = this.p.getValueAtTime(this.p.keyframes[0].t / i, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (s = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / i, 0),
                                    n = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - .05) / i, 0)) : (s = this.p.pv,
                                    n = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - .01) / i, this.p.offsetTime));
                                else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                                    s = [],
                                    n = [];
                                    var r = this.px
                                      , a = this.py;
                                    r._caching.lastFrame + r.offsetTime <= r.keyframes[0].t ? (s[0] = r.getValueAtTime((r.keyframes[0].t + .01) / i, 0),
                                    s[1] = a.getValueAtTime((a.keyframes[0].t + .01) / i, 0),
                                    n[0] = r.getValueAtTime(r.keyframes[0].t / i, 0),
                                    n[1] = a.getValueAtTime(a.keyframes[0].t / i, 0)) : r._caching.lastFrame + r.offsetTime >= r.keyframes[r.keyframes.length - 1].t ? (s[0] = r.getValueAtTime(r.keyframes[r.keyframes.length - 1].t / i, 0),
                                    s[1] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / i, 0),
                                    n[0] = r.getValueAtTime((r.keyframes[r.keyframes.length - 1].t - .01) / i, 0),
                                    n[1] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - .01) / i, 0)) : (s = [r.pv, a.pv],
                                    n[0] = r.getValueAtTime((r._caching.lastFrame + r.offsetTime - .01) / i, r.offsetTime),
                                    n[1] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - .01) / i, a.offsetTime))
                                } else
                                    s = n = t;
                                this.v.rotate(-Math.atan2(s[1] - n[1], s[0] - n[0]))
                            }
                            this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                        }
                        this.frameId = this.elem.globalData.frameId
                    }
                },
                precalculateMatrix: function() {
                    if (!this.a.k && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                    this.appliedTransformations = 1,
                    !this.s.effectsSequence.length)) {
                        if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                        this.appliedTransformations = 2,
                        this.sk) {
                            if (this.sk.effectsSequence.length || this.sa.effectsSequence.length)
                                return;
                            this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                            this.appliedTransformations = 3
                        }
                        this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v),
                        this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                        this.appliedTransformations = 4)
                    }
                },
                autoOrient: function() {}
            },
            extendPrototype([DynamicPropertyContainer], e),
            e.prototype.addDynamicProperty = function(t) {
                this._addDynamicProperty(t),
                this.elem.addDynamicProperty(t),
                this._isDirty = !0
            }
            ,
            e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty,
            {
                getTransformProperty: function(t, i, s) {
                    return new e(t,i,s)
                }
            }
        }();
        function RepeaterModifier() {}
        function RoundCornersModifier() {}
        function floatEqual(t, e) {
            return 1e5 * Math.abs(t - e) <= Math.min(Math.abs(t), Math.abs(e))
        }
        function floatZero(t) {
            return Math.abs(t) <= 1e-5
        }
        function lerp(t, e, i) {
            return t * (1 - i) + e * i
        }
        function lerpPoint(t, e, i) {
            return [lerp(t[0], e[0], i), lerp(t[1], e[1], i)]
        }
        function quadRoots(t, e, i) {
            if (0 === t)
                return [];
            var s = e * e - 4 * t * i;
            if (s < 0)
                return [];
            var n = -e / (2 * t);
            if (0 === s)
                return [n];
            var r = Math.sqrt(s) / (2 * t);
            return [n - r, n + r]
        }
        function polynomialCoefficients(t, e, i, s) {
            return [3 * e - t - 3 * i + s, 3 * t - 6 * e + 3 * i, -3 * t + 3 * e, t]
        }
        function singlePoint(t) {
            return new PolynomialBezier(t,t,t,t,!1)
        }
        function PolynomialBezier(t, e, i, s, n) {
            n && pointEqual(t, e) && (e = lerpPoint(t, s, 1 / 3)),
            n && pointEqual(i, s) && (i = lerpPoint(t, s, 2 / 3));
            var r = polynomialCoefficients(t[0], e[0], i[0], s[0])
              , a = polynomialCoefficients(t[1], e[1], i[1], s[1]);
            this.a = [r[0], a[0]],
            this.b = [r[1], a[1]],
            this.c = [r[2], a[2]],
            this.d = [r[3], a[3]],
            this.points = [t, e, i, s]
        }
        function extrema(t, e) {
            var i = t.points[0][e]
              , s = t.points[t.points.length - 1][e];
            if (i > s) {
                var n = s;
                s = i,
                i = n
            }
            for (var r = quadRoots(3 * t.a[e], 2 * t.b[e], t.c[e]), a = 0; a < r.length; a += 1)
                if (r[a] > 0 && r[a] < 1) {
                    var o = t.point(r[a])[e];
                    o < i ? i = o : o > s && (s = o)
                }
            return {
                min: i,
                max: s
            }
        }
        function intersectData(t, e, i) {
            var s = t.boundingBox();
            return {
                cx: s.cx,
                cy: s.cy,
                width: s.width,
                height: s.height,
                bez: t,
                t: (e + i) / 2,
                t1: e,
                t2: i
            }
        }
        function splitData(t) {
            var e = t.bez.split(.5);
            return [intersectData(e[0], t.t1, t.t), intersectData(e[1], t.t, t.t2)]
        }
        function boxIntersect(t, e) {
            return 2 * Math.abs(t.cx - e.cx) < t.width + e.width && 2 * Math.abs(t.cy - e.cy) < t.height + e.height
        }
        function intersectsImpl(t, e, i, s, n, r) {
            if (boxIntersect(t, e))
                if (i >= r || t.width <= s && t.height <= s && e.width <= s && e.height <= s)
                    n.push([t.t, e.t]);
                else {
                    var a = splitData(t)
                      , o = splitData(e);
                    intersectsImpl(a[0], o[0], i + 1, s, n, r),
                    intersectsImpl(a[0], o[1], i + 1, s, n, r),
                    intersectsImpl(a[1], o[0], i + 1, s, n, r),
                    intersectsImpl(a[1], o[1], i + 1, s, n, r)
                }
        }
        function crossProduct(t, e) {
            return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]]
        }
        function lineIntersection(t, e, i, s) {
            var n = [t[0], t[1], 1]
              , r = [e[0], e[1], 1]
              , a = [i[0], i[1], 1]
              , o = [s[0], s[1], 1]
              , l = crossProduct(crossProduct(n, r), crossProduct(a, o));
            return floatZero(l[2]) ? null : [l[0] / l[2], l[1] / l[2]]
        }
        function polarOffset(t, e, i) {
            return [t[0] + Math.cos(e) * i, t[1] - Math.sin(e) * i]
        }
        function pointDistance(t, e) {
            return Math.hypot(t[0] - e[0], t[1] - e[1])
        }
        function pointEqual(t, e) {
            return floatEqual(t[0], e[0]) && floatEqual(t[1], e[1])
        }
        function ZigZagModifier() {}
        function setPoint(t, e, i, s, n, r, a) {
            var o = i - Math.PI / 2
              , l = i + Math.PI / 2
              , h = e[0] + Math.cos(i) * s * n
              , c = e[1] - Math.sin(i) * s * n;
            t.setTripleAt(h, c, h + Math.cos(o) * r, c - Math.sin(o) * r, h + Math.cos(l) * a, c - Math.sin(l) * a, t.length())
        }
        function getPerpendicularVector(t, e) {
            var i = [e[0] - t[0], e[1] - t[1]]
              , s = .5 * -Math.PI;
            return [Math.cos(s) * i[0] - Math.sin(s) * i[1], Math.sin(s) * i[0] + Math.cos(s) * i[1]]
        }
        function getProjectingAngle(t, e) {
            var i = 0 === e ? t.length() - 1 : e - 1
              , s = (e + 1) % t.length()
              , n = getPerpendicularVector(t.v[i], t.v[s]);
            return Math.atan2(0, 1) - Math.atan2(n[1], n[0])
        }
        function zigZagCorner(t, e, i, s, n, r, a) {
            var o = getProjectingAngle(e, i)
              , l = e.v[i % e._length]
              , h = e.v[0 === i ? e._length - 1 : i - 1]
              , c = e.v[(i + 1) % e._length]
              , u = 2 === r ? Math.sqrt(Math.pow(l[0] - h[0], 2) + Math.pow(l[1] - h[1], 2)) : 0
              , p = 2 === r ? Math.sqrt(Math.pow(l[0] - c[0], 2) + Math.pow(l[1] - c[1], 2)) : 0;
            setPoint(t, e.v[i % e._length], o, a, s, p / (2 * (n + 1)), u / (2 * (n + 1)), r)
        }
        function zigZagSegment(t, e, i, s, n, r) {
            for (var a = 0; a < s; a += 1) {
                var o = (a + 1) / (s + 1)
                  , l = 2 === n ? Math.sqrt(Math.pow(e.points[3][0] - e.points[0][0], 2) + Math.pow(e.points[3][1] - e.points[0][1], 2)) : 0
                  , h = e.normalAngle(o);
                setPoint(t, e.point(o), h, r, i, l / (2 * (s + 1)), l / (2 * (s + 1)), n),
                r = -r
            }
            return r
        }
        function linearOffset(t, e, i) {
            var s = Math.atan2(e[0] - t[0], e[1] - t[1]);
            return [polarOffset(t, s, i), polarOffset(e, s, i)]
        }
        function offsetSegment(t, e) {
            var i, s, n, r, a, o, l;
            i = (l = linearOffset(t.points[0], t.points[1], e))[0],
            s = l[1],
            n = (l = linearOffset(t.points[1], t.points[2], e))[0],
            r = l[1],
            a = (l = linearOffset(t.points[2], t.points[3], e))[0],
            o = l[1];
            var h = lineIntersection(i, s, n, r);
            null === h && (h = s);
            var c = lineIntersection(a, o, n, r);
            return null === c && (c = a),
            new PolynomialBezier(i,h,c,o)
        }
        function joinLines(t, e, i, s, n) {
            var r = e.points[3]
              , a = i.points[0];
            if (3 === s)
                return r;
            if (pointEqual(r, a))
                return r;
            if (2 === s) {
                var o = -e.tangentAngle(1)
                  , l = -i.tangentAngle(0) + Math.PI
                  , h = lineIntersection(r, polarOffset(r, o + Math.PI / 2, 100), a, polarOffset(a, o + Math.PI / 2, 100))
                  , c = h ? pointDistance(h, r) : pointDistance(r, a) / 2
                  , u = polarOffset(r, o, 2 * c * roundCorner);
                return t.setXYAt(u[0], u[1], "o", t.length() - 1),
                u = polarOffset(a, l, 2 * c * roundCorner),
                t.setTripleAt(a[0], a[1], a[0], a[1], u[0], u[1], t.length()),
                a
            }
            var p = lineIntersection(pointEqual(r, e.points[2]) ? e.points[0] : e.points[2], r, a, pointEqual(a, i.points[1]) ? i.points[3] : i.points[1]);
            return p && pointDistance(p, r) < n ? (t.setTripleAt(p[0], p[1], p[0], p[1], p[0], p[1], t.length()),
            p) : r
        }
        function getIntersection(t, e) {
            var i = t.intersections(e);
            return i.length && floatEqual(i[0][0], 1) && i.shift(),
            i.length ? i[0] : null
        }
        function pruneSegmentIntersection(t, e) {
            var i = t.slice()
              , s = e.slice()
              , n = getIntersection(t[t.length - 1], e[0]);
            return n && (i[t.length - 1] = t[t.length - 1].split(n[0])[0],
            s[0] = e[0].split(n[1])[1]),
            t.length > 1 && e.length > 1 && (n = getIntersection(t[0], e[e.length - 1])) ? [[t[0].split(n[0])[0]], [e[e.length - 1].split(n[1])[1]]] : [i, s]
        }
        function pruneIntersections(t) {
            for (var e, i = 1; i < t.length; i += 1)
                e = pruneSegmentIntersection(t[i - 1], t[i]),
                t[i - 1] = e[0],
                t[i] = e[1];
            return t.length > 1 && (e = pruneSegmentIntersection(t[t.length - 1], t[0]),
            t[t.length - 1] = e[0],
            t[0] = e[1]),
            t
        }
        function offsetSegmentSplit(t, e) {
            var i, s, n, r, a = t.inflectionPoints();
            if (0 === a.length)
                return [offsetSegment(t, e)];
            if (1 === a.length || floatEqual(a[1], 1))
                return i = (n = t.split(a[0]))[0],
                s = n[1],
                [offsetSegment(i, e), offsetSegment(s, e)];
            i = (n = t.split(a[0]))[0];
            var o = (a[1] - a[0]) / (1 - a[0]);
            return r = (n = n[1].split(o))[0],
            s = n[1],
            [offsetSegment(i, e), offsetSegment(r, e), offsetSegment(s, e)]
        }
        function OffsetPathModifier() {}
        function getFontProperties(t) {
            for (var e = t.fStyle ? t.fStyle.split(" ") : [], i = "normal", s = "normal", n = e.length, r = 0; r < n; r += 1)
                switch (e[r].toLowerCase()) {
                case "italic":
                    s = "italic";
                    break;
                case "bold":
                    i = "700";
                    break;
                case "black":
                    i = "900";
                    break;
                case "medium":
                    i = "500";
                    break;
                case "regular":
                case "normal":
                    i = "400";
                    break;
                case "light":
                case "thin":
                    i = "200"
                }
            return {
                style: s,
                weight: t.fWeight || i
            }
        }
        extendPrototype([ShapeModifier], RepeaterModifier),
        RepeaterModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys,
            this.c = PropertyFactory.getProp(t, e.c, 0, null, this),
            this.o = PropertyFactory.getProp(t, e.o, 0, null, this),
            this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this),
            this.so = PropertyFactory.getProp(t, e.tr.so, 0, .01, this),
            this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, .01, this),
            this.data = e,
            this.dynamicProperties.length || this.getValue(!0),
            this._isAnimated = !!this.dynamicProperties.length,
            this.pMatrix = new Matrix,
            this.rMatrix = new Matrix,
            this.sMatrix = new Matrix,
            this.tMatrix = new Matrix,
            this.matrix = new Matrix
        }
        ,
        RepeaterModifier.prototype.applyTransforms = function(t, e, i, s, n, r) {
            var a = r ? -1 : 1
              , o = s.s.v[0] + (1 - s.s.v[0]) * (1 - n)
              , l = s.s.v[1] + (1 - s.s.v[1]) * (1 - n);
            t.translate(s.p.v[0] * a * n, s.p.v[1] * a * n, s.p.v[2]),
            e.translate(-s.a.v[0], -s.a.v[1], s.a.v[2]),
            e.rotate(-s.r.v * a * n),
            e.translate(s.a.v[0], s.a.v[1], s.a.v[2]),
            i.translate(-s.a.v[0], -s.a.v[1], s.a.v[2]),
            i.scale(r ? 1 / o : o, r ? 1 / l : l),
            i.translate(s.a.v[0], s.a.v[1], s.a.v[2])
        }
        ,
        RepeaterModifier.prototype.init = function(t, e, i, s) {
            for (this.elem = t,
            this.arr = e,
            this.pos = i,
            this.elemsData = s,
            this._currentCopies = 0,
            this._elements = [],
            this._groups = [],
            this.frameId = -1,
            this.initDynamicPropertyContainer(t),
            this.initModifierProperties(t, e[i]); i > 0; )
                i -= 1,
                this._elements.unshift(e[i]);
            this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
        }
        ,
        RepeaterModifier.prototype.resetElements = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
                t[e]._processed = !1,
                "gr" === t[e].ty && this.resetElements(t[e].it)
        }
        ,
        RepeaterModifier.prototype.cloneElements = function(t) {
            var e = JSON.parse(JSON.stringify(t));
            return this.resetElements(e),
            e
        }
        ,
        RepeaterModifier.prototype.changeGroupRender = function(t, e) {
            var i, s = t.length;
            for (i = 0; i < s; i += 1)
                t[i]._render = e,
                "gr" === t[i].ty && this.changeGroupRender(t[i].it, e)
        }
        ,
        RepeaterModifier.prototype.processShapes = function(t) {
            var e, i, s, n, r, a = !1;
            if (this._mdf || t) {
                var o, l = Math.ceil(this.c.v);
                if (this._groups.length < l) {
                    for (; this._groups.length < l; ) {
                        var h = {
                            it: this.cloneElements(this._elements),
                            ty: "gr"
                        };
                        h.it.push({
                            a: {
                                a: 0,
                                ix: 1,
                                k: [0, 0]
                            },
                            nm: "Transform",
                            o: {
                                a: 0,
                                ix: 7,
                                k: 100
                            },
                            p: {
                                a: 0,
                                ix: 2,
                                k: [0, 0]
                            },
                            r: {
                                a: 1,
                                ix: 6,
                                k: [{
                                    s: 0,
                                    e: 0,
                                    t: 0
                                }, {
                                    s: 0,
                                    e: 0,
                                    t: 1
                                }]
                            },
                            s: {
                                a: 0,
                                ix: 3,
                                k: [100, 100]
                            },
                            sa: {
                                a: 0,
                                ix: 5,
                                k: 0
                            },
                            sk: {
                                a: 0,
                                ix: 4,
                                k: 0
                            },
                            ty: "tr"
                        }),
                        this.arr.splice(0, 0, h),
                        this._groups.splice(0, 0, h),
                        this._currentCopies += 1
                    }
                    this.elem.reloadShapes(),
                    a = !0
                }
                for (r = 0,
                s = 0; s <= this._groups.length - 1; s += 1) {
                    if (o = r < l,
                    this._groups[s]._render = o,
                    this.changeGroupRender(this._groups[s].it, o),
                    !o) {
                        var c = this.elemsData[s].it
                          , u = c[c.length - 1];
                        0 !== u.transform.op.v ? (u.transform.op._mdf = !0,
                        u.transform.op.v = 0) : u.transform.op._mdf = !1
                    }
                    r += 1
                }
                this._currentCopies = l;
                var p = this.o.v
                  , d = p % 1
                  , f = p > 0 ? Math.floor(p) : Math.ceil(p)
                  , m = this.pMatrix.props
                  , g = this.rMatrix.props
                  , y = this.sMatrix.props;
                this.pMatrix.reset(),
                this.rMatrix.reset(),
                this.sMatrix.reset(),
                this.tMatrix.reset(),
                this.matrix.reset();
                var v, b, w = 0;
                if (p > 0) {
                    for (; w < f; )
                        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                        w += 1;
                    d && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, d, !1),
                    w += d)
                } else if (p < 0) {
                    for (; w > f; )
                        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0),
                        w -= 1;
                    d && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -d, !0),
                    w -= d)
                }
                for (s = 1 === this.data.m ? 0 : this._currentCopies - 1,
                n = 1 === this.data.m ? 1 : -1,
                r = this._currentCopies; r; ) {
                    if (b = (i = (e = this.elemsData[s].it)[e.length - 1].transform.mProps.v.props).length,
                    e[e.length - 1].transform.mProps._mdf = !0,
                    e[e.length - 1].transform.op._mdf = !0,
                    e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (s / (this._currentCopies - 1)),
                    0 !== w) {
                        for ((0 !== s && 1 === n || s !== this._currentCopies - 1 && -1 === n) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                        this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]),
                        this.matrix.transform(y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15]),
                        this.matrix.transform(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]),
                        v = 0; v < b; v += 1)
                            i[v] = this.matrix.props[v];
                        this.matrix.reset()
                    } else
                        for (this.matrix.reset(),
                        v = 0; v < b; v += 1)
                            i[v] = this.matrix.props[v];
                    w += 1,
                    r -= 1,
                    s += n
                }
            } else
                for (r = this._currentCopies,
                s = 0,
                n = 1; r; )
                    i = (e = this.elemsData[s].it)[e.length - 1].transform.mProps.v.props,
                    e[e.length - 1].transform.mProps._mdf = !1,
                    e[e.length - 1].transform.op._mdf = !1,
                    r -= 1,
                    s += n;
            return a
        }
        ,
        RepeaterModifier.prototype.addShape = function() {}
        ,
        extendPrototype([ShapeModifier], RoundCornersModifier),
        RoundCornersModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys,
            this.rd = PropertyFactory.getProp(t, e.r, 0, null, this),
            this._isAnimated = !!this.rd.effectsSequence.length
        }
        ,
        RoundCornersModifier.prototype.processPath = function(t, e) {
            var i, s = shapePool.newElement();
            s.c = t.c;
            var n, r, a, o, l, h, c, u, p, d, f, m, g = t._length, y = 0;
            for (i = 0; i < g; i += 1)
                n = t.v[i],
                a = t.o[i],
                r = t.i[i],
                n[0] === a[0] && n[1] === a[1] && n[0] === r[0] && n[1] === r[1] ? 0 !== i && i !== g - 1 || t.c ? (o = 0 === i ? t.v[g - 1] : t.v[i - 1],
                h = (l = Math.sqrt(Math.pow(n[0] - o[0], 2) + Math.pow(n[1] - o[1], 2))) ? Math.min(l / 2, e) / l : 0,
                c = f = n[0] + (o[0] - n[0]) * h,
                u = m = n[1] - (n[1] - o[1]) * h,
                p = c - (c - n[0]) * roundCorner,
                d = u - (u - n[1]) * roundCorner,
                s.setTripleAt(c, u, p, d, f, m, y),
                y += 1,
                o = i === g - 1 ? t.v[0] : t.v[i + 1],
                h = (l = Math.sqrt(Math.pow(n[0] - o[0], 2) + Math.pow(n[1] - o[1], 2))) ? Math.min(l / 2, e) / l : 0,
                c = p = n[0] + (o[0] - n[0]) * h,
                u = d = n[1] + (o[1] - n[1]) * h,
                f = c - (c - n[0]) * roundCorner,
                m = u - (u - n[1]) * roundCorner,
                s.setTripleAt(c, u, p, d, f, m, y),
                y += 1) : (s.setTripleAt(n[0], n[1], a[0], a[1], r[0], r[1], y),
                y += 1) : (s.setTripleAt(t.v[i][0], t.v[i][1], t.o[i][0], t.o[i][1], t.i[i][0], t.i[i][1], y),
                y += 1);
            return s
        }
        ,
        RoundCornersModifier.prototype.processShapes = function(t) {
            var e, i, s, n, r, a, o = this.shapes.length, l = this.rd.v;
            if (0 !== l)
                for (i = 0; i < o; i += 1) {
                    if (a = (r = this.shapes[i]).localShapeCollection,
                    r.shape._mdf || this._mdf || t)
                        for (a.releaseShapes(),
                        r.shape._mdf = !0,
                        e = r.shape.paths.shapes,
                        n = r.shape.paths._length,
                        s = 0; s < n; s += 1)
                            a.addShape(this.processPath(e[s], l));
                    r.shape.paths = r.localShapeCollection
                }
            this.dynamicProperties.length || (this._mdf = !1)
        }
        ,
        PolynomialBezier.prototype.point = function(t) {
            return [((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0], ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]]
        }
        ,
        PolynomialBezier.prototype.derivative = function(t) {
            return [(3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0], (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]]
        }
        ,
        PolynomialBezier.prototype.tangentAngle = function(t) {
            var e = this.derivative(t);
            return Math.atan2(e[1], e[0])
        }
        ,
        PolynomialBezier.prototype.normalAngle = function(t) {
            var e = this.derivative(t);
            return Math.atan2(e[0], e[1])
        }
        ,
        PolynomialBezier.prototype.inflectionPoints = function() {
            var t = this.a[1] * this.b[0] - this.a[0] * this.b[1];
            if (floatZero(t))
                return [];
            var e = -.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / t
              , i = e * e - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / t;
            if (i < 0)
                return [];
            var s = Math.sqrt(i);
            return floatZero(s) ? s > 0 && s < 1 ? [e] : [] : [e - s, e + s].filter((function(t) {
                return t > 0 && t < 1
            }
            ))
        }
        ,
        PolynomialBezier.prototype.split = function(t) {
            if (t <= 0)
                return [singlePoint(this.points[0]), this];
            if (t >= 1)
                return [this, singlePoint(this.points[this.points.length - 1])];
            var e = lerpPoint(this.points[0], this.points[1], t)
              , i = lerpPoint(this.points[1], this.points[2], t)
              , s = lerpPoint(this.points[2], this.points[3], t)
              , n = lerpPoint(e, i, t)
              , r = lerpPoint(i, s, t)
              , a = lerpPoint(n, r, t);
            return [new PolynomialBezier(this.points[0],e,n,a,!0), new PolynomialBezier(a,r,s,this.points[3],!0)]
        }
        ,
        PolynomialBezier.prototype.bounds = function() {
            return {
                x: extrema(this, 0),
                y: extrema(this, 1)
            }
        }
        ,
        PolynomialBezier.prototype.boundingBox = function() {
            var t = this.bounds();
            return {
                left: t.x.min,
                right: t.x.max,
                top: t.y.min,
                bottom: t.y.max,
                width: t.x.max - t.x.min,
                height: t.y.max - t.y.min,
                cx: (t.x.max + t.x.min) / 2,
                cy: (t.y.max + t.y.min) / 2
            }
        }
        ,
        PolynomialBezier.prototype.intersections = function(t, e, i) {
            void 0 === e && (e = 2),
            void 0 === i && (i = 7);
            var s = [];
            return intersectsImpl(intersectData(this, 0, 1), intersectData(t, 0, 1), 0, e, s, i),
            s
        }
        ,
        PolynomialBezier.shapeSegment = function(t, e) {
            var i = (e + 1) % t.length();
            return new PolynomialBezier(t.v[e],t.o[e],t.i[i],t.v[i],!0)
        }
        ,
        PolynomialBezier.shapeSegmentInverted = function(t, e) {
            var i = (e + 1) % t.length();
            return new PolynomialBezier(t.v[i],t.i[i],t.o[e],t.v[e],!0)
        }
        ,
        extendPrototype([ShapeModifier], ZigZagModifier),
        ZigZagModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys,
            this.amplitude = PropertyFactory.getProp(t, e.s, 0, null, this),
            this.frequency = PropertyFactory.getProp(t, e.r, 0, null, this),
            this.pointsType = PropertyFactory.getProp(t, e.pt, 0, null, this),
            this._isAnimated = 0 !== this.amplitude.effectsSequence.length || 0 !== this.frequency.effectsSequence.length || 0 !== this.pointsType.effectsSequence.length
        }
        ,
        ZigZagModifier.prototype.processPath = function(t, e, i, s) {
            var n = t._length
              , r = shapePool.newElement();
            if (r.c = t.c,
            t.c || (n -= 1),
            0 === n)
                return r;
            var a = -1
              , o = PolynomialBezier.shapeSegment(t, 0);
            zigZagCorner(r, t, 0, e, i, s, a);
            for (var l = 0; l < n; l += 1)
                a = zigZagSegment(r, o, e, i, s, -a),
                o = l !== n - 1 || t.c ? PolynomialBezier.shapeSegment(t, (l + 1) % n) : null,
                zigZagCorner(r, t, l + 1, e, i, s, a);
            return r
        }
        ,
        ZigZagModifier.prototype.processShapes = function(t) {
            var e, i, s, n, r, a, o = this.shapes.length, l = this.amplitude.v, h = Math.max(0, Math.round(this.frequency.v)), c = this.pointsType.v;
            if (0 !== l)
                for (i = 0; i < o; i += 1) {
                    if (a = (r = this.shapes[i]).localShapeCollection,
                    r.shape._mdf || this._mdf || t)
                        for (a.releaseShapes(),
                        r.shape._mdf = !0,
                        e = r.shape.paths.shapes,
                        n = r.shape.paths._length,
                        s = 0; s < n; s += 1)
                            a.addShape(this.processPath(e[s], l, h, c));
                    r.shape.paths = r.localShapeCollection
                }
            this.dynamicProperties.length || (this._mdf = !1)
        }
        ,
        extendPrototype([ShapeModifier], OffsetPathModifier),
        OffsetPathModifier.prototype.initModifierProperties = function(t, e) {
            this.getValue = this.processKeys,
            this.amount = PropertyFactory.getProp(t, e.a, 0, null, this),
            this.miterLimit = PropertyFactory.getProp(t, e.ml, 0, null, this),
            this.lineJoin = e.lj,
            this._isAnimated = 0 !== this.amount.effectsSequence.length
        }
        ,
        OffsetPathModifier.prototype.processPath = function(t, e, i, s) {
            var n = shapePool.newElement();
            n.c = t.c;
            var r, a, o, l = t.length();
            t.c || (l -= 1);
            var h = [];
            for (r = 0; r < l; r += 1)
                o = PolynomialBezier.shapeSegment(t, r),
                h.push(offsetSegmentSplit(o, e));
            if (!t.c)
                for (r = l - 1; r >= 0; r -= 1)
                    o = PolynomialBezier.shapeSegmentInverted(t, r),
                    h.push(offsetSegmentSplit(o, e));
            h = pruneIntersections(h);
            var c = null
              , u = null;
            for (r = 0; r < h.length; r += 1) {
                var p = h[r];
                for (u && (c = joinLines(n, u, p[0], i, s)),
                u = p[p.length - 1],
                a = 0; a < p.length; a += 1)
                    o = p[a],
                    c && pointEqual(o.points[0], c) ? n.setXYAt(o.points[1][0], o.points[1][1], "o", n.length() - 1) : n.setTripleAt(o.points[0][0], o.points[0][1], o.points[1][0], o.points[1][1], o.points[0][0], o.points[0][1], n.length()),
                    n.setTripleAt(o.points[3][0], o.points[3][1], o.points[3][0], o.points[3][1], o.points[2][0], o.points[2][1], n.length()),
                    c = o.points[3]
            }
            return h.length && joinLines(n, u, h[0][0], i, s),
            n
        }
        ,
        OffsetPathModifier.prototype.processShapes = function(t) {
            var e, i, s, n, r, a, o = this.shapes.length, l = this.amount.v, h = this.miterLimit.v, c = this.lineJoin;
            if (0 !== l)
                for (i = 0; i < o; i += 1) {
                    if (a = (r = this.shapes[i]).localShapeCollection,
                    r.shape._mdf || this._mdf || t)
                        for (a.releaseShapes(),
                        r.shape._mdf = !0,
                        e = r.shape.paths.shapes,
                        n = r.shape.paths._length,
                        s = 0; s < n; s += 1)
                            a.addShape(this.processPath(e[s], l, c, h));
                    r.shape.paths = r.localShapeCollection
                }
            this.dynamicProperties.length || (this._mdf = !1)
        }
        ;
        var FontManager = function() {
            var t = {
                w: 0,
                size: 0,
                shapes: [],
                data: {
                    shapes: []
                }
            }
              , e = [];
            e = e.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
            var i = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"]
              , s = [65039, 8205];
            function n(t, e) {
                var i = createTag("span");
                i.setAttribute("aria-hidden", !0),
                i.style.fontFamily = e;
                var s = createTag("span");
                s.innerText = "giItT1WQy@!-/#",
                i.style.position = "absolute",
                i.style.left = "-10000px",
                i.style.top = "-10000px",
                i.style.fontSize = "300px",
                i.style.fontVariant = "normal",
                i.style.fontStyle = "normal",
                i.style.fontWeight = "normal",
                i.style.letterSpacing = "0",
                i.appendChild(s),
                document.body.appendChild(i);
                var n = s.offsetWidth;
                return s.style.fontFamily = function(t) {
                    var e, i = t.split(","), s = i.length, n = [];
                    for (e = 0; e < s; e += 1)
                        "sans-serif" !== i[e] && "monospace" !== i[e] && n.push(i[e]);
                    return n.join(",")
                }(t) + ", " + e,
                {
                    node: s,
                    w: n,
                    parent: i
                }
            }
            function r(t, e) {
                var i, s = document.body && e ? "svg" : "canvas", n = getFontProperties(t);
                if ("svg" === s) {
                    var r = createNS("text");
                    r.style.fontSize = "100px",
                    r.setAttribute("font-family", t.fFamily),
                    r.setAttribute("font-style", n.style),
                    r.setAttribute("font-weight", n.weight),
                    r.textContent = "1",
                    t.fClass ? (r.style.fontFamily = "inherit",
                    r.setAttribute("class", t.fClass)) : r.style.fontFamily = t.fFamily,
                    e.appendChild(r),
                    i = r
                } else {
                    var a = new OffscreenCanvas(500,500).getContext("2d");
                    a.font = n.style + " " + n.weight + " 100px " + t.fFamily,
                    i = a
                }
                return {
                    measureText: function(t) {
                        return "svg" === s ? (i.textContent = t,
                        i.getComputedTextLength()) : i.measureText(t).width
                    }
                }
            }
            var a = function() {
                this.fonts = [],
                this.chars = null,
                this.typekitLoaded = 0,
                this.isLoaded = !1,
                this._warned = !1,
                this.initTime = Date.now(),
                this.setIsLoadedBinded = this.setIsLoaded.bind(this),
                this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)
            };
            return a.isModifier = function(t, e) {
                var s = t.toString(16) + e.toString(16);
                return -1 !== i.indexOf(s)
            }
            ,
            a.isZeroWidthJoiner = function(t, e) {
                return e ? t === s[0] && e === s[1] : t === s[1]
            }
            ,
            a.isCombinedCharacter = function(t) {
                return -1 !== e.indexOf(t)
            }
            ,
            a.prototype = {
                addChars: function(t) {
                    if (t) {
                        var e;
                        this.chars || (this.chars = []);
                        var i, s, n = t.length, r = this.chars.length;
                        for (e = 0; e < n; e += 1) {
                            for (i = 0,
                            s = !1; i < r; )
                                this.chars[i].style === t[e].style && this.chars[i].fFamily === t[e].fFamily && this.chars[i].ch === t[e].ch && (s = !0),
                                i += 1;
                            s || (this.chars.push(t[e]),
                            r += 1)
                        }
                    }
                },
                addFonts: function(t, e) {
                    if (t) {
                        if (this.chars)
                            return this.isLoaded = !0,
                            void (this.fonts = t.list);
                        if (!document.body)
                            return this.isLoaded = !0,
                            t.list.forEach((function(t) {
                                t.helper = r(t),
                                t.cache = {}
                            }
                            )),
                            void (this.fonts = t.list);
                        var i, s = t.list, a = s.length, o = a;
                        for (i = 0; i < a; i += 1) {
                            var l, h, c = !0;
                            if (s[i].loaded = !1,
                            s[i].monoCase = n(s[i].fFamily, "monospace"),
                            s[i].sansCase = n(s[i].fFamily, "sans-serif"),
                            s[i].fPath) {
                                if ("p" === s[i].fOrigin || 3 === s[i].origin) {
                                    if ((l = document.querySelectorAll('style[f-forigin="p"][f-family="' + s[i].fFamily + '"], style[f-origin="3"][f-family="' + s[i].fFamily + '"]')).length > 0 && (c = !1),
                                    c) {
                                        var u = createTag("style");
                                        u.setAttribute("f-forigin", s[i].fOrigin),
                                        u.setAttribute("f-origin", s[i].origin),
                                        u.setAttribute("f-family", s[i].fFamily),
                                        u.type = "text/css",
                                        u.innerText = "@font-face {font-family: " + s[i].fFamily + "; font-style: normal; src: url('" + s[i].fPath + "');}",
                                        e.appendChild(u)
                                    }
                                } else if ("g" === s[i].fOrigin || 1 === s[i].origin) {
                                    for (l = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'),
                                    h = 0; h < l.length; h += 1)
                                        -1 !== l[h].href.indexOf(s[i].fPath) && (c = !1);
                                    if (c) {
                                        var p = createTag("link");
                                        p.setAttribute("f-forigin", s[i].fOrigin),
                                        p.setAttribute("f-origin", s[i].origin),
                                        p.type = "text/css",
                                        p.rel = "stylesheet",
                                        p.href = s[i].fPath,
                                        document.body.appendChild(p)
                                    }
                                } else if ("t" === s[i].fOrigin || 2 === s[i].origin) {
                                    for (l = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'),
                                    h = 0; h < l.length; h += 1)
                                        s[i].fPath === l[h].src && (c = !1);
                                    if (c) {
                                        var d = createTag("link");
                                        d.setAttribute("f-forigin", s[i].fOrigin),
                                        d.setAttribute("f-origin", s[i].origin),
                                        d.setAttribute("rel", "stylesheet"),
                                        d.setAttribute("href", s[i].fPath),
                                        e.appendChild(d)
                                    }
                                }
                            } else
                                s[i].loaded = !0,
                                o -= 1;
                            s[i].helper = r(s[i], e),
                            s[i].cache = {},
                            this.fonts.push(s[i])
                        }
                        0 === o ? this.isLoaded = !0 : setTimeout(this.checkLoadedFonts.bind(this), 100)
                    } else
                        this.isLoaded = !0
                },
                getCharData: function(e, i, s) {
                    for (var n = 0, r = this.chars.length; n < r; ) {
                        if (this.chars[n].ch === e && this.chars[n].style === i && this.chars[n].fFamily === s)
                            return this.chars[n];
                        n += 1
                    }
                    return ("string" == typeof e && 13 !== e.charCodeAt(0) || !e) && console && console.warn && !this._warned && (this._warned = !0,
                    console.warn("Missing character from exported characters list: ", e, i, s)),
                    t
                },
                getFontByName: function(t) {
                    for (var e = 0, i = this.fonts.length; e < i; ) {
                        if (this.fonts[e].fName === t)
                            return this.fonts[e];
                        e += 1
                    }
                    return this.fonts[0]
                },
                measureText: function(t, e, i) {
                    var s = this.getFontByName(e)
                      , n = t.charCodeAt(0);
                    if (!s.cache[n + 1]) {
                        var r = s.helper;
                        if (" " === t) {
                            var a = r.measureText("|" + t + "|")
                              , o = r.measureText("||");
                            s.cache[n + 1] = (a - o) / 100
                        } else
                            s.cache[n + 1] = r.measureText(t) / 100
                    }
                    return s.cache[n + 1] * i
                },
                checkLoadedFonts: function() {
                    var t, e, i, s = this.fonts.length, n = s;
                    for (t = 0; t < s; t += 1)
                        this.fonts[t].loaded ? n -= 1 : "n" === this.fonts[t].fOrigin || 0 === this.fonts[t].origin ? this.fonts[t].loaded = !0 : (e = this.fonts[t].monoCase.node,
                        i = this.fonts[t].monoCase.w,
                        e.offsetWidth !== i ? (n -= 1,
                        this.fonts[t].loaded = !0) : (e = this.fonts[t].sansCase.node,
                        i = this.fonts[t].sansCase.w,
                        e.offsetWidth !== i && (n -= 1,
                        this.fonts[t].loaded = !0)),
                        this.fonts[t].loaded && (this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent),
                        this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));
                    0 !== n && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10)
                },
                setIsLoaded: function() {
                    this.isLoaded = !0
                }
            },
            a
        }();
        function RenderableElement() {}
        RenderableElement.prototype = {
            initRenderable: function() {
                this.isInRange = !1,
                this.hidden = !1,
                this.isTransparent = !1,
                this.renderableComponents = []
            },
            addRenderableComponent: function(t) {
                -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t)
            },
            removeRenderableComponent: function(t) {
                -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1)
            },
            prepareRenderableFrame: function(t) {
                this.checkLayerLimits(t)
            },
            checkTransparency: function() {
                this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = !0,
                this.hide()) : this.isTransparent && (this.isTransparent = !1,
                this.show())
            },
            checkLayerLimits: function(t) {
                this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? !0 !== this.isInRange && (this.globalData._mdf = !0,
                this._mdf = !0,
                this.isInRange = !0,
                this.show()) : !1 !== this.isInRange && (this.globalData._mdf = !0,
                this.isInRange = !1,
                this.hide())
            },
            renderRenderable: function() {
                var t, e = this.renderableComponents.length;
                for (t = 0; t < e; t += 1)
                    this.renderableComponents[t].renderFrame(this._isFirstFrame)
            },
            sourceRectAtTime: function() {
                return {
                    top: 0,
                    left: 0,
                    width: 100,
                    height: 100
                }
            },
            getLayerSize: function() {
                return 5 === this.data.ty ? {
                    w: this.data.textData.width,
                    h: this.data.textData.height
                } : {
                    w: this.data.width,
                    h: this.data.height
                }
            }
        };
        var getBlendMode = (blendModeEnums = {
            0: "source-over",
            1: "multiply",
            2: "screen",
            3: "overlay",
            4: "darken",
            5: "lighten",
            6: "color-dodge",
            7: "color-burn",
            8: "hard-light",
            9: "soft-light",
            10: "difference",
            11: "exclusion",
            12: "hue",
            13: "saturation",
            14: "color",
            15: "luminosity"
        },
        function(t) {
            return blendModeEnums[t] || ""
        }
        ), blendModeEnums;
        function SliderEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i)
        }
        function AngleEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i)
        }
        function ColorEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 1, 0, i)
        }
        function PointEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 1, 0, i)
        }
        function LayerIndexEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i)
        }
        function MaskIndexEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i)
        }
        function CheckboxEffect(t, e, i) {
            this.p = PropertyFactory.getProp(e, t.v, 0, 0, i)
        }
        function NoValueEffect() {
            this.p = {}
        }
        function EffectsManager(t, e) {
            var i, s = t.ef || [];
            this.effectElements = [];
            var n, r = s.length;
            for (i = 0; i < r; i += 1)
                n = new GroupEffect(s[i],e),
                this.effectElements.push(n)
        }
        function GroupEffect(t, e) {
            this.init(t, e)
        }
        function BaseElement() {}
        function FrameElement() {}
        function FootageElement(t, e, i) {
            this.initFrame(),
            this.initRenderable(),
            this.assetData = e.getAssetData(t.refId),
            this.footageData = e.imageLoader.getAsset(this.assetData),
            this.initBaseData(t, e, i)
        }
        function AudioElement(t, e, i) {
            this.initFrame(),
            this.initRenderable(),
            this.assetData = e.getAssetData(t.refId),
            this.initBaseData(t, e, i),
            this._isPlaying = !1,
            this._canPlay = !1;
            var s = this.globalData.getAssetsPath(this.assetData);
            this.audio = this.globalData.audioController.createAudio(s),
            this._currentTime = 0,
            this.globalData.audioController.addAudio(this),
            this._volumeMultiplier = 1,
            this._volume = 1,
            this._previousVolume = null,
            this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                _placeholder: !0
            },
            this.lv = PropertyFactory.getProp(this, t.au && t.au.lv ? t.au.lv : {
                k: [100]
            }, 1, .01, this)
        }
        function BaseRenderer() {}
        function TransformElement() {}
        function MaskElement(t, e, i) {
            this.data = t,
            this.element = e,
            this.globalData = i,
            this.storedData = [],
            this.masksProperties = this.data.masksProperties || [],
            this.maskElement = null;
            var s, n, r = this.globalData.defs, a = this.masksProperties ? this.masksProperties.length : 0;
            this.viewData = createSizedArray(a),
            this.solidPath = "";
            var o, l, h, c, u, p, d = this.masksProperties, f = 0, m = [], g = createElementID(), y = "clipPath", v = "clip-path";
            for (s = 0; s < a; s += 1)
                if (("a" !== d[s].mode && "n" !== d[s].mode || d[s].inv || 100 !== d[s].o.k || d[s].o.x) && (y = "mask",
                v = "mask"),
                "s" !== d[s].mode && "i" !== d[s].mode || 0 !== f ? h = null : ((h = createNS("rect")).setAttribute("fill", "#ffffff"),
                h.setAttribute("width", this.element.comp.data.w || 0),
                h.setAttribute("height", this.element.comp.data.h || 0),
                m.push(h)),
                n = createNS("path"),
                "n" === d[s].mode)
                    this.viewData[s] = {
                        op: PropertyFactory.getProp(this.element, d[s].o, 0, .01, this.element),
                        prop: ShapePropertyFactory.getShapeProp(this.element, d[s], 3),
                        elem: n,
                        lastPath: ""
                    },
                    r.appendChild(n);
                else {
                    var b;
                    if (f += 1,
                    n.setAttribute("fill", "s" === d[s].mode ? "#000000" : "#ffffff"),
                    n.setAttribute("clip-rule", "nonzero"),
                    0 !== d[s].x.k ? (y = "mask",
                    v = "mask",
                    p = PropertyFactory.getProp(this.element, d[s].x, 0, null, this.element),
                    b = createElementID(),
                    (c = createNS("filter")).setAttribute("id", b),
                    (u = createNS("feMorphology")).setAttribute("operator", "erode"),
                    u.setAttribute("in", "SourceGraphic"),
                    u.setAttribute("radius", "0"),
                    c.appendChild(u),
                    r.appendChild(c),
                    n.setAttribute("stroke", "s" === d[s].mode ? "#000000" : "#ffffff")) : (u = null,
                    p = null),
                    this.storedData[s] = {
                        elem: n,
                        x: p,
                        expan: u,
                        lastPath: "",
                        lastOperator: "",
                        filterId: b,
                        lastRadius: 0
                    },
                    "i" === d[s].mode) {
                        l = m.length;
                        var w = createNS("g");
                        for (o = 0; o < l; o += 1)
                            w.appendChild(m[o]);
                        var S = createNS("mask");
                        S.setAttribute("mask-type", "alpha"),
                        S.setAttribute("id", g + "_" + f),
                        S.appendChild(n),
                        r.appendChild(S),
                        w.setAttribute("mask", "url(" + getLocationHref() + "#" + g + "_" + f + ")"),
                        m.length = 0,
                        m.push(w)
                    } else
                        m.push(n);
                    d[s].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()),
                    this.viewData[s] = {
                        elem: n,
                        lastPath: "",
                        op: PropertyFactory.getProp(this.element, d[s].o, 0, .01, this.element),
                        prop: ShapePropertyFactory.getShapeProp(this.element, d[s], 3),
                        invRect: h
                    },
                    this.viewData[s].prop.k || this.drawPath(d[s], this.viewData[s].prop.v, this.viewData[s])
                }
            for (this.maskElement = createNS(y),
            a = m.length,
            s = 0; s < a; s += 1)
                this.maskElement.appendChild(m[s]);
            f > 0 && (this.maskElement.setAttribute("id", g),
            this.element.maskedElement.setAttribute(v, "url(" + getLocationHref() + "#" + g + ")"),
            r.appendChild(this.maskElement)),
            this.viewData.length && this.element.addRenderableComponent(this)
        }
        extendPrototype([DynamicPropertyContainer], GroupEffect),
        GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties,
        GroupEffect.prototype.init = function(t, e) {
            var i;
            this.data = t,
            this.effectElements = [],
            this.initDynamicPropertyContainer(e);
            var s, n = this.data.ef.length, r = this.data.ef;
            for (i = 0; i < n; i += 1) {
                switch (s = null,
                r[i].ty) {
                case 0:
                    s = new SliderEffect(r[i],e,this);
                    break;
                case 1:
                    s = new AngleEffect(r[i],e,this);
                    break;
                case 2:
                    s = new ColorEffect(r[i],e,this);
                    break;
                case 3:
                    s = new PointEffect(r[i],e,this);
                    break;
                case 4:
                case 7:
                    s = new CheckboxEffect(r[i],e,this);
                    break;
                case 10:
                    s = new LayerIndexEffect(r[i],e,this);
                    break;
                case 11:
                    s = new MaskIndexEffect(r[i],e,this);
                    break;
                case 5:
                    s = new EffectsManager(r[i],e,this);
                    break;
                default:
                    s = new NoValueEffect(r[i],e,this)
                }
                s && this.effectElements.push(s)
            }
        }
        ,
        BaseElement.prototype = {
            checkMasks: function() {
                if (!this.data.hasMask)
                    return !1;
                for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
                    if ("n" !== this.data.masksProperties[t].mode && !1 !== this.data.masksProperties[t].cl)
                        return !0;
                    t += 1
                }
                return !1
            },
            initExpressions: function() {
                var t = getExpressionInterfaces();
                if (t) {
                    var e = t("layer")
                      , i = t("effects")
                      , s = t("shape")
                      , n = t("text")
                      , r = t("comp");
                    this.layerInterface = e(this),
                    this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
                    var a = i.createEffectsInterface(this, this.layerInterface);
                    this.layerInterface.registerEffectsInterface(a),
                    0 === this.data.ty || this.data.xt ? this.compInterface = r(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = s(this.shapesData, this.itemsData, this.layerInterface),
                    this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = n(this),
                    this.layerInterface.text = this.layerInterface.textInterface)
                }
            },
            setBlendMode: function() {
                var t = getBlendMode(this.data.bm);
                (this.baseElement || this.layerElement).style["mix-blend-mode"] = t
            },
            initBaseData: function(t, e, i) {
                this.globalData = e,
                this.comp = i,
                this.data = t,
                this.layerId = createElementID(),
                this.data.sr || (this.data.sr = 1),
                this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties)
            },
            getType: function() {
                return this.type
            },
            sourceRectAtTime: function() {}
        },
        FrameElement.prototype = {
            initFrame: function() {
                this._isFirstFrame = !1,
                this.dynamicProperties = [],
                this._mdf = !1
            },
            prepareProperties: function(t, e) {
                var i, s = this.dynamicProperties.length;
                for (i = 0; i < s; i += 1)
                    (e || this._isParent && "transform" === this.dynamicProperties[i].propType) && (this.dynamicProperties[i].getValue(),
                    this.dynamicProperties[i]._mdf && (this.globalData._mdf = !0,
                    this._mdf = !0))
            },
            addDynamicProperty: function(t) {
                -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t)
            }
        },
        FootageElement.prototype.prepareFrame = function() {}
        ,
        extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement),
        FootageElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        FootageElement.prototype.renderFrame = function() {}
        ,
        FootageElement.prototype.destroy = function() {}
        ,
        FootageElement.prototype.initExpressions = function() {
            var t = getExpressionInterfaces();
            if (t) {
                var e = t("footage");
                this.layerInterface = e(this)
            }
        }
        ,
        FootageElement.prototype.getFootageData = function() {
            return this.footageData
        }
        ,
        AudioElement.prototype.prepareFrame = function(t) {
            if (this.prepareRenderableFrame(t, !0),
            this.prepareProperties(t, !0),
            this.tm._placeholder)
                this._currentTime = t / this.data.sr;
            else {
                var e = this.tm.v;
                this._currentTime = e
            }
            this._volume = this.lv.v[0];
            var i = this._volume * this._volumeMultiplier;
            this._previousVolume !== i && (this._previousVolume = i,
            this.audio.volume(i))
        }
        ,
        extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement),
        AudioElement.prototype.renderFrame = function() {
            this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > .1) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(),
            this.audio.seek(this._currentTime / this.globalData.frameRate),
            this._isPlaying = !0))
        }
        ,
        AudioElement.prototype.show = function() {}
        ,
        AudioElement.prototype.hide = function() {
            this.audio.pause(),
            this._isPlaying = !1
        }
        ,
        AudioElement.prototype.pause = function() {
            this.audio.pause(),
            this._isPlaying = !1,
            this._canPlay = !1
        }
        ,
        AudioElement.prototype.resume = function() {
            this._canPlay = !0
        }
        ,
        AudioElement.prototype.setRate = function(t) {
            this.audio.rate(t)
        }
        ,
        AudioElement.prototype.volume = function(t) {
            this._volumeMultiplier = t,
            this._previousVolume = t * this._volume,
            this.audio.volume(this._previousVolume)
        }
        ,
        AudioElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        AudioElement.prototype.destroy = function() {}
        ,
        AudioElement.prototype.sourceRectAtTime = function() {}
        ,
        AudioElement.prototype.initExpressions = function() {}
        ,
        BaseRenderer.prototype.checkLayers = function(t) {
            var e, i, s = this.layers.length;
            for (this.completeLayers = !0,
            e = s - 1; e >= 0; e -= 1)
                this.elements[e] || (i = this.layers[e]).ip - i.st <= t - this.layers[e].st && i.op - i.st > t - this.layers[e].st && this.buildItem(e),
                this.completeLayers = !!this.elements[e] && this.completeLayers;
            this.checkPendingElements()
        }
        ,
        BaseRenderer.prototype.createItem = function(t) {
            switch (t.ty) {
            case 2:
                return this.createImage(t);
            case 0:
                return this.createComp(t);
            case 1:
                return this.createSolid(t);
            case 3:
                return this.createNull(t);
            case 4:
                return this.createShape(t);
            case 5:
                return this.createText(t);
            case 6:
                return this.createAudio(t);
            case 13:
                return this.createCamera(t);
            case 15:
                return this.createFootage(t);
            default:
                return this.createNull(t)
            }
        }
        ,
        BaseRenderer.prototype.createCamera = function() {
            throw new Error("You're using a 3d camera. Try the html renderer.")
        }
        ,
        BaseRenderer.prototype.createAudio = function(t) {
            return new AudioElement(t,this.globalData,this)
        }
        ,
        BaseRenderer.prototype.createFootage = function(t) {
            return new FootageElement(t,this.globalData,this)
        }
        ,
        BaseRenderer.prototype.buildAllItems = function() {
            var t, e = this.layers.length;
            for (t = 0; t < e; t += 1)
                this.buildItem(t);
            this.checkPendingElements()
        }
        ,
        BaseRenderer.prototype.includeLayers = function(t) {
            var e;
            this.completeLayers = !1;
            var i, s = t.length, n = this.layers.length;
            for (e = 0; e < s; e += 1)
                for (i = 0; i < n; ) {
                    if (this.layers[i].id === t[e].id) {
                        this.layers[i] = t[e];
                        break
                    }
                    i += 1
                }
        }
        ,
        BaseRenderer.prototype.setProjectInterface = function(t) {
            this.globalData.projectInterface = t
        }
        ,
        BaseRenderer.prototype.initItems = function() {
            this.globalData.progressiveLoad || this.buildAllItems()
        }
        ,
        BaseRenderer.prototype.buildElementParenting = function(t, e, i) {
            for (var s = this.elements, n = this.layers, r = 0, a = n.length; r < a; )
                n[r].ind == e && (s[r] && !0 !== s[r] ? (i.push(s[r]),
                s[r].setAsParent(),
                void 0 !== n[r].parent ? this.buildElementParenting(t, n[r].parent, i) : t.setHierarchy(i)) : (this.buildItem(r),
                this.addPendingElement(t))),
                r += 1
        }
        ,
        BaseRenderer.prototype.addPendingElement = function(t) {
            this.pendingElements.push(t)
        }
        ,
        BaseRenderer.prototype.searchExtraCompositions = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
                if (t[e].xt) {
                    var s = this.createComp(t[e]);
                    s.initExpressions(),
                    this.globalData.projectInterface.registerComposition(s)
                }
        }
        ,
        BaseRenderer.prototype.getElementById = function(t) {
            var e, i = this.elements.length;
            for (e = 0; e < i; e += 1)
                if (this.elements[e].data.ind === t)
                    return this.elements[e];
            return null
        }
        ,
        BaseRenderer.prototype.getElementByPath = function(t) {
            var e, i = t.shift();
            if ("number" == typeof i)
                e = this.elements[i];
            else {
                var s, n = this.elements.length;
                for (s = 0; s < n; s += 1)
                    if (this.elements[s].data.nm === i) {
                        e = this.elements[s];
                        break
                    }
            }
            return 0 === t.length ? e : e.getElementByPath(t)
        }
        ,
        BaseRenderer.prototype.setupGlobalData = function(t, e) {
            this.globalData.fontManager = new FontManager,
            this.globalData.fontManager.addChars(t.chars),
            this.globalData.fontManager.addFonts(t.fonts, e),
            this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem),
            this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem),
            this.globalData.imageLoader = this.animationItem.imagePreloader,
            this.globalData.audioController = this.animationItem.audioController,
            this.globalData.frameId = 0,
            this.globalData.frameRate = t.fr,
            this.globalData.nm = t.nm,
            this.globalData.compSize = {
                w: t.w,
                h: t.h
            }
        }
        ,
        TransformElement.prototype = {
            initTransform: function() {
                this.finalTransform = {
                    mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
                        o: 0
                    },
                    _matMdf: !1,
                    _opMdf: !1,
                    mat: new Matrix
                },
                this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
                this.data.ty
            },
            renderTransform: function() {
                if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame,
                this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame,
                this.hierarchy) {
                    var t, e = this.finalTransform.mat, i = 0, s = this.hierarchy.length;
                    if (!this.finalTransform._matMdf)
                        for (; i < s; ) {
                            if (this.hierarchy[i].finalTransform.mProp._mdf) {
                                this.finalTransform._matMdf = !0;
                                break
                            }
                            i += 1
                        }
                    if (this.finalTransform._matMdf)
                        for (t = this.finalTransform.mProp.v.props,
                        e.cloneFromProps(t),
                        i = 0; i < s; i += 1)
                            t = this.hierarchy[i].finalTransform.mProp.v.props,
                            e.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15])
                }
            },
            globalToLocal: function(t) {
                var e = [];
                e.push(this.finalTransform);
                for (var i, s = !0, n = this.comp; s; )
                    n.finalTransform ? (n.data.hasMask && e.splice(0, 0, n.finalTransform),
                    n = n.comp) : s = !1;
                var r, a = e.length;
                for (i = 0; i < a; i += 1)
                    r = e[i].mat.applyToPointArray(0, 0, 0),
                    t = [t[0] - r[0], t[1] - r[1], 0];
                return t
            },
            mHelper: new Matrix
        },
        MaskElement.prototype.getMaskProperty = function(t) {
            return this.viewData[t].prop
        }
        ,
        MaskElement.prototype.renderFrame = function(t) {
            var e, i = this.element.finalTransform.mat, s = this.masksProperties.length;
            for (e = 0; e < s; e += 1)
                if ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]),
                (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v),
                "n" !== this.masksProperties[e].mode && (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", i.getInverseMatrix().to2dCSS()),
                this.storedData[e].x && (this.storedData[e].x._mdf || t))) {
                    var n = this.storedData[e].expan;
                    this.storedData[e].x.v < 0 ? ("erode" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "erode",
                    this.storedData[e].elem.setAttribute("filter", "url(" + getLocationHref() + "#" + this.storedData[e].filterId + ")")),
                    n.setAttribute("radius", -this.storedData[e].x.v)) : ("dilate" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "dilate",
                    this.storedData[e].elem.setAttribute("filter", null)),
                    this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v))
                }
        }
        ,
        MaskElement.prototype.getMaskelement = function() {
            return this.maskElement
        }
        ,
        MaskElement.prototype.createLayerSolidPath = function() {
            var t = "M0,0 ";
            return t += " h" + this.globalData.compSize.w,
            t += " v" + this.globalData.compSize.h,
            t += " h-" + this.globalData.compSize.w,
            t += " v-" + this.globalData.compSize.h + " "
        }
        ,
        MaskElement.prototype.drawPath = function(t, e, i) {
            var s, n, r = " M" + e.v[0][0] + "," + e.v[0][1];
            for (n = e._length,
            s = 1; s < n; s += 1)
                r += " C" + e.o[s - 1][0] + "," + e.o[s - 1][1] + " " + e.i[s][0] + "," + e.i[s][1] + " " + e.v[s][0] + "," + e.v[s][1];
            if (e.c && n > 1 && (r += " C" + e.o[s - 1][0] + "," + e.o[s - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]),
            i.lastPath !== r) {
                var a = "";
                i.elem && (e.c && (a = t.inv ? this.solidPath + r : r),
                i.elem.setAttribute("d", a)),
                i.lastPath = r
            }
        }
        ,
        MaskElement.prototype.destroy = function() {
            this.element = null,
            this.globalData = null,
            this.maskElement = null,
            this.data = null,
            this.masksProperties = null
        }
        ;
        var filtersFactory = function() {
            var t = {};
            return t.createFilter = function(t, e) {
                var i = createNS("filter");
                i.setAttribute("id", t),
                !0 !== e && (i.setAttribute("filterUnits", "objectBoundingBox"),
                i.setAttribute("x", "0%"),
                i.setAttribute("y", "0%"),
                i.setAttribute("width", "100%"),
                i.setAttribute("height", "100%"));
                return i
            }
            ,
            t.createAlphaToLuminanceFilter = function() {
                var t = createNS("feColorMatrix");
                return t.setAttribute("type", "matrix"),
                t.setAttribute("color-interpolation-filters", "sRGB"),
                t.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"),
                t
            }
            ,
            t
        }()
          , featureSupport = function() {
            var t = {
                maskType: !0,
                svgLumaHidden: !0,
                offscreenCanvas: "undefined" != typeof OffscreenCanvas
            };
            return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (t.maskType = !1),
            /firefox/i.test(navigator.userAgent) && (t.svgLumaHidden = !1),
            t
        }()
          , registeredEffects = {}
          , idPrefix = "filter_result_";
        function SVGEffects(t) {
            var e, i, s = "SourceGraphic", n = t.data.ef ? t.data.ef.length : 0, r = createElementID(), a = filtersFactory.createFilter(r, !0), o = 0;
            for (this.filters = [],
            e = 0; e < n; e += 1) {
                i = null;
                var l = t.data.ef[e].ty;
                if (registeredEffects[l])
                    i = new (0,
                    registeredEffects[l].effect)(a,t.effectsManager.effectElements[e],t,idPrefix + o,s),
                    s = idPrefix + o,
                    registeredEffects[l].countsAsEffect && (o += 1);
                i && this.filters.push(i)
            }
            o && (t.globalData.defs.appendChild(a),
            t.layerElement.setAttribute("filter", "url(" + getLocationHref() + "#" + r + ")")),
            this.filters.length && t.addRenderableComponent(this)
        }
        function registerEffect(t, e, i) {
            registeredEffects[t] = {
                effect: e,
                countsAsEffect: i
            }
        }
        function SVGBaseElement() {}
        function HierarchyElement() {}
        function RenderableDOMElement() {}
        function IImageElement(t, e, i) {
            this.assetData = e.getAssetData(t.refId),
            this.initElement(t, e, i),
            this.sourceRect = {
                top: 0,
                left: 0,
                width: this.assetData.w,
                height: this.assetData.h
            }
        }
        function ProcessedElement(t, e) {
            this.elem = t,
            this.pos = e
        }
        function IShapeElement() {}
        SVGEffects.prototype.renderFrame = function(t) {
            var e, i = this.filters.length;
            for (e = 0; e < i; e += 1)
                this.filters[e].renderFrame(t)
        }
        ,
        SVGBaseElement.prototype = {
            initRendererElement: function() {
                this.layerElement = createNS("g")
            },
            createContainerElements: function() {
                this.matteElement = createNS("g"),
                this.transformedElement = this.layerElement,
                this.maskedElement = this.layerElement,
                this._sizeChanged = !1;
                var t = null;
                if (this.data.td) {
                    this.matteMasks = {};
                    var e = createNS("g");
                    e.setAttribute("id", this.layerId),
                    e.appendChild(this.layerElement),
                    t = e,
                    this.globalData.defs.appendChild(e)
                } else
                    this.data.tt ? (this.matteElement.appendChild(this.layerElement),
                    t = this.matteElement,
                    this.baseElement = this.matteElement) : this.baseElement = this.layerElement;
                if (this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                0 === this.data.ty && !this.data.hd) {
                    var i = createNS("clipPath")
                      , s = createNS("path");
                    s.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                    var n = createElementID();
                    if (i.setAttribute("id", n),
                    i.appendChild(s),
                    this.globalData.defs.appendChild(i),
                    this.checkMasks()) {
                        var r = createNS("g");
                        r.setAttribute("clip-path", "url(" + getLocationHref() + "#" + n + ")"),
                        r.appendChild(this.layerElement),
                        this.transformedElement = r,
                        t ? t.appendChild(this.transformedElement) : this.baseElement = this.transformedElement
                    } else
                        this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + n + ")")
                }
                0 !== this.data.bm && this.setBlendMode()
            },
            renderElement: function() {
                this.finalTransform._matMdf && this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS()),
                this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v)
            },
            destroyBaseElement: function() {
                this.layerElement = null,
                this.matteElement = null,
                this.maskManager.destroy()
            },
            getBaseElement: function() {
                return this.data.hd ? null : this.baseElement
            },
            createRenderableComponents: function() {
                this.maskManager = new MaskElement(this.data,this,this.globalData),
                this.renderableEffectsManager = new SVGEffects(this)
            },
            getMatte: function(t) {
                if (this.matteMasks || (this.matteMasks = {}),
                !this.matteMasks[t]) {
                    var e, i, s, n, r = this.layerId + "_" + t;
                    if (1 === t || 3 === t) {
                        var a = createNS("mask");
                        a.setAttribute("id", r),
                        a.setAttribute("mask-type", 3 === t ? "luminance" : "alpha"),
                        (s = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                        a.appendChild(s),
                        this.globalData.defs.appendChild(a),
                        featureSupport.maskType || 1 !== t || (a.setAttribute("mask-type", "luminance"),
                        e = createElementID(),
                        i = filtersFactory.createFilter(e),
                        this.globalData.defs.appendChild(i),
                        i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                        (n = createNS("g")).appendChild(s),
                        a.appendChild(n),
                        n.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"))
                    } else if (2 === t) {
                        var o = createNS("mask");
                        o.setAttribute("id", r),
                        o.setAttribute("mask-type", "alpha");
                        var l = createNS("g");
                        o.appendChild(l),
                        e = createElementID(),
                        i = filtersFactory.createFilter(e);
                        var h = createNS("feComponentTransfer");
                        h.setAttribute("in", "SourceGraphic"),
                        i.appendChild(h);
                        var c = createNS("feFuncA");
                        c.setAttribute("type", "table"),
                        c.setAttribute("tableValues", "1.0 0.0"),
                        h.appendChild(c),
                        this.globalData.defs.appendChild(i);
                        var u = createNS("rect");
                        u.setAttribute("width", this.comp.data.w),
                        u.setAttribute("height", this.comp.data.h),
                        u.setAttribute("x", "0"),
                        u.setAttribute("y", "0"),
                        u.setAttribute("fill", "#ffffff"),
                        u.setAttribute("opacity", "0"),
                        l.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"),
                        l.appendChild(u),
                        (s = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                        l.appendChild(s),
                        featureSupport.maskType || (o.setAttribute("mask-type", "luminance"),
                        i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                        n = createNS("g"),
                        l.appendChild(u),
                        n.appendChild(this.layerElement),
                        l.appendChild(n)),
                        this.globalData.defs.appendChild(o)
                    }
                    this.matteMasks[t] = r
                }
                return this.matteMasks[t]
            },
            setMatte: function(t) {
                this.matteElement && this.matteElement.setAttribute("mask", "url(" + getLocationHref() + "#" + t + ")")
            }
        },
        HierarchyElement.prototype = {
            initHierarchy: function() {
                this.hierarchy = [],
                this._isParent = !1,
                this.checkParenting()
            },
            setHierarchy: function(t) {
                this.hierarchy = t
            },
            setAsParent: function() {
                this._isParent = !0
            },
            checkParenting: function() {
                void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, [])
            }
        },
        extendPrototype([RenderableElement, createProxyFunction({
            initElement: function(t, e, i) {
                this.initFrame(),
                this.initBaseData(t, e, i),
                this.initTransform(t, e, i),
                this.initHierarchy(),
                this.initRenderable(),
                this.initRendererElement(),
                this.createContainerElements(),
                this.createRenderableComponents(),
                this.createContent(),
                this.hide()
            },
            hide: function() {
                this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = "none",
                this.hidden = !0)
            },
            show: function() {
                this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"),
                this.hidden = !1,
                this._isFirstFrame = !0)
            },
            renderFrame: function() {
                this.data.hd || this.hidden || (this.renderTransform(),
                this.renderRenderable(),
                this.renderElement(),
                this.renderInnerContent(),
                this._isFirstFrame && (this._isFirstFrame = !1))
            },
            renderInnerContent: function() {},
            prepareFrame: function(t) {
                this._mdf = !1,
                this.prepareRenderableFrame(t),
                this.prepareProperties(t, this.isInRange),
                this.checkTransparency()
            },
            destroy: function() {
                this.innerElem = null,
                this.destroyBaseElement()
            }
        })], RenderableDOMElement),
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement),
        IImageElement.prototype.createContent = function() {
            var t = this.globalData.getAssetsPath(this.assetData);
            this.innerElem = createNS("image"),
            this.innerElem.setAttribute("width", this.assetData.w + "px"),
            this.innerElem.setAttribute("height", this.assetData.h + "px"),
            this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio),
            this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t),
            this.layerElement.appendChild(this.innerElem)
        }
        ,
        IImageElement.prototype.sourceRectAtTime = function() {
            return this.sourceRect
        }
        ,
        IShapeElement.prototype = {
            addShapeToModifiers: function(t) {
                var e, i = this.shapeModifiers.length;
                for (e = 0; e < i; e += 1)
                    this.shapeModifiers[e].addShape(t)
            },
            isShapeInAnimatedModifiers: function(t) {
                for (var e = this.shapeModifiers.length; 0 < e; )
                    if (this.shapeModifiers[0].isAnimatedWithShape(t))
                        return !0;
                return !1
            },
            renderModifiers: function() {
                if (this.shapeModifiers.length) {
                    var t, e = this.shapes.length;
                    for (t = 0; t < e; t += 1)
                        this.shapes[t].sh.reset();
                    for (t = (e = this.shapeModifiers.length) - 1; t >= 0 && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1)
                        ;
                }
            },
            searchProcessedElement: function(t) {
                for (var e = this.processedElements, i = 0, s = e.length; i < s; ) {
                    if (e[i].elem === t)
                        return e[i].pos;
                    i += 1
                }
                return 0
            },
            addProcessedElement: function(t, e) {
                for (var i = this.processedElements, s = i.length; s; )
                    if (i[s -= 1].elem === t)
                        return void (i[s].pos = e);
                i.push(new ProcessedElement(t,e))
            },
            prepareFrame: function(t) {
                this.prepareRenderableFrame(t),
                this.prepareProperties(t, this.isInRange)
            }
        };
        var lineCapEnum = {
            1: "butt",
            2: "round",
            3: "square"
        }
          , lineJoinEnum = {
            1: "miter",
            2: "round",
            3: "bevel"
        };
        function SVGShapeData(t, e, i) {
            this.caches = [],
            this.styles = [],
            this.transformers = t,
            this.lStr = "",
            this.sh = i,
            this.lvl = e,
            this._isAnimated = !!i.k;
            for (var s = 0, n = t.length; s < n; ) {
                if (t[s].mProps.dynamicProperties.length) {
                    this._isAnimated = !0;
                    break
                }
                s += 1
            }
        }
        function SVGStyleData(t, e) {
            this.data = t,
            this.type = t.ty,
            this.d = "",
            this.lvl = e,
            this._mdf = !1,
            this.closed = !0 === t.hd,
            this.pElem = createNS("path"),
            this.msElem = null
        }
        function DashProperty(t, e, i, s) {
            var n;
            this.elem = t,
            this.frameId = -1,
            this.dataProps = createSizedArray(e.length),
            this.renderer = i,
            this.k = !1,
            this.dashStr = "",
            this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0),
            this.dashoffset = createTypedArray("float32", 1),
            this.initDynamicPropertyContainer(s);
            var r, a = e.length || 0;
            for (n = 0; n < a; n += 1)
                r = PropertyFactory.getProp(t, e[n].v, 0, 0, this),
                this.k = r.k || this.k,
                this.dataProps[n] = {
                    n: e[n].n,
                    p: r
                };
            this.k || this.getValue(!0),
            this._isAnimated = this.k
        }
        function SVGStrokeStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t),
            this.getValue = this.iterateDynamicProperties,
            this.o = PropertyFactory.getProp(t, e.o, 0, .01, this),
            this.w = PropertyFactory.getProp(t, e.w, 0, null, this),
            this.d = new DashProperty(t,e.d || {},"svg",this),
            this.c = PropertyFactory.getProp(t, e.c, 1, 255, this),
            this.style = i,
            this._isAnimated = !!this._isAnimated
        }
        function SVGFillStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t),
            this.getValue = this.iterateDynamicProperties,
            this.o = PropertyFactory.getProp(t, e.o, 0, .01, this),
            this.c = PropertyFactory.getProp(t, e.c, 1, 255, this),
            this.style = i
        }
        function SVGNoStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t),
            this.getValue = this.iterateDynamicProperties,
            this.style = i
        }
        function GradientProperty(t, e, i) {
            this.data = e,
            this.c = createTypedArray("uint8c", 4 * e.p);
            var s = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
            this.o = createTypedArray("float32", s),
            this._cmdf = !1,
            this._omdf = !1,
            this._collapsable = this.checkCollapsable(),
            this._hasOpacity = s,
            this.initDynamicPropertyContainer(i),
            this.prop = PropertyFactory.getProp(t, e.k, 1, null, this),
            this.k = this.prop.k,
            this.getValue(!0)
        }
        function SVGGradientFillStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t),
            this.getValue = this.iterateDynamicProperties,
            this.initGradientData(t, e, i)
        }
        function SVGGradientStrokeStyleData(t, e, i) {
            this.initDynamicPropertyContainer(t),
            this.getValue = this.iterateDynamicProperties,
            this.w = PropertyFactory.getProp(t, e.w, 0, null, this),
            this.d = new DashProperty(t,e.d || {},"svg",this),
            this.initGradientData(t, e, i),
            this._isAnimated = !!this._isAnimated
        }
        function ShapeGroupData() {
            this.it = [],
            this.prevViewData = [],
            this.gr = createNS("g")
        }
        function SVGTransformData(t, e, i) {
            this.transform = {
                mProps: t,
                op: e,
                container: i
            },
            this.elements = [],
            this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length
        }
        SVGShapeData.prototype.setAsAnimated = function() {
            this._isAnimated = !0
        }
        ,
        SVGStyleData.prototype.reset = function() {
            this.d = "",
            this._mdf = !1
        }
        ,
        DashProperty.prototype.getValue = function(t) {
            if ((this.elem.globalData.frameId !== this.frameId || t) && (this.frameId = this.elem.globalData.frameId,
            this.iterateDynamicProperties(),
            this._mdf = this._mdf || t,
            this._mdf)) {
                var e = 0
                  , i = this.dataProps.length;
                for ("svg" === this.renderer && (this.dashStr = ""),
                e = 0; e < i; e += 1)
                    "o" !== this.dataProps[e].n ? "svg" === this.renderer ? this.dashStr += " " + this.dataProps[e].p.v : this.dashArray[e] = this.dataProps[e].p.v : this.dashoffset[0] = this.dataProps[e].p.v
            }
        }
        ,
        extendPrototype([DynamicPropertyContainer], DashProperty),
        extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData),
        extendPrototype([DynamicPropertyContainer], SVGFillStyleData),
        extendPrototype([DynamicPropertyContainer], SVGNoStyleData),
        GradientProperty.prototype.comparePoints = function(t, e) {
            for (var i = 0, s = this.o.length / 2; i < s; ) {
                if (Math.abs(t[4 * i] - t[4 * e + 2 * i]) > .01)
                    return !1;
                i += 1
            }
            return !0
        }
        ,
        GradientProperty.prototype.checkCollapsable = function() {
            if (this.o.length / 2 != this.c.length / 4)
                return !1;
            if (this.data.k.k[0].s)
                for (var t = 0, e = this.data.k.k.length; t < e; ) {
                    if (!this.comparePoints(this.data.k.k[t].s, this.data.p))
                        return !1;
                    t += 1
                }
            else if (!this.comparePoints(this.data.k.k, this.data.p))
                return !1;
            return !0
        }
        ,
        GradientProperty.prototype.getValue = function(t) {
            if (this.prop.getValue(),
            this._mdf = !1,
            this._cmdf = !1,
            this._omdf = !1,
            this.prop._mdf || t) {
                var e, i, s, n = 4 * this.data.p;
                for (e = 0; e < n; e += 1)
                    i = e % 4 == 0 ? 100 : 255,
                    s = Math.round(this.prop.v[e] * i),
                    this.c[e] !== s && (this.c[e] = s,
                    this._cmdf = !t);
                if (this.o.length)
                    for (n = this.prop.v.length,
                    e = 4 * this.data.p; e < n; e += 1)
                        i = e % 2 == 0 ? 100 : 1,
                        s = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e],
                        this.o[e - 4 * this.data.p] !== s && (this.o[e - 4 * this.data.p] = s,
                        this._omdf = !t);
                this._mdf = !t
            }
        }
        ,
        extendPrototype([DynamicPropertyContainer], GradientProperty),
        SVGGradientFillStyleData.prototype.initGradientData = function(t, e, i) {
            this.o = PropertyFactory.getProp(t, e.o, 0, .01, this),
            this.s = PropertyFactory.getProp(t, e.s, 1, null, this),
            this.e = PropertyFactory.getProp(t, e.e, 1, null, this),
            this.h = PropertyFactory.getProp(t, e.h || {
                k: 0
            }, 0, .01, this),
            this.a = PropertyFactory.getProp(t, e.a || {
                k: 0
            }, 0, degToRads, this),
            this.g = new GradientProperty(t,e.g,this),
            this.style = i,
            this.stops = [],
            this.setGradientData(i.pElem, e),
            this.setGradientOpacity(e, i),
            this._isAnimated = !!this._isAnimated
        }
        ,
        SVGGradientFillStyleData.prototype.setGradientData = function(t, e) {
            var i = createElementID()
              , s = createNS(1 === e.t ? "linearGradient" : "radialGradient");
            s.setAttribute("id", i),
            s.setAttribute("spreadMethod", "pad"),
            s.setAttribute("gradientUnits", "userSpaceOnUse");
            var n, r, a, o = [];
            for (a = 4 * e.g.p,
            r = 0; r < a; r += 4)
                n = createNS("stop"),
                s.appendChild(n),
                o.push(n);
            t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + i + ")"),
            this.gf = s,
            this.cst = o
        }
        ,
        SVGGradientFillStyleData.prototype.setGradientOpacity = function(t, e) {
            if (this.g._hasOpacity && !this.g._collapsable) {
                var i, s, n, r = createNS("mask"), a = createNS("path");
                r.appendChild(a);
                var o = createElementID()
                  , l = createElementID();
                r.setAttribute("id", l);
                var h = createNS(1 === t.t ? "linearGradient" : "radialGradient");
                h.setAttribute("id", o),
                h.setAttribute("spreadMethod", "pad"),
                h.setAttribute("gradientUnits", "userSpaceOnUse"),
                n = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length;
                var c = this.stops;
                for (s = 4 * t.g.p; s < n; s += 2)
                    (i = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"),
                    h.appendChild(i),
                    c.push(i);
                a.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + o + ")"),
                "gs" === t.ty && (a.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]),
                a.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]),
                1 === t.lj && a.setAttribute("stroke-miterlimit", t.ml)),
                this.of = h,
                this.ms = r,
                this.ost = c,
                this.maskId = l,
                e.msElem = a
            }
        }
        ,
        extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData),
        extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
        var buildShapeString = function(t, e, i, s) {
            if (0 === e)
                return "";
            var n, r = t.o, a = t.i, o = t.v, l = " M" + s.applyToPointStringified(o[0][0], o[0][1]);
            for (n = 1; n < e; n += 1)
                l += " C" + s.applyToPointStringified(r[n - 1][0], r[n - 1][1]) + " " + s.applyToPointStringified(a[n][0], a[n][1]) + " " + s.applyToPointStringified(o[n][0], o[n][1]);
            return i && e && (l += " C" + s.applyToPointStringified(r[n - 1][0], r[n - 1][1]) + " " + s.applyToPointStringified(a[0][0], a[0][1]) + " " + s.applyToPointStringified(o[0][0], o[0][1]),
            l += "z"),
            l
        }
          , SVGElementsRenderer = function() {
            var t = new Matrix
              , e = new Matrix;
            function i(t, e, i) {
                (i || e.transform.op._mdf) && e.transform.container.setAttribute("opacity", e.transform.op.v),
                (i || e.transform.mProps._mdf) && e.transform.container.setAttribute("transform", e.transform.mProps.v.to2dCSS())
            }
            function s() {}
            function n(i, s, n) {
                var r, a, o, l, h, c, u, p, d, f, m, g = s.styles.length, y = s.lvl;
                for (c = 0; c < g; c += 1) {
                    if (l = s.sh._mdf || n,
                    s.styles[c].lvl < y) {
                        for (p = e.reset(),
                        f = y - s.styles[c].lvl,
                        m = s.transformers.length - 1; !l && f > 0; )
                            l = s.transformers[m].mProps._mdf || l,
                            f -= 1,
                            m -= 1;
                        if (l)
                            for (f = y - s.styles[c].lvl,
                            m = s.transformers.length - 1; f > 0; )
                                d = s.transformers[m].mProps.v.props,
                                p.transform(d[0], d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8], d[9], d[10], d[11], d[12], d[13], d[14], d[15]),
                                f -= 1,
                                m -= 1
                    } else
                        p = t;
                    if (a = (u = s.sh.paths)._length,
                    l) {
                        for (o = "",
                        r = 0; r < a; r += 1)
                            (h = u.shapes[r]) && h._length && (o += buildShapeString(h, h._length, h.c, p));
                        s.caches[c] = o
                    } else
                        o = s.caches[c];
                    s.styles[c].d += !0 === i.hd ? "" : o,
                    s.styles[c]._mdf = l || s.styles[c]._mdf
                }
            }
            function r(t, e, i) {
                var s = e.style;
                (e.c._mdf || i) && s.pElem.setAttribute("fill", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                (e.o._mdf || i) && s.pElem.setAttribute("fill-opacity", e.o.v)
            }
            function a(t, e, i) {
                o(t, e, i),
                l(t, e, i)
            }
            function o(t, e, i) {
                var s, n, r, a, o, l = e.gf, h = e.g._hasOpacity, c = e.s.v, u = e.e.v;
                if (e.o._mdf || i) {
                    var p = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
                    e.style.pElem.setAttribute(p, e.o.v)
                }
                if (e.s._mdf || i) {
                    var d = 1 === t.t ? "x1" : "cx"
                      , f = "x1" === d ? "y1" : "cy";
                    l.setAttribute(d, c[0]),
                    l.setAttribute(f, c[1]),
                    h && !e.g._collapsable && (e.of.setAttribute(d, c[0]),
                    e.of.setAttribute(f, c[1]))
                }
                if (e.g._cmdf || i) {
                    s = e.cst;
                    var m = e.g.c;
                    for (r = s.length,
                    n = 0; n < r; n += 1)
                        (a = s[n]).setAttribute("offset", m[4 * n] + "%"),
                        a.setAttribute("stop-color", "rgb(" + m[4 * n + 1] + "," + m[4 * n + 2] + "," + m[4 * n + 3] + ")")
                }
                if (h && (e.g._omdf || i)) {
                    var g = e.g.o;
                    for (r = (s = e.g._collapsable ? e.cst : e.ost).length,
                    n = 0; n < r; n += 1)
                        a = s[n],
                        e.g._collapsable || a.setAttribute("offset", g[2 * n] + "%"),
                        a.setAttribute("stop-opacity", g[2 * n + 1])
                }
                if (1 === t.t)
                    (e.e._mdf || i) && (l.setAttribute("x2", u[0]),
                    l.setAttribute("y2", u[1]),
                    h && !e.g._collapsable && (e.of.setAttribute("x2", u[0]),
                    e.of.setAttribute("y2", u[1])));
                else if ((e.s._mdf || e.e._mdf || i) && (o = Math.sqrt(Math.pow(c[0] - u[0], 2) + Math.pow(c[1] - u[1], 2)),
                l.setAttribute("r", o),
                h && !e.g._collapsable && e.of.setAttribute("r", o)),
                e.e._mdf || e.h._mdf || e.a._mdf || i) {
                    o || (o = Math.sqrt(Math.pow(c[0] - u[0], 2) + Math.pow(c[1] - u[1], 2)));
                    var y = Math.atan2(u[1] - c[1], u[0] - c[0])
                      , v = e.h.v;
                    v >= 1 ? v = .99 : v <= -1 && (v = -.99);
                    var b = o * v
                      , w = Math.cos(y + e.a.v) * b + c[0]
                      , S = Math.sin(y + e.a.v) * b + c[1];
                    l.setAttribute("fx", w),
                    l.setAttribute("fy", S),
                    h && !e.g._collapsable && (e.of.setAttribute("fx", w),
                    e.of.setAttribute("fy", S))
                }
            }
            function l(t, e, i) {
                var s = e.style
                  , n = e.d;
                n && (n._mdf || i) && n.dashStr && (s.pElem.setAttribute("stroke-dasharray", n.dashStr),
                s.pElem.setAttribute("stroke-dashoffset", n.dashoffset[0])),
                e.c && (e.c._mdf || i) && s.pElem.setAttribute("stroke", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                (e.o._mdf || i) && s.pElem.setAttribute("stroke-opacity", e.o.v),
                (e.w._mdf || i) && (s.pElem.setAttribute("stroke-width", e.w.v),
                s.msElem && s.msElem.setAttribute("stroke-width", e.w.v))
            }
            return {
                createRenderFunction: function(t) {
                    switch (t.ty) {
                    case "fl":
                        return r;
                    case "gf":
                        return o;
                    case "gs":
                        return a;
                    case "st":
                        return l;
                    case "sh":
                    case "el":
                    case "rc":
                    case "sr":
                        return n;
                    case "tr":
                        return i;
                    case "no":
                        return s;
                    default:
                        return null
                    }
                }
            }
        }();
        function SVGShapeElement(t, e, i) {
            this.shapes = [],
            this.shapesData = t.shapes,
            this.stylesList = [],
            this.shapeModifiers = [],
            this.itemsData = [],
            this.processedElements = [],
            this.animatedContents = [],
            this.initElement(t, e, i),
            this.prevViewData = []
        }
        function LetterProps(t, e, i, s, n, r) {
            this.o = t,
            this.sw = e,
            this.sc = i,
            this.fc = s,
            this.m = n,
            this.p = r,
            this._mdf = {
                o: !0,
                sw: !!e,
                sc: !!i,
                fc: !!s,
                m: !0,
                p: !0
            }
        }
        function TextProperty(t, e) {
            this._frameId = initialDefaultFrame,
            this.pv = "",
            this.v = "",
            this.kf = !1,
            this._isFirstFrame = !0,
            this._mdf = !1,
            this.data = e,
            this.elem = t,
            this.comp = this.elem.comp,
            this.keysIndex = 0,
            this.canResize = !1,
            this.minimumFontSize = 1,
            this.effectsSequence = [],
            this.currentData = {
                ascent: 0,
                boxWidth: this.defaultBoxWidth,
                f: "",
                fStyle: "",
                fWeight: "",
                fc: "",
                j: "",
                justifyOffset: "",
                l: [],
                lh: 0,
                lineWidths: [],
                ls: "",
                of: "",
                s: "",
                sc: "",
                sw: 0,
                t: 0,
                tr: 0,
                sz: 0,
                ps: null,
                fillColorAnim: !1,
                strokeColorAnim: !1,
                strokeWidthAnim: !1,
                yOffset: 0,
                finalSize: 0,
                finalText: [],
                finalLineHeight: 0,
                __complete: !1
            },
            this.copyData(this.currentData, this.data.d.k[0].s),
            this.searchProperty() || this.completeTextData(this.currentData)
        }
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement),
        SVGShapeElement.prototype.initSecondaryElement = function() {}
        ,
        SVGShapeElement.prototype.identityMatrix = new Matrix,
        SVGShapeElement.prototype.buildExpressionInterface = function() {}
        ,
        SVGShapeElement.prototype.createContent = function() {
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
            this.filterUniqueShapes()
        }
        ,
        SVGShapeElement.prototype.filterUniqueShapes = function() {
            var t, e, i, s, n = this.shapes.length, r = this.stylesList.length, a = [], o = !1;
            for (i = 0; i < r; i += 1) {
                for (s = this.stylesList[i],
                o = !1,
                a.length = 0,
                t = 0; t < n; t += 1)
                    -1 !== (e = this.shapes[t]).styles.indexOf(s) && (a.push(e),
                    o = e._isAnimated || o);
                a.length > 1 && o && this.setShapesAsAnimated(a)
            }
        }
        ,
        SVGShapeElement.prototype.setShapesAsAnimated = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
                t[e].setAsAnimated()
        }
        ,
        SVGShapeElement.prototype.createStyleElement = function(t, e) {
            var i, s = new SVGStyleData(t,e), n = s.pElem;
            if ("st" === t.ty)
                i = new SVGStrokeStyleData(this,t,s);
            else if ("fl" === t.ty)
                i = new SVGFillStyleData(this,t,s);
            else if ("gf" === t.ty || "gs" === t.ty) {
                i = new ("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this,t,s),
                this.globalData.defs.appendChild(i.gf),
                i.maskId && (this.globalData.defs.appendChild(i.ms),
                this.globalData.defs.appendChild(i.of),
                n.setAttribute("mask", "url(" + getLocationHref() + "#" + i.maskId + ")"))
            } else
                "no" === t.ty && (i = new SVGNoStyleData(this,t,s));
            return "st" !== t.ty && "gs" !== t.ty || (n.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]),
            n.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]),
            n.setAttribute("fill-opacity", "0"),
            1 === t.lj && n.setAttribute("stroke-miterlimit", t.ml)),
            2 === t.r && n.setAttribute("fill-rule", "evenodd"),
            t.ln && n.setAttribute("id", t.ln),
            t.cl && n.setAttribute("class", t.cl),
            t.bm && (n.style["mix-blend-mode"] = getBlendMode(t.bm)),
            this.stylesList.push(s),
            this.addToAnimatedContents(t, i),
            i
        }
        ,
        SVGShapeElement.prototype.createGroupElement = function(t) {
            var e = new ShapeGroupData;
            return t.ln && e.gr.setAttribute("id", t.ln),
            t.cl && e.gr.setAttribute("class", t.cl),
            t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)),
            e
        }
        ,
        SVGShapeElement.prototype.createTransformElement = function(t, e) {
            var i = TransformPropertyFactory.getTransformProperty(this, t, this)
              , s = new SVGTransformData(i,i.o,e);
            return this.addToAnimatedContents(t, s),
            s
        }
        ,
        SVGShapeElement.prototype.createShapeElement = function(t, e, i) {
            var s = 4;
            "rc" === t.ty ? s = 5 : "el" === t.ty ? s = 6 : "sr" === t.ty && (s = 7);
            var n = new SVGShapeData(e,i,ShapePropertyFactory.getShapeProp(this, t, s, this));
            return this.shapes.push(n),
            this.addShapeToModifiers(n),
            this.addToAnimatedContents(t, n),
            n
        }
        ,
        SVGShapeElement.prototype.addToAnimatedContents = function(t, e) {
            for (var i = 0, s = this.animatedContents.length; i < s; ) {
                if (this.animatedContents[i].element === e)
                    return;
                i += 1
            }
            this.animatedContents.push({
                fn: SVGElementsRenderer.createRenderFunction(t),
                element: e,
                data: t
            })
        }
        ,
        SVGShapeElement.prototype.setElementStyles = function(t) {
            var e, i = t.styles, s = this.stylesList.length;
            for (e = 0; e < s; e += 1)
                this.stylesList[e].closed || i.push(this.stylesList[e])
        }
        ,
        SVGShapeElement.prototype.reloadShapes = function() {
            var t;
            this._isFirstFrame = !0;
            var e = this.itemsData.length;
            for (t = 0; t < e; t += 1)
                this.prevViewData[t] = this.itemsData[t];
            for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
            this.filterUniqueShapes(),
            e = this.dynamicProperties.length,
            t = 0; t < e; t += 1)
                this.dynamicProperties[t].getValue();
            this.renderModifiers()
        }
        ,
        SVGShapeElement.prototype.searchShapes = function(t, e, i, s, n, r, a) {
            var o, l, h, c, u, p, d = [].concat(r), f = t.length - 1, m = [], g = [];
            for (o = f; o >= 0; o -= 1) {
                if ((p = this.searchProcessedElement(t[o])) ? e[o] = i[p - 1] : t[o]._render = a,
                "fl" === t[o].ty || "st" === t[o].ty || "gf" === t[o].ty || "gs" === t[o].ty || "no" === t[o].ty)
                    p ? e[o].style.closed = !1 : e[o] = this.createStyleElement(t[o], n),
                    t[o]._render && e[o].style.pElem.parentNode !== s && s.appendChild(e[o].style.pElem),
                    m.push(e[o].style);
                else if ("gr" === t[o].ty) {
                    if (p)
                        for (h = e[o].it.length,
                        l = 0; l < h; l += 1)
                            e[o].prevViewData[l] = e[o].it[l];
                    else
                        e[o] = this.createGroupElement(t[o]);
                    this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, n + 1, d, a),
                    t[o]._render && e[o].gr.parentNode !== s && s.appendChild(e[o].gr)
                } else
                    "tr" === t[o].ty ? (p || (e[o] = this.createTransformElement(t[o], s)),
                    c = e[o].transform,
                    d.push(c)) : "sh" === t[o].ty || "rc" === t[o].ty || "el" === t[o].ty || "sr" === t[o].ty ? (p || (e[o] = this.createShapeElement(t[o], d, n)),
                    this.setElementStyles(e[o])) : "tm" === t[o].ty || "rd" === t[o].ty || "ms" === t[o].ty || "pb" === t[o].ty || "zz" === t[o].ty || "op" === t[o].ty ? (p ? (u = e[o]).closed = !1 : ((u = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]),
                    e[o] = u,
                    this.shapeModifiers.push(u)),
                    g.push(u)) : "rp" === t[o].ty && (p ? (u = e[o]).closed = !0 : (u = ShapeModifiers.getModifier(t[o].ty),
                    e[o] = u,
                    u.init(this, t, o, e),
                    this.shapeModifiers.push(u),
                    a = !1),
                    g.push(u));
                this.addProcessedElement(t[o], o + 1)
            }
            for (f = m.length,
            o = 0; o < f; o += 1)
                m[o].closed = !0;
            for (f = g.length,
            o = 0; o < f; o += 1)
                g[o].closed = !0
        }
        ,
        SVGShapeElement.prototype.renderInnerContent = function() {
            var t;
            this.renderModifiers();
            var e = this.stylesList.length;
            for (t = 0; t < e; t += 1)
                this.stylesList[t].reset();
            for (this.renderShape(),
            t = 0; t < e; t += 1)
                (this.stylesList[t]._mdf || this._isFirstFrame) && (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d),
                this.stylesList[t].d = "M0 0" + this.stylesList[t].d),
                this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"))
        }
        ,
        SVGShapeElement.prototype.renderShape = function() {
            var t, e, i = this.animatedContents.length;
            for (t = 0; t < i; t += 1)
                e = this.animatedContents[t],
                (this._isFirstFrame || e.element._isAnimated) && !0 !== e.data && e.fn(e.data, e.element, this._isFirstFrame)
        }
        ,
        SVGShapeElement.prototype.destroy = function() {
            this.destroyBaseElement(),
            this.shapesData = null,
            this.itemsData = null
        }
        ,
        LetterProps.prototype.update = function(t, e, i, s, n, r) {
            this._mdf.o = !1,
            this._mdf.sw = !1,
            this._mdf.sc = !1,
            this._mdf.fc = !1,
            this._mdf.m = !1,
            this._mdf.p = !1;
            var a = !1;
            return this.o !== t && (this.o = t,
            this._mdf.o = !0,
            a = !0),
            this.sw !== e && (this.sw = e,
            this._mdf.sw = !0,
            a = !0),
            this.sc !== i && (this.sc = i,
            this._mdf.sc = !0,
            a = !0),
            this.fc !== s && (this.fc = s,
            this._mdf.fc = !0,
            a = !0),
            this.m !== n && (this.m = n,
            this._mdf.m = !0,
            a = !0),
            !r.length || this.p[0] === r[0] && this.p[1] === r[1] && this.p[4] === r[4] && this.p[5] === r[5] && this.p[12] === r[12] && this.p[13] === r[13] || (this.p = r,
            this._mdf.p = !0,
            a = !0),
            a
        }
        ,
        TextProperty.prototype.defaultBoxWidth = [0, 0],
        TextProperty.prototype.copyData = function(t, e) {
            for (var i in e)
                Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t
        }
        ,
        TextProperty.prototype.setCurrentData = function(t) {
            t.__complete || this.completeTextData(t),
            this.currentData = t,
            this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth,
            this._mdf = !0
        }
        ,
        TextProperty.prototype.searchProperty = function() {
            return this.searchKeyframes()
        }
        ,
        TextProperty.prototype.searchKeyframes = function() {
            return this.kf = this.data.d.k.length > 1,
            this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
            this.kf
        }
        ,
        TextProperty.prototype.addEffect = function(t) {
            this.effectsSequence.push(t),
            this.elem.addDynamicProperty(this)
        }
        ,
        TextProperty.prototype.getValue = function(t) {
            if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || t) {
                this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                var e = this.currentData
                  , i = this.keysIndex;
                if (this.lock)
                    this.setCurrentData(this.currentData);
                else {
                    var s;
                    this.lock = !0,
                    this._mdf = !1;
                    var n = this.effectsSequence.length
                      , r = t || this.data.d.k[this.keysIndex].s;
                    for (s = 0; s < n; s += 1)
                        r = i !== this.keysIndex ? this.effectsSequence[s](r, r.t) : this.effectsSequence[s](this.currentData, r.t);
                    e !== r && this.setCurrentData(r),
                    this.v = this.currentData,
                    this.pv = this.v,
                    this.lock = !1,
                    this.frameId = this.elem.globalData.frameId
                }
            }
        }
        ,
        TextProperty.prototype.getKeyframeValue = function() {
            for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, i = 0, s = t.length; i <= s - 1 && !(i === s - 1 || t[i + 1].t > e); )
                i += 1;
            return this.keysIndex !== i && (this.keysIndex = i),
            this.data.d.k[this.keysIndex].s
        }
        ,
        TextProperty.prototype.buildFinalText = function(t) {
            for (var e, i, s = [], n = 0, r = t.length, a = !1; n < r; )
                e = t.charCodeAt(n),
                FontManager.isCombinedCharacter(e) ? s[s.length - 1] += t.charAt(n) : e >= 55296 && e <= 56319 ? (i = t.charCodeAt(n + 1)) >= 56320 && i <= 57343 ? (a || FontManager.isModifier(e, i) ? (s[s.length - 1] += t.substr(n, 2),
                a = !1) : s.push(t.substr(n, 2)),
                n += 1) : s.push(t.charAt(n)) : e > 56319 ? (i = t.charCodeAt(n + 1),
                FontManager.isZeroWidthJoiner(e, i) ? (a = !0,
                s[s.length - 1] += t.substr(n, 2),
                n += 1) : s.push(t.charAt(n))) : FontManager.isZeroWidthJoiner(e) ? (s[s.length - 1] += t.charAt(n),
                a = !0) : s.push(t.charAt(n)),
                n += 1;
            return s
        }
        ,
        TextProperty.prototype.completeTextData = function(t) {
            t.__complete = !0;
            var e, i, s, n, r, a, o, l = this.elem.globalData.fontManager, h = this.data, c = [], u = 0, p = h.m.g, d = 0, f = 0, m = 0, g = [], y = 0, v = 0, b = l.getFontByName(t.f), w = 0, S = getFontProperties(b);
            t.fWeight = S.weight,
            t.fStyle = S.style,
            t.finalSize = t.s,
            t.finalText = this.buildFinalText(t.t),
            i = t.finalText.length,
            t.finalLineHeight = t.lh;
            var E, P = t.tr / 1e3 * t.finalSize;
            if (t.sz)
                for (var k, x, C = !0, A = t.sz[0], T = t.sz[1]; C; ) {
                    k = 0,
                    y = 0,
                    i = (x = this.buildFinalText(t.t)).length,
                    P = t.tr / 1e3 * t.finalSize;
                    var _ = -1;
                    for (e = 0; e < i; e += 1)
                        E = x[e].charCodeAt(0),
                        s = !1,
                        " " === x[e] ? _ = e : 13 !== E && 3 !== E || (y = 0,
                        s = !0,
                        k += t.finalLineHeight || 1.2 * t.finalSize),
                        l.chars ? (o = l.getCharData(x[e], b.fStyle, b.fFamily),
                        w = s ? 0 : o.w * t.finalSize / 100) : w = l.measureText(x[e], t.f, t.finalSize),
                        y + w > A && " " !== x[e] ? (-1 === _ ? i += 1 : e = _,
                        k += t.finalLineHeight || 1.2 * t.finalSize,
                        x.splice(e, _ === e ? 1 : 0, "\r"),
                        _ = -1,
                        y = 0) : (y += w,
                        y += P);
                    k += b.ascent * t.finalSize / 100,
                    this.canResize && t.finalSize > this.minimumFontSize && T < k ? (t.finalSize -= 1,
                    t.finalLineHeight = t.finalSize * t.lh / t.s) : (t.finalText = x,
                    i = t.finalText.length,
                    C = !1)
                }
            y = -P,
            w = 0;
            var M, D = 0;
            for (e = 0; e < i; e += 1)
                if (s = !1,
                13 === (E = (M = t.finalText[e]).charCodeAt(0)) || 3 === E ? (D = 0,
                g.push(y),
                v = y > v ? y : v,
                y = -2 * P,
                n = "",
                s = !0,
                m += 1) : n = M,
                l.chars ? (o = l.getCharData(M, b.fStyle, l.getFontByName(t.f).fFamily),
                w = s ? 0 : o.w * t.finalSize / 100) : w = l.measureText(n, t.f, t.finalSize),
                " " === M ? D += w + P : (y += w + P + D,
                D = 0),
                c.push({
                    l: w,
                    an: w,
                    add: d,
                    n: s,
                    anIndexes: [],
                    val: n,
                    line: m,
                    animatorJustifyOffset: 0
                }),
                2 == p) {
                    if (d += w,
                    "" === n || " " === n || e === i - 1) {
                        for ("" !== n && " " !== n || (d -= w); f <= e; )
                            c[f].an = d,
                            c[f].ind = u,
                            c[f].extra = w,
                            f += 1;
                        u += 1,
                        d = 0
                    }
                } else if (3 == p) {
                    if (d += w,
                    "" === n || e === i - 1) {
                        for ("" === n && (d -= w); f <= e; )
                            c[f].an = d,
                            c[f].ind = u,
                            c[f].extra = w,
                            f += 1;
                        d = 0,
                        u += 1
                    }
                } else
                    c[u].ind = u,
                    c[u].extra = 0,
                    u += 1;
            if (t.l = c,
            v = y > v ? y : v,
            g.push(y),
            t.sz)
                t.boxWidth = t.sz[0],
                t.justifyOffset = 0;
            else
                switch (t.boxWidth = v,
                t.j) {
                case 1:
                    t.justifyOffset = -t.boxWidth;
                    break;
                case 2:
                    t.justifyOffset = -t.boxWidth / 2;
                    break;
                default:
                    t.justifyOffset = 0
                }
            t.lineWidths = g;
            var I, F, L, B, V = h.a;
            a = V.length;
            var R = [];
            for (r = 0; r < a; r += 1) {
                for ((I = V[r]).a.sc && (t.strokeColorAnim = !0),
                I.a.sw && (t.strokeWidthAnim = !0),
                (I.a.fc || I.a.fh || I.a.fs || I.a.fb) && (t.fillColorAnim = !0),
                B = 0,
                L = I.s.b,
                e = 0; e < i; e += 1)
                    (F = c[e]).anIndexes[r] = B,
                    (1 == L && "" !== F.val || 2 == L && "" !== F.val && " " !== F.val || 3 == L && (F.n || " " == F.val || e == i - 1) || 4 == L && (F.n || e == i - 1)) && (1 === I.s.rn && R.push(B),
                    B += 1);
                h.a[r].s.totalChars = B;
                var N, O = -1;
                if (1 === I.s.rn)
                    for (e = 0; e < i; e += 1)
                        O != (F = c[e]).anIndexes[r] && (O = F.anIndexes[r],
                        N = R.splice(Math.floor(Math.random() * R.length), 1)[0]),
                        F.anIndexes[r] = N
            }
            t.yOffset = t.finalLineHeight || 1.2 * t.finalSize,
            t.ls = t.ls || 0,
            t.ascent = b.ascent * t.finalSize / 100
        }
        ,
        TextProperty.prototype.updateDocumentData = function(t, e) {
            e = void 0 === e ? this.keysIndex : e;
            var i = this.copyData({}, this.data.d.k[e].s);
            i = this.copyData(i, t),
            this.data.d.k[e].s = i,
            this.recalculate(e),
            this.elem.addDynamicProperty(this)
        }
        ,
        TextProperty.prototype.recalculate = function(t) {
            var e = this.data.d.k[t].s;
            e.__complete = !1,
            this.keysIndex = 0,
            this._isFirstFrame = !0,
            this.getValue(e)
        }
        ,
        TextProperty.prototype.canResizeFont = function(t) {
            this.canResize = t,
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this)
        }
        ,
        TextProperty.prototype.setMinimumFontSize = function(t) {
            this.minimumFontSize = Math.floor(t) || 1,
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this)
        }
        ;
        var TextSelectorProp = function() {
            var t = Math.max
              , e = Math.min
              , i = Math.floor;
            function s(t, e) {
                this._currentTextLength = -1,
                this.k = !1,
                this.data = e,
                this.elem = t,
                this.comp = t.comp,
                this.finalS = 0,
                this.finalE = 0,
                this.initDynamicPropertyContainer(t),
                this.s = PropertyFactory.getProp(t, e.s || {
                    k: 0
                }, 0, 0, this),
                this.e = "e"in e ? PropertyFactory.getProp(t, e.e, 0, 0, this) : {
                    v: 100
                },
                this.o = PropertyFactory.getProp(t, e.o || {
                    k: 0
                }, 0, 0, this),
                this.xe = PropertyFactory.getProp(t, e.xe || {
                    k: 0
                }, 0, 0, this),
                this.ne = PropertyFactory.getProp(t, e.ne || {
                    k: 0
                }, 0, 0, this),
                this.sm = PropertyFactory.getProp(t, e.sm || {
                    k: 100
                }, 0, 0, this),
                this.a = PropertyFactory.getProp(t, e.a, 0, .01, this),
                this.dynamicProperties.length || this.getValue()
            }
            return s.prototype = {
                getMult: function(s) {
                    this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                    var n = 0
                      , r = 0
                      , a = 1
                      , o = 1;
                    this.ne.v > 0 ? n = this.ne.v / 100 : r = -this.ne.v / 100,
                    this.xe.v > 0 ? a = 1 - this.xe.v / 100 : o = 1 + this.xe.v / 100;
                    var l = BezierFactory.getBezierEasing(n, r, a, o).get
                      , h = 0
                      , c = this.finalS
                      , u = this.finalE
                      , p = this.data.sh;
                    if (2 === p)
                        h = l(h = u === c ? s >= u ? 1 : 0 : t(0, e(.5 / (u - c) + (s - c) / (u - c), 1)));
                    else if (3 === p)
                        h = l(h = u === c ? s >= u ? 0 : 1 : 1 - t(0, e(.5 / (u - c) + (s - c) / (u - c), 1)));
                    else if (4 === p)
                        u === c ? h = 0 : (h = t(0, e(.5 / (u - c) + (s - c) / (u - c), 1))) < .5 ? h *= 2 : h = 1 - 2 * (h - .5),
                        h = l(h);
                    else if (5 === p) {
                        if (u === c)
                            h = 0;
                        else {
                            var d = u - c
                              , f = -d / 2 + (s = e(t(0, s + .5 - c), u - c))
                              , m = d / 2;
                            h = Math.sqrt(1 - f * f / (m * m))
                        }
                        h = l(h)
                    } else
                        6 === p ? (u === c ? h = 0 : (s = e(t(0, s + .5 - c), u - c),
                        h = (1 + Math.cos(Math.PI + 2 * Math.PI * s / (u - c))) / 2),
                        h = l(h)) : (s >= i(c) && (h = t(0, e(s - c < 0 ? e(u, 1) - (c - s) : u - s, 1))),
                        h = l(h));
                    if (100 !== this.sm.v) {
                        var g = .01 * this.sm.v;
                        0 === g && (g = 1e-8);
                        var y = .5 - .5 * g;
                        h < y ? h = 0 : (h = (h - y) / g) > 1 && (h = 1)
                    }
                    return h * this.a.v
                },
                getValue: function(t) {
                    this.iterateDynamicProperties(),
                    this._mdf = t || this._mdf,
                    this._currentTextLength = this.elem.textProperty.currentData.l.length || 0,
                    t && 2 === this.data.r && (this.e.v = this._currentTextLength);
                    var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars
                      , i = this.o.v / e
                      , s = this.s.v / e + i
                      , n = this.e.v / e + i;
                    if (s > n) {
                        var r = s;
                        s = n,
                        n = r
                    }
                    this.finalS = s,
                    this.finalE = n
                }
            },
            extendPrototype([DynamicPropertyContainer], s),
            {
                getTextSelectorProp: function(t, e, i) {
                    return new s(t,e,i)
                }
            }
        }();
        function TextAnimatorDataProperty(t, e, i) {
            var s = {
                propType: !1
            }
              , n = PropertyFactory.getProp
              , r = e.a;
            this.a = {
                r: r.r ? n(t, r.r, 0, degToRads, i) : s,
                rx: r.rx ? n(t, r.rx, 0, degToRads, i) : s,
                ry: r.ry ? n(t, r.ry, 0, degToRads, i) : s,
                sk: r.sk ? n(t, r.sk, 0, degToRads, i) : s,
                sa: r.sa ? n(t, r.sa, 0, degToRads, i) : s,
                s: r.s ? n(t, r.s, 1, .01, i) : s,
                a: r.a ? n(t, r.a, 1, 0, i) : s,
                o: r.o ? n(t, r.o, 0, .01, i) : s,
                p: r.p ? n(t, r.p, 1, 0, i) : s,
                sw: r.sw ? n(t, r.sw, 0, 0, i) : s,
                sc: r.sc ? n(t, r.sc, 1, 0, i) : s,
                fc: r.fc ? n(t, r.fc, 1, 0, i) : s,
                fh: r.fh ? n(t, r.fh, 0, 0, i) : s,
                fs: r.fs ? n(t, r.fs, 0, .01, i) : s,
                fb: r.fb ? n(t, r.fb, 0, .01, i) : s,
                t: r.t ? n(t, r.t, 0, 0, i) : s
            },
            this.s = TextSelectorProp.getTextSelectorProp(t, e.s, i),
            this.s.t = e.s.t
        }
        function TextAnimatorProperty(t, e, i) {
            this._isFirstFrame = !0,
            this._hasMaskedPath = !1,
            this._frameId = -1,
            this._textData = t,
            this._renderType = e,
            this._elem = i,
            this._animatorsData = createSizedArray(this._textData.a.length),
            this._pathData = {},
            this._moreOptions = {
                alignment: {}
            },
            this.renderedLetters = [],
            this.lettersChangedFlag = !1,
            this.initDynamicPropertyContainer(i)
        }
        function ITextElement() {}
        TextAnimatorProperty.prototype.searchProperties = function() {
            var t, e, i = this._textData.a.length, s = PropertyFactory.getProp;
            for (t = 0; t < i; t += 1)
                e = this._textData.a[t],
                this._animatorsData[t] = new TextAnimatorDataProperty(this._elem,e,this);
            this._textData.p && "m"in this._textData.p ? (this._pathData = {
                a: s(this._elem, this._textData.p.a, 0, 0, this),
                f: s(this._elem, this._textData.p.f, 0, 0, this),
                l: s(this._elem, this._textData.p.l, 0, 0, this),
                r: s(this._elem, this._textData.p.r, 0, 0, this),
                p: s(this._elem, this._textData.p.p, 0, 0, this),
                m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
            },
            this._hasMaskedPath = !0) : this._hasMaskedPath = !1,
            this._moreOptions.alignment = s(this._elem, this._textData.m.a, 1, 0, this)
        }
        ,
        TextAnimatorProperty.prototype.getMeasures = function(t, e) {
            if (this.lettersChangedFlag = e,
            this._mdf || this._isFirstFrame || e || this._hasMaskedPath && this._pathData.m._mdf) {
                this._isFirstFrame = !1;
                var i, s, n, r, a, o, l, h, c, u, p, d, f, m, g, y, v, b, w, S = this._moreOptions.alignment.v, E = this._animatorsData, P = this._textData, k = this.mHelper, x = this._renderType, C = this.renderedLetters.length, A = t.l;
                if (this._hasMaskedPath) {
                    if (w = this._pathData.m,
                    !this._pathData.n || this._pathData._mdf) {
                        var T, _ = w.v;
                        for (this._pathData.r.v && (_ = _.reverse()),
                        a = {
                            tLength: 0,
                            segments: []
                        },
                        r = _._length - 1,
                        y = 0,
                        n = 0; n < r; n += 1)
                            T = bez.buildBezierData(_.v[n], _.v[n + 1], [_.o[n][0] - _.v[n][0], _.o[n][1] - _.v[n][1]], [_.i[n + 1][0] - _.v[n + 1][0], _.i[n + 1][1] - _.v[n + 1][1]]),
                            a.tLength += T.segmentLength,
                            a.segments.push(T),
                            y += T.segmentLength;
                        n = r,
                        w.v.c && (T = bez.buildBezierData(_.v[n], _.v[0], [_.o[n][0] - _.v[n][0], _.o[n][1] - _.v[n][1]], [_.i[0][0] - _.v[0][0], _.i[0][1] - _.v[0][1]]),
                        a.tLength += T.segmentLength,
                        a.segments.push(T),
                        y += T.segmentLength),
                        this._pathData.pi = a
                    }
                    if (a = this._pathData.pi,
                    o = this._pathData.f.v,
                    p = 0,
                    u = 1,
                    h = 0,
                    c = !0,
                    m = a.segments,
                    o < 0 && w.v.c)
                        for (a.tLength < Math.abs(o) && (o = -Math.abs(o) % a.tLength),
                        u = (f = m[p = m.length - 1].points).length - 1; o < 0; )
                            o += f[u].partialLength,
                            (u -= 1) < 0 && (u = (f = m[p -= 1].points).length - 1);
                    d = (f = m[p].points)[u - 1],
                    g = (l = f[u]).partialLength
                }
                r = A.length,
                i = 0,
                s = 0;
                var M, D, I, F, L, B = 1.2 * t.finalSize * .714, V = !0;
                I = E.length;
                var R, N, O, q, z, H, G, j, W, $, U, Y, X = -1, J = o, K = p, Q = u, Z = -1, tt = "", et = this.defaultPropsArray;
                if (2 === t.j || 1 === t.j) {
                    var it = 0
                      , st = 0
                      , nt = 2 === t.j ? -.5 : -1
                      , rt = 0
                      , at = !0;
                    for (n = 0; n < r; n += 1)
                        if (A[n].n) {
                            for (it && (it += st); rt < n; )
                                A[rt].animatorJustifyOffset = it,
                                rt += 1;
                            it = 0,
                            at = !0
                        } else {
                            for (D = 0; D < I; D += 1)
                                (M = E[D].a).t.propType && (at && 2 === t.j && (st += M.t.v * nt),
                                (L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars)).length ? it += M.t.v * L[0] * nt : it += M.t.v * L * nt);
                            at = !1
                        }
                    for (it && (it += st); rt < n; )
                        A[rt].animatorJustifyOffset = it,
                        rt += 1
                }
                for (n = 0; n < r; n += 1) {
                    if (k.reset(),
                    q = 1,
                    A[n].n)
                        i = 0,
                        s += t.yOffset,
                        s += V ? 1 : 0,
                        o = J,
                        V = !1,
                        this._hasMaskedPath && (u = Q,
                        d = (f = m[p = K].points)[u - 1],
                        g = (l = f[u]).partialLength,
                        h = 0),
                        tt = "",
                        U = "",
                        W = "",
                        Y = "",
                        et = this.defaultPropsArray;
                    else {
                        if (this._hasMaskedPath) {
                            if (Z !== A[n].line) {
                                switch (t.j) {
                                case 1:
                                    o += y - t.lineWidths[A[n].line];
                                    break;
                                case 2:
                                    o += (y - t.lineWidths[A[n].line]) / 2
                                }
                                Z = A[n].line
                            }
                            X !== A[n].ind && (A[X] && (o += A[X].extra),
                            o += A[n].an / 2,
                            X = A[n].ind),
                            o += S[0] * A[n].an * .005;
                            var ot = 0;
                            for (D = 0; D < I; D += 1)
                                (M = E[D].a).p.propType && ((L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars)).length ? ot += M.p.v[0] * L[0] : ot += M.p.v[0] * L),
                                M.a.propType && ((L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars)).length ? ot += M.a.v[0] * L[0] : ot += M.a.v[0] * L);
                            for (c = !0,
                            this._pathData.a.v && (o = .5 * A[0].an + (y - this._pathData.f.v - .5 * A[0].an - .5 * A[A.length - 1].an) * X / (r - 1),
                            o += this._pathData.f.v); c; )
                                h + g >= o + ot || !f ? (v = (o + ot - h) / l.partialLength,
                                N = d.point[0] + (l.point[0] - d.point[0]) * v,
                                O = d.point[1] + (l.point[1] - d.point[1]) * v,
                                k.translate(-S[0] * A[n].an * .005, -S[1] * B * .01),
                                c = !1) : f && (h += l.partialLength,
                                (u += 1) >= f.length && (u = 0,
                                m[p += 1] ? f = m[p].points : w.v.c ? (u = 0,
                                f = m[p = 0].points) : (h -= l.partialLength,
                                f = null)),
                                f && (d = l,
                                g = (l = f[u]).partialLength));
                            R = A[n].an / 2 - A[n].add,
                            k.translate(-R, 0, 0)
                        } else
                            R = A[n].an / 2 - A[n].add,
                            k.translate(-R, 0, 0),
                            k.translate(-S[0] * A[n].an * .005, -S[1] * B * .01, 0);
                        for (D = 0; D < I; D += 1)
                            (M = E[D].a).t.propType && (L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars),
                            0 === i && 0 === t.j || (this._hasMaskedPath ? L.length ? o += M.t.v * L[0] : o += M.t.v * L : L.length ? i += M.t.v * L[0] : i += M.t.v * L));
                        for (t.strokeWidthAnim && (H = t.sw || 0),
                        t.strokeColorAnim && (z = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]),
                        t.fillColorAnim && t.fc && (G = [t.fc[0], t.fc[1], t.fc[2]]),
                        D = 0; D < I; D += 1)
                            (M = E[D].a).a.propType && ((L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars)).length ? k.translate(-M.a.v[0] * L[0], -M.a.v[1] * L[1], M.a.v[2] * L[2]) : k.translate(-M.a.v[0] * L, -M.a.v[1] * L, M.a.v[2] * L));
                        for (D = 0; D < I; D += 1)
                            (M = E[D].a).s.propType && ((L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars)).length ? k.scale(1 + (M.s.v[0] - 1) * L[0], 1 + (M.s.v[1] - 1) * L[1], 1) : k.scale(1 + (M.s.v[0] - 1) * L, 1 + (M.s.v[1] - 1) * L, 1));
                        for (D = 0; D < I; D += 1) {
                            if (M = E[D].a,
                            L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars),
                            M.sk.propType && (L.length ? k.skewFromAxis(-M.sk.v * L[0], M.sa.v * L[1]) : k.skewFromAxis(-M.sk.v * L, M.sa.v * L)),
                            M.r.propType && (L.length ? k.rotateZ(-M.r.v * L[2]) : k.rotateZ(-M.r.v * L)),
                            M.ry.propType && (L.length ? k.rotateY(M.ry.v * L[1]) : k.rotateY(M.ry.v * L)),
                            M.rx.propType && (L.length ? k.rotateX(M.rx.v * L[0]) : k.rotateX(M.rx.v * L)),
                            M.o.propType && (L.length ? q += (M.o.v * L[0] - q) * L[0] : q += (M.o.v * L - q) * L),
                            t.strokeWidthAnim && M.sw.propType && (L.length ? H += M.sw.v * L[0] : H += M.sw.v * L),
                            t.strokeColorAnim && M.sc.propType)
                                for (j = 0; j < 3; j += 1)
                                    L.length ? z[j] += (M.sc.v[j] - z[j]) * L[0] : z[j] += (M.sc.v[j] - z[j]) * L;
                            if (t.fillColorAnim && t.fc) {
                                if (M.fc.propType)
                                    for (j = 0; j < 3; j += 1)
                                        L.length ? G[j] += (M.fc.v[j] - G[j]) * L[0] : G[j] += (M.fc.v[j] - G[j]) * L;
                                M.fh.propType && (G = L.length ? addHueToRGB(G, M.fh.v * L[0]) : addHueToRGB(G, M.fh.v * L)),
                                M.fs.propType && (G = L.length ? addSaturationToRGB(G, M.fs.v * L[0]) : addSaturationToRGB(G, M.fs.v * L)),
                                M.fb.propType && (G = L.length ? addBrightnessToRGB(G, M.fb.v * L[0]) : addBrightnessToRGB(G, M.fb.v * L))
                            }
                        }
                        for (D = 0; D < I; D += 1)
                            (M = E[D].a).p.propType && (L = E[D].s.getMult(A[n].anIndexes[D], P.a[D].s.totalChars),
                            this._hasMaskedPath ? L.length ? k.translate(0, M.p.v[1] * L[0], -M.p.v[2] * L[1]) : k.translate(0, M.p.v[1] * L, -M.p.v[2] * L) : L.length ? k.translate(M.p.v[0] * L[0], M.p.v[1] * L[1], -M.p.v[2] * L[2]) : k.translate(M.p.v[0] * L, M.p.v[1] * L, -M.p.v[2] * L));
                        if (t.strokeWidthAnim && (W = H < 0 ? 0 : H),
                        t.strokeColorAnim && ($ = "rgb(" + Math.round(255 * z[0]) + "," + Math.round(255 * z[1]) + "," + Math.round(255 * z[2]) + ")"),
                        t.fillColorAnim && t.fc && (U = "rgb(" + Math.round(255 * G[0]) + "," + Math.round(255 * G[1]) + "," + Math.round(255 * G[2]) + ")"),
                        this._hasMaskedPath) {
                            if (k.translate(0, -t.ls),
                            k.translate(0, S[1] * B * .01 + s, 0),
                            this._pathData.p.v) {
                                b = (l.point[1] - d.point[1]) / (l.point[0] - d.point[0]);
                                var lt = 180 * Math.atan(b) / Math.PI;
                                l.point[0] < d.point[0] && (lt += 180),
                                k.rotate(-lt * Math.PI / 180)
                            }
                            k.translate(N, O, 0),
                            o -= S[0] * A[n].an * .005,
                            A[n + 1] && X !== A[n + 1].ind && (o += A[n].an / 2,
                            o += .001 * t.tr * t.finalSize)
                        } else {
                            switch (k.translate(i, s, 0),
                            t.ps && k.translate(t.ps[0], t.ps[1] + t.ascent, 0),
                            t.j) {
                            case 1:
                                k.translate(A[n].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[A[n].line]), 0, 0);
                                break;
                            case 2:
                                k.translate(A[n].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[A[n].line]) / 2, 0, 0)
                            }
                            k.translate(0, -t.ls),
                            k.translate(R, 0, 0),
                            k.translate(S[0] * A[n].an * .005, S[1] * B * .01, 0),
                            i += A[n].l + .001 * t.tr * t.finalSize
                        }
                        "html" === x ? tt = k.toCSS() : "svg" === x ? tt = k.to2dCSS() : et = [k.props[0], k.props[1], k.props[2], k.props[3], k.props[4], k.props[5], k.props[6], k.props[7], k.props[8], k.props[9], k.props[10], k.props[11], k.props[12], k.props[13], k.props[14], k.props[15]],
                        Y = q
                    }
                    C <= n ? (F = new LetterProps(Y,W,$,U,tt,et),
                    this.renderedLetters.push(F),
                    C += 1,
                    this.lettersChangedFlag = !0) : (F = this.renderedLetters[n],
                    this.lettersChangedFlag = F.update(Y, W, $, U, tt, et) || this.lettersChangedFlag)
                }
            }
        }
        ,
        TextAnimatorProperty.prototype.getValue = function() {
            this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId,
            this.iterateDynamicProperties())
        }
        ,
        TextAnimatorProperty.prototype.mHelper = new Matrix,
        TextAnimatorProperty.prototype.defaultPropsArray = [],
        extendPrototype([DynamicPropertyContainer], TextAnimatorProperty),
        ITextElement.prototype.initElement = function(t, e, i) {
            this.lettersChangedFlag = !0,
            this.initFrame(),
            this.initBaseData(t, e, i),
            this.textProperty = new TextProperty(this,t.t,this.dynamicProperties),
            this.textAnimator = new TextAnimatorProperty(t.t,this.renderType,this),
            this.initTransform(t, e, i),
            this.initHierarchy(),
            this.initRenderable(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            this.createContent(),
            this.hide(),
            this.textAnimator.searchProperties(this.dynamicProperties)
        }
        ,
        ITextElement.prototype.prepareFrame = function(t) {
            this._mdf = !1,
            this.prepareRenderableFrame(t),
            this.prepareProperties(t, this.isInRange),
            (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(),
            this.textProperty._isFirstFrame = !1,
            this.textProperty._mdf = !1)
        }
        ,
        ITextElement.prototype.createPathShape = function(t, e) {
            var i, s, n = e.length, r = "";
            for (i = 0; i < n; i += 1)
                "sh" === e[i].ty && (s = e[i].ks.k,
                r += buildShapeString(s, s.i.length, !0, t));
            return r
        }
        ,
        ITextElement.prototype.updateDocumentData = function(t, e) {
            this.textProperty.updateDocumentData(t, e)
        }
        ,
        ITextElement.prototype.canResizeFont = function(t) {
            this.textProperty.canResizeFont(t)
        }
        ,
        ITextElement.prototype.setMinimumFontSize = function(t) {
            this.textProperty.setMinimumFontSize(t)
        }
        ,
        ITextElement.prototype.applyTextPropertiesToMatrix = function(t, e, i, s, n) {
            switch (t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0),
            e.translate(0, -t.ls, 0),
            t.j) {
            case 1:
                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]), 0, 0);
                break;
            case 2:
                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[i]) / 2, 0, 0)
            }
            e.translate(s, n, 0)
        }
        ,
        ITextElement.prototype.buildColor = function(t) {
            return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")"
        }
        ,
        ITextElement.prototype.emptyProp = new LetterProps,
        ITextElement.prototype.destroy = function() {}
        ;
        var emptyShapeData = {
            shapes: []
        };
        function SVGTextLottieElement(t, e, i) {
            this.textSpans = [],
            this.renderType = "svg",
            this.initElement(t, e, i)
        }
        function ISolidElement(t, e, i) {
            this.initElement(t, e, i)
        }
        function NullElement(t, e, i) {
            this.initFrame(),
            this.initBaseData(t, e, i),
            this.initFrame(),
            this.initTransform(t, e, i),
            this.initHierarchy()
        }
        function SVGRendererBase() {}
        function ICompElement() {}
        function SVGCompElement(t, e, i) {
            this.layers = t.layers,
            this.supports3d = !0,
            this.completeLayers = !1,
            this.pendingElements = [],
            this.elements = this.layers ? createSizedArray(this.layers.length) : [],
            this.initElement(t, e, i),
            this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                _placeholder: !0
            }
        }
        function SVGRenderer(t, e) {
            this.animationItem = t,
            this.layers = null,
            this.renderedFrame = -1,
            this.svgElement = createNS("svg");
            var i = "";
            if (e && e.title) {
                var s = createNS("title")
                  , n = createElementID();
                s.setAttribute("id", n),
                s.textContent = e.title,
                this.svgElement.appendChild(s),
                i += n
            }
            if (e && e.description) {
                var r = createNS("desc")
                  , a = createElementID();
                r.setAttribute("id", a),
                r.textContent = e.description,
                this.svgElement.appendChild(r),
                i += " " + a
            }
            i && this.svgElement.setAttribute("aria-labelledby", i);
            var o = createNS("defs");
            this.svgElement.appendChild(o);
            var l = createNS("g");
            this.svgElement.appendChild(l),
            this.layerElement = l,
            this.renderConfig = {
                preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                contentVisibility: e && e.contentVisibility || "visible",
                progressiveLoad: e && e.progressiveLoad || !1,
                hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                viewBoxOnly: e && e.viewBoxOnly || !1,
                viewBoxSize: e && e.viewBoxSize || !1,
                className: e && e.className || "",
                id: e && e.id || "",
                focusable: e && e.focusable,
                filterSize: {
                    width: e && e.filterSize && e.filterSize.width || "100%",
                    height: e && e.filterSize && e.filterSize.height || "100%",
                    x: e && e.filterSize && e.filterSize.x || "0%",
                    y: e && e.filterSize && e.filterSize.y || "0%"
                },
                width: e && e.width,
                height: e && e.height,
                runExpressions: !e || void 0 === e.runExpressions || e.runExpressions
            },
            this.globalData = {
                _mdf: !1,
                frameNum: -1,
                defs: o,
                renderConfig: this.renderConfig
            },
            this.elements = [],
            this.pendingElements = [],
            this.destroyed = !1,
            this.rendererType = "svg"
        }
        function CVContextData() {
            var t;
            this.saved = [],
            this.cArrPos = 0,
            this.cTr = new Matrix,
            this.cO = 1;
            for (this.savedOp = createTypedArray("float32", 15),
            t = 0; t < 15; t += 1)
                this.saved[t] = createTypedArray("float32", 16);
            this._length = 15
        }
        function ShapeTransformManager() {
            this.sequences = {},
            this.sequenceList = [],
            this.transform_key_count = 0
        }
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement),
        SVGTextLottieElement.prototype.createContent = function() {
            this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"))
        }
        ,
        SVGTextLottieElement.prototype.buildTextContents = function(t) {
            for (var e = 0, i = t.length, s = [], n = ""; e < i; )
                t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (s.push(n),
                n = "") : n += t[e],
                e += 1;
            return s.push(n),
            s
        }
        ,
        SVGTextLottieElement.prototype.buildShapeData = function(t, e) {
            if (t.shapes && t.shapes.length) {
                var i = t.shapes[0];
                if (i.it) {
                    var s = i.it[i.it.length - 1];
                    s.s && (s.s.k[0] = e,
                    s.s.k[1] = e)
                }
            }
            return t
        }
        ,
        SVGTextLottieElement.prototype.buildNewText = function() {
            var t, e;
            this.addDynamicProperty(this);
            var i = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(i ? i.l.length : 0),
            i.fc ? this.layerElement.setAttribute("fill", this.buildColor(i.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
            i.sc && (this.layerElement.setAttribute("stroke", this.buildColor(i.sc)),
            this.layerElement.setAttribute("stroke-width", i.sw)),
            this.layerElement.setAttribute("font-size", i.finalSize);
            var s = this.globalData.fontManager.getFontByName(i.f);
            if (s.fClass)
                this.layerElement.setAttribute("class", s.fClass);
            else {
                this.layerElement.setAttribute("font-family", s.fFamily);
                var n = i.fWeight
                  , r = i.fStyle;
                this.layerElement.setAttribute("font-style", r),
                this.layerElement.setAttribute("font-weight", n)
            }
            this.layerElement.setAttribute("aria-label", i.t);
            var a, o = i.l || [], l = !!this.globalData.fontManager.chars;
            e = o.length;
            var h = this.mHelper
              , c = this.data.singleShape
              , u = 0
              , p = 0
              , d = !0
              , f = .001 * i.tr * i.finalSize;
            if (!c || l || i.sz) {
                var m, g = this.textSpans.length;
                for (t = 0; t < e; t += 1) {
                    if (this.textSpans[t] || (this.textSpans[t] = {
                        span: null,
                        childSpan: null,
                        glyph: null
                    }),
                    !l || !c || 0 === t) {
                        if (a = g > t ? this.textSpans[t].span : createNS(l ? "g" : "text"),
                        g <= t) {
                            if (a.setAttribute("stroke-linecap", "butt"),
                            a.setAttribute("stroke-linejoin", "round"),
                            a.setAttribute("stroke-miterlimit", "4"),
                            this.textSpans[t].span = a,
                            l) {
                                var y = createNS("g");
                                a.appendChild(y),
                                this.textSpans[t].childSpan = y
                            }
                            this.textSpans[t].span = a,
                            this.layerElement.appendChild(a)
                        }
                        a.style.display = "inherit"
                    }
                    if (h.reset(),
                    c && (o[t].n && (u = -f,
                    p += i.yOffset,
                    p += d ? 1 : 0,
                    d = !1),
                    this.applyTextPropertiesToMatrix(i, h, o[t].line, u, p),
                    u += o[t].l || 0,
                    u += f),
                    l) {
                        var v;
                        if (1 === (m = this.globalData.fontManager.getCharData(i.finalText[t], s.fStyle, this.globalData.fontManager.getFontByName(i.f).fFamily)).t)
                            v = new SVGCompElement(m.data,this.globalData,this);
                        else {
                            var b = emptyShapeData;
                            m.data && m.data.shapes && (b = this.buildShapeData(m.data, i.finalSize)),
                            v = new SVGShapeElement(b,this.globalData,this)
                        }
                        if (this.textSpans[t].glyph) {
                            var w = this.textSpans[t].glyph;
                            this.textSpans[t].childSpan.removeChild(w.layerElement),
                            w.destroy()
                        }
                        this.textSpans[t].glyph = v,
                        v._debug = !0,
                        v.prepareFrame(0),
                        v.renderFrame(),
                        this.textSpans[t].childSpan.appendChild(v.layerElement),
                        1 === m.t && this.textSpans[t].childSpan.setAttribute("transform", "scale(" + i.finalSize / 100 + "," + i.finalSize / 100 + ")")
                    } else
                        c && a.setAttribute("transform", "translate(" + h.props[12] + "," + h.props[13] + ")"),
                        a.textContent = o[t].val,
                        a.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve")
                }
                c && a && a.setAttribute("d", "")
            } else {
                var S = this.textContainer
                  , E = "start";
                switch (i.j) {
                case 1:
                    E = "end";
                    break;
                case 2:
                    E = "middle";
                    break;
                default:
                    E = "start"
                }
                S.setAttribute("text-anchor", E),
                S.setAttribute("letter-spacing", f);
                var P = this.buildTextContents(i.finalText);
                for (e = P.length,
                p = i.ps ? i.ps[1] + i.ascent : 0,
                t = 0; t < e; t += 1)
                    (a = this.textSpans[t].span || createNS("tspan")).textContent = P[t],
                    a.setAttribute("x", 0),
                    a.setAttribute("y", p),
                    a.style.display = "inherit",
                    S.appendChild(a),
                    this.textSpans[t] || (this.textSpans[t] = {
                        span: null,
                        glyph: null
                    }),
                    this.textSpans[t].span = a,
                    p += i.finalLineHeight;
                this.layerElement.appendChild(S)
            }
            for (; t < this.textSpans.length; )
                this.textSpans[t].span.style.display = "none",
                t += 1;
            this._sizeChanged = !0
        }
        ,
        SVGTextLottieElement.prototype.sourceRectAtTime = function() {
            if (this.prepareFrame(this.comp.renderedFrame - this.data.st),
            this.renderInnerContent(),
            this._sizeChanged) {
                this._sizeChanged = !1;
                var t = this.layerElement.getBBox();
                this.bbox = {
                    top: t.y,
                    left: t.x,
                    width: t.width,
                    height: t.height
                }
            }
            return this.bbox
        }
        ,
        SVGTextLottieElement.prototype.getValue = function() {
            var t, e, i = this.textSpans.length;
            for (this.renderedFrame = this.comp.renderedFrame,
            t = 0; t < i; t += 1)
                (e = this.textSpans[t].glyph) && (e.prepareFrame(this.comp.renderedFrame - this.data.st),
                e._mdf && (this._mdf = !0))
        }
        ,
        SVGTextLottieElement.prototype.renderInnerContent = function() {
            if ((!this.data.singleShape || this._mdf) && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
            this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                var t, e;
                this._sizeChanged = !0;
                var i, s, n, r = this.textAnimator.renderedLetters, a = this.textProperty.currentData.l;
                for (e = a.length,
                t = 0; t < e; t += 1)
                    a[t].n || (i = r[t],
                    s = this.textSpans[t].span,
                    (n = this.textSpans[t].glyph) && n.renderFrame(),
                    i._mdf.m && s.setAttribute("transform", i.m),
                    i._mdf.o && s.setAttribute("opacity", i.o),
                    i._mdf.sw && s.setAttribute("stroke-width", i.sw),
                    i._mdf.sc && s.setAttribute("stroke", i.sc),
                    i._mdf.fc && s.setAttribute("fill", i.fc))
            }
        }
        ,
        extendPrototype([IImageElement], ISolidElement),
        ISolidElement.prototype.createContent = function() {
            var t = createNS("rect");
            t.setAttribute("width", this.data.sw),
            t.setAttribute("height", this.data.sh),
            t.setAttribute("fill", this.data.sc),
            this.layerElement.appendChild(t)
        }
        ,
        NullElement.prototype.prepareFrame = function(t) {
            this.prepareProperties(t, !0)
        }
        ,
        NullElement.prototype.renderFrame = function() {}
        ,
        NullElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        NullElement.prototype.destroy = function() {}
        ,
        NullElement.prototype.sourceRectAtTime = function() {}
        ,
        NullElement.prototype.hide = function() {}
        ,
        extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement),
        extendPrototype([BaseRenderer], SVGRendererBase),
        SVGRendererBase.prototype.createNull = function(t) {
            return new NullElement(t,this.globalData,this)
        }
        ,
        SVGRendererBase.prototype.createShape = function(t) {
            return new SVGShapeElement(t,this.globalData,this)
        }
        ,
        SVGRendererBase.prototype.createText = function(t) {
            return new SVGTextLottieElement(t,this.globalData,this)
        }
        ,
        SVGRendererBase.prototype.createImage = function(t) {
            return new IImageElement(t,this.globalData,this)
        }
        ,
        SVGRendererBase.prototype.createSolid = function(t) {
            return new ISolidElement(t,this.globalData,this)
        }
        ,
        SVGRendererBase.prototype.configAnimation = function(t) {
            this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
            this.svgElement.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"),
            this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h),
            this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", t.w),
            this.svgElement.setAttribute("height", t.h),
            this.svgElement.style.width = "100%",
            this.svgElement.style.height = "100%",
            this.svgElement.style.transform = "translate3d(0,0,0)",
            this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility),
            this.renderConfig.width && this.svgElement.setAttribute("width", this.renderConfig.width),
            this.renderConfig.height && this.svgElement.setAttribute("height", this.renderConfig.height),
            this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className),
            this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id),
            void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable),
            this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio),
            this.animationItem.wrapper.appendChild(this.svgElement);
            var e = this.globalData.defs;
            this.setupGlobalData(t, e),
            this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
            this.data = t;
            var i = createNS("clipPath")
              , s = createNS("rect");
            s.setAttribute("width", t.w),
            s.setAttribute("height", t.h),
            s.setAttribute("x", 0),
            s.setAttribute("y", 0);
            var n = createElementID();
            i.setAttribute("id", n),
            i.appendChild(s),
            this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + n + ")"),
            e.appendChild(i),
            this.layers = t.layers,
            this.elements = createSizedArray(t.layers.length)
        }
        ,
        SVGRendererBase.prototype.destroy = function() {
            var t;
            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
            this.layerElement = null,
            this.globalData.defs = null;
            var e = this.layers ? this.layers.length : 0;
            for (t = 0; t < e; t += 1)
                this.elements[t] && this.elements[t].destroy();
            this.elements.length = 0,
            this.destroyed = !0,
            this.animationItem = null
        }
        ,
        SVGRendererBase.prototype.updateContainerSize = function() {}
        ,
        SVGRendererBase.prototype.findIndexByInd = function(t) {
            var e = 0
              , i = this.layers.length;
            for (e = 0; e < i; e += 1)
                if (this.layers[e].ind === t)
                    return e;
            return -1
        }
        ,
        SVGRendererBase.prototype.buildItem = function(t) {
            var e = this.elements;
            if (!e[t] && 99 !== this.layers[t].ty) {
                e[t] = !0;
                var i = this.createItem(this.layers[t]);
                if (e[t] = i,
                getExpressionsPlugin() && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(i),
                i.initExpressions()),
                this.appendElementInPos(i, t),
                this.layers[t].tt) {
                    var s = "tp"in this.layers[t] ? this.findIndexByInd(this.layers[t].tp) : t - 1;
                    if (-1 === s)
                        return;
                    if (this.elements[s] && !0 !== this.elements[s]) {
                        var n = e[s].getMatte(this.layers[t].tt);
                        i.setMatte(n)
                    } else
                        this.buildItem(s),
                        this.addPendingElement(i)
                }
            }
        }
        ,
        SVGRendererBase.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; ) {
                var t = this.pendingElements.pop();
                if (t.checkParenting(),
                t.data.tt)
                    for (var e = 0, i = this.elements.length; e < i; ) {
                        if (this.elements[e] === t) {
                            var s = "tp"in t.data ? this.findIndexByInd(t.data.tp) : e - 1
                              , n = this.elements[s].getMatte(this.layers[e].tt);
                            t.setMatte(n);
                            break
                        }
                        e += 1
                    }
            }
        }
        ,
        SVGRendererBase.prototype.renderFrame = function(t) {
            if (this.renderedFrame !== t && !this.destroyed) {
                var e;
                null === t ? t = this.renderedFrame : this.renderedFrame = t,
                this.globalData.frameNum = t,
                this.globalData.frameId += 1,
                this.globalData.projectInterface.currentFrame = t,
                this.globalData._mdf = !1;
                var i = this.layers.length;
                for (this.completeLayers || this.checkLayers(t),
                e = i - 1; e >= 0; e -= 1)
                    (this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
                if (this.globalData._mdf)
                    for (e = 0; e < i; e += 1)
                        (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
            }
        }
        ,
        SVGRendererBase.prototype.appendElementInPos = function(t, e) {
            var i = t.getBaseElement();
            if (i) {
                for (var s, n = 0; n < e; )
                    this.elements[n] && !0 !== this.elements[n] && this.elements[n].getBaseElement() && (s = this.elements[n].getBaseElement()),
                    n += 1;
                s ? this.layerElement.insertBefore(i, s) : this.layerElement.appendChild(i)
            }
        }
        ,
        SVGRendererBase.prototype.hide = function() {
            this.layerElement.style.display = "none"
        }
        ,
        SVGRendererBase.prototype.show = function() {
            this.layerElement.style.display = "block"
        }
        ,
        extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement),
        ICompElement.prototype.initElement = function(t, e, i) {
            this.initFrame(),
            this.initBaseData(t, e, i),
            this.initTransform(t, e, i),
            this.initRenderable(),
            this.initHierarchy(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            !this.data.xt && e.progressiveLoad || this.buildAllItems(),
            this.hide()
        }
        ,
        ICompElement.prototype.prepareFrame = function(t) {
            if (this._mdf = !1,
            this.prepareRenderableFrame(t),
            this.prepareProperties(t, this.isInRange),
            this.isInRange || this.data.xt) {
                if (this.tm._placeholder)
                    this.renderedFrame = t / this.data.sr;
                else {
                    var e = this.tm.v;
                    e === this.data.op && (e = this.data.op - 1),
                    this.renderedFrame = e
                }
                var i, s = this.elements.length;
                for (this.completeLayers || this.checkLayers(this.renderedFrame),
                i = s - 1; i >= 0; i -= 1)
                    (this.completeLayers || this.elements[i]) && (this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st),
                    this.elements[i]._mdf && (this._mdf = !0))
            }
        }
        ,
        ICompElement.prototype.renderInnerContent = function() {
            var t, e = this.layers.length;
            for (t = 0; t < e; t += 1)
                (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
        }
        ,
        ICompElement.prototype.setElements = function(t) {
            this.elements = t
        }
        ,
        ICompElement.prototype.getElements = function() {
            return this.elements
        }
        ,
        ICompElement.prototype.destroyElements = function() {
            var t, e = this.layers.length;
            for (t = 0; t < e; t += 1)
                this.elements[t] && this.elements[t].destroy()
        }
        ,
        ICompElement.prototype.destroy = function() {
            this.destroyElements(),
            this.destroyBaseElement()
        }
        ,
        extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement),
        SVGCompElement.prototype.createComp = function(t) {
            return new SVGCompElement(t,this.globalData,this)
        }
        ,
        extendPrototype([SVGRendererBase], SVGRenderer),
        SVGRenderer.prototype.createComp = function(t) {
            return new SVGCompElement(t,this.globalData,this)
        }
        ,
        CVContextData.prototype.duplicate = function() {
            var t = 2 * this._length
              , e = this.savedOp;
            this.savedOp = createTypedArray("float32", t),
            this.savedOp.set(e);
            var i = 0;
            for (i = this._length; i < t; i += 1)
                this.saved[i] = createTypedArray("float32", 16);
            this._length = t
        }
        ,
        CVContextData.prototype.reset = function() {
            this.cArrPos = 0,
            this.cTr.reset(),
            this.cO = 1
        }
        ,
        CVContextData.prototype.popTransform = function() {
            var t, e = this.saved[this.cArrPos], i = this.cTr.props;
            for (t = 0; t < 16; t += 1)
                i[t] = e[t];
            return e
        }
        ,
        CVContextData.prototype.popOpacity = function() {
            var t = this.savedOp[this.cArrPos];
            return this.cO = t,
            t
        }
        ,
        CVContextData.prototype.pop = function() {
            return this.cArrPos -= 1,
            {
                transform: this.popTransform(),
                opacity: this.popOpacity()
            }
        }
        ,
        CVContextData.prototype.push = function() {
            var t, e = this.cTr.props;
            this._length <= this.cArrPos && this.duplicate();
            var i = this.saved[this.cArrPos];
            for (t = 0; t < 16; t += 1)
                i[t] = e[t];
            this.savedOp[this.cArrPos] = this.cO,
            this.cArrPos += 1
        }
        ,
        CVContextData.prototype.getTransform = function() {
            return this.cTr
        }
        ,
        CVContextData.prototype.getOpacity = function() {
            return this.cO
        }
        ,
        CVContextData.prototype.setOpacity = function(t) {
            this.cO = t
        }
        ,
        ShapeTransformManager.prototype = {
            addTransformSequence: function(t) {
                var e, i = t.length, s = "_";
                for (e = 0; e < i; e += 1)
                    s += t[e].transform.key + "_";
                var n = this.sequences[s];
                return n || (n = {
                    transforms: [].concat(t),
                    finalTransform: new Matrix,
                    _mdf: !1
                },
                this.sequences[s] = n,
                this.sequenceList.push(n)),
                n
            },
            processSequence: function(t, e) {
                for (var i, s = 0, n = t.transforms.length, r = e; s < n && !e; ) {
                    if (t.transforms[s].transform.mProps._mdf) {
                        r = !0;
                        break
                    }
                    s += 1
                }
                if (r)
                    for (t.finalTransform.reset(),
                    s = n - 1; s >= 0; s -= 1)
                        i = t.transforms[s].transform.mProps.v.props,
                        t.finalTransform.transform(i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9], i[10], i[11], i[12], i[13], i[14], i[15]);
                t._mdf = r
            },
            processSequences: function(t) {
                var e, i = this.sequenceList.length;
                for (e = 0; e < i; e += 1)
                    this.processSequence(this.sequenceList[e], t)
            },
            getNewKey: function() {
                return this.transform_key_count += 1,
                "_" + this.transform_key_count
            }
        };
        var lumaLoader = function() {
            var t = "__lottie_element_luma_buffer"
              , e = null
              , i = null
              , s = null;
            function n() {
                var n, r, a;
                e || (n = createNS("svg"),
                r = createNS("filter"),
                a = createNS("feColorMatrix"),
                r.setAttribute("id", t),
                a.setAttribute("type", "matrix"),
                a.setAttribute("color-interpolation-filters", "sRGB"),
                a.setAttribute("values", "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"),
                r.appendChild(a),
                n.appendChild(r),
                n.setAttribute("id", t + "_svg"),
                featureSupport.svgLumaHidden && (n.style.display = "none"),
                s = n,
                document.body.appendChild(s),
                e = createTag("canvas"),
                (i = e.getContext("2d")).filter = "url(#" + t + ")",
                i.fillStyle = "rgba(0,0,0,0)",
                i.fillRect(0, 0, 1, 1))
            }
            return {
                load: n,
                get: function(s) {
                    return e || n(),
                    e.width = s.width,
                    e.height = s.height,
                    i.filter = "url(#" + t + ")",
                    e
                }
            }
        };
        function createCanvas(t, e) {
            if (featureSupport.offscreenCanvas)
                return new OffscreenCanvas(t,e);
            var i = createTag("canvas");
            return i.width = t,
            i.height = e,
            i
        }
        var assetLoader = {
            loadLumaCanvas: lumaLoader.load,
            getLumaCanvas: lumaLoader.get,
            createCanvas: createCanvas
        };
        function CVEffects() {}
        function CVMaskElement(t, e) {
            var i;
            this.data = t,
            this.element = e,
            this.masksProperties = this.data.masksProperties || [],
            this.viewData = createSizedArray(this.masksProperties.length);
            var s = this.masksProperties.length
              , n = !1;
            for (i = 0; i < s; i += 1)
                "n" !== this.masksProperties[i].mode && (n = !0),
                this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);
            this.hasMasks = n,
            n && this.element.addRenderableComponent(this)
        }
        function CVBaseElement() {}
        CVEffects.prototype.renderFrame = function() {}
        ,
        CVMaskElement.prototype.renderFrame = function() {
            if (this.hasMasks) {
                var t, e, i, s, n = this.element.finalTransform.mat, r = this.element.canvasContext, a = this.masksProperties.length;
                for (r.beginPath(),
                t = 0; t < a; t += 1)
                    if ("n" !== this.masksProperties[t].mode) {
                        var o;
                        this.masksProperties[t].inv && (r.moveTo(0, 0),
                        r.lineTo(this.element.globalData.compSize.w, 0),
                        r.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h),
                        r.lineTo(0, this.element.globalData.compSize.h),
                        r.lineTo(0, 0)),
                        s = this.viewData[t].v,
                        e = n.applyToPointArray(s.v[0][0], s.v[0][1], 0),
                        r.moveTo(e[0], e[1]);
                        var l = s._length;
                        for (o = 1; o < l; o += 1)
                            i = n.applyToTriplePoints(s.o[o - 1], s.i[o], s.v[o]),
                            r.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5]);
                        i = n.applyToTriplePoints(s.o[o - 1], s.i[0], s.v[0]),
                        r.bezierCurveTo(i[0], i[1], i[2], i[3], i[4], i[5])
                    }
                this.element.globalData.renderer.save(!0),
                r.clip()
            }
        }
        ,
        CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty,
        CVMaskElement.prototype.destroy = function() {
            this.element = null
        }
        ;
        var operationsMap = {
            1: "source-in",
            2: "source-out",
            3: "source-in",
            4: "source-out"
        };
        function CVShapeData(t, e, i, s) {
            this.styledShapes = [],
            this.tr = [0, 0, 0, 0, 0, 0];
            var n, r = 4;
            "rc" === e.ty ? r = 5 : "el" === e.ty ? r = 6 : "sr" === e.ty && (r = 7),
            this.sh = ShapePropertyFactory.getShapeProp(t, e, r, t);
            var a, o = i.length;
            for (n = 0; n < o; n += 1)
                i[n].closed || (a = {
                    transforms: s.addTransformSequence(i[n].transforms),
                    trNodes: []
                },
                this.styledShapes.push(a),
                i[n].elements.push(a))
        }
        function CVShapeElement(t, e, i) {
            this.shapes = [],
            this.shapesData = t.shapes,
            this.stylesList = [],
            this.itemsData = [],
            this.prevViewData = [],
            this.shapeModifiers = [],
            this.processedElements = [],
            this.transformsManager = new ShapeTransformManager,
            this.initElement(t, e, i)
        }
        function CVTextElement(t, e, i) {
            this.textSpans = [],
            this.yOffset = 0,
            this.fillColorAnim = !1,
            this.strokeColorAnim = !1,
            this.strokeWidthAnim = !1,
            this.stroke = !1,
            this.fill = !1,
            this.justifyOffset = 0,
            this.currentRender = null,
            this.renderType = "canvas",
            this.values = {
                fill: "rgba(0,0,0,0)",
                stroke: "rgba(0,0,0,0)",
                sWidth: 0,
                fValue: ""
            },
            this.initElement(t, e, i)
        }
        function CVImageElement(t, e, i) {
            this.assetData = e.getAssetData(t.refId),
            this.img = e.imageLoader.getAsset(this.assetData),
            this.initElement(t, e, i)
        }
        function CVSolidElement(t, e, i) {
            this.initElement(t, e, i)
        }
        function CanvasRendererBase(t, e) {
            this.animationItem = t,
            this.renderConfig = {
                clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,
                context: e && e.context || null,
                progressiveLoad: e && e.progressiveLoad || !1,
                preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                contentVisibility: e && e.contentVisibility || "visible",
                className: e && e.className || "",
                id: e && e.id || ""
            },
            this.renderConfig.dpr = e && e.dpr || 1,
            this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1),
            this.renderedFrame = -1,
            this.globalData = {
                frameNum: -1,
                _mdf: !1,
                renderConfig: this.renderConfig,
                currentGlobalAlpha: -1
            },
            this.contextData = new CVContextData,
            this.elements = [],
            this.pendingElements = [],
            this.transformMat = new Matrix,
            this.completeLayers = !1,
            this.rendererType = "canvas"
        }
        function CVCompElement(t, e, i) {
            this.completeLayers = !1,
            this.layers = t.layers,
            this.pendingElements = [],
            this.elements = createSizedArray(this.layers.length),
            this.initElement(t, e, i),
            this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                _placeholder: !0
            }
        }
        function CanvasRenderer(t, e) {
            this.animationItem = t,
            this.renderConfig = {
                clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,
                context: e && e.context || null,
                progressiveLoad: e && e.progressiveLoad || !1,
                preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                contentVisibility: e && e.contentVisibility || "visible",
                className: e && e.className || "",
                id: e && e.id || "",
                runExpressions: !e || void 0 === e.runExpressions || e.runExpressions
            },
            this.renderConfig.dpr = e && e.dpr || 1,
            this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1),
            this.renderedFrame = -1,
            this.globalData = {
                frameNum: -1,
                _mdf: !1,
                renderConfig: this.renderConfig,
                currentGlobalAlpha: -1
            },
            this.contextData = new CVContextData,
            this.elements = [],
            this.pendingElements = [],
            this.transformMat = new Matrix,
            this.completeLayers = !1,
            this.rendererType = "canvas"
        }
        function HBaseElement() {}
        function HSolidElement(t, e, i) {
            this.initElement(t, e, i)
        }
        function HShapeElement(t, e, i) {
            this.shapes = [],
            this.shapesData = t.shapes,
            this.stylesList = [],
            this.shapeModifiers = [],
            this.itemsData = [],
            this.processedElements = [],
            this.animatedContents = [],
            this.shapesContainer = createNS("g"),
            this.initElement(t, e, i),
            this.prevViewData = [],
            this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0
            }
        }
        function HTextElement(t, e, i) {
            this.textSpans = [],
            this.textPaths = [],
            this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0
            },
            this.renderType = "svg",
            this.isMasked = !1,
            this.initElement(t, e, i)
        }
        function HCameraElement(t, e, i) {
            this.initFrame(),
            this.initBaseData(t, e, i),
            this.initHierarchy();
            var s = PropertyFactory.getProp;
            if (this.pe = s(this, t.pe, 0, 0, this),
            t.ks.p.s ? (this.px = s(this, t.ks.p.x, 1, 0, this),
            this.py = s(this, t.ks.p.y, 1, 0, this),
            this.pz = s(this, t.ks.p.z, 1, 0, this)) : this.p = s(this, t.ks.p, 1, 0, this),
            t.ks.a && (this.a = s(this, t.ks.a, 1, 0, this)),
            t.ks.or.k.length && t.ks.or.k[0].to) {
                var n, r = t.ks.or.k.length;
                for (n = 0; n < r; n += 1)
                    t.ks.or.k[n].to = null,
                    t.ks.or.k[n].ti = null
            }
            this.or = s(this, t.ks.or, 1, degToRads, this),
            this.or.sh = !0,
            this.rx = s(this, t.ks.rx, 0, degToRads, this),
            this.ry = s(this, t.ks.ry, 0, degToRads, this),
            this.rz = s(this, t.ks.rz, 0, degToRads, this),
            this.mat = new Matrix,
            this._prevMat = new Matrix,
            this._isFirstFrame = !0,
            this.finalTransform = {
                mProp: this
            }
        }
        function HImageElement(t, e, i) {
            this.assetData = e.getAssetData(t.refId),
            this.initElement(t, e, i)
        }
        function HybridRendererBase(t, e) {
            this.animationItem = t,
            this.layers = null,
            this.renderedFrame = -1,
            this.renderConfig = {
                className: e && e.className || "",
                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                filterSize: {
                    width: e && e.filterSize && e.filterSize.width || "400%",
                    height: e && e.filterSize && e.filterSize.height || "400%",
                    x: e && e.filterSize && e.filterSize.x || "-100%",
                    y: e && e.filterSize && e.filterSize.y || "-100%"
                }
            },
            this.globalData = {
                _mdf: !1,
                frameNum: -1,
                renderConfig: this.renderConfig
            },
            this.pendingElements = [],
            this.elements = [],
            this.threeDElements = [],
            this.destroyed = !1,
            this.camera = null,
            this.supports3d = !0,
            this.rendererType = "html"
        }
        function HCompElement(t, e, i) {
            this.layers = t.layers,
            this.supports3d = !t.hasMask,
            this.completeLayers = !1,
            this.pendingElements = [],
            this.elements = this.layers ? createSizedArray(this.layers.length) : [],
            this.initElement(t, e, i),
            this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                _placeholder: !0
            }
        }
        function HybridRenderer(t, e) {
            this.animationItem = t,
            this.layers = null,
            this.renderedFrame = -1,
            this.renderConfig = {
                className: e && e.className || "",
                imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                filterSize: {
                    width: e && e.filterSize && e.filterSize.width || "400%",
                    height: e && e.filterSize && e.filterSize.height || "400%",
                    x: e && e.filterSize && e.filterSize.x || "-100%",
                    y: e && e.filterSize && e.filterSize.y || "-100%"
                },
                runExpressions: !e || void 0 === e.runExpressions || e.runExpressions
            },
            this.globalData = {
                _mdf: !1,
                frameNum: -1,
                renderConfig: this.renderConfig
            },
            this.pendingElements = [],
            this.elements = [],
            this.threeDElements = [],
            this.destroyed = !1,
            this.camera = null,
            this.supports3d = !0,
            this.rendererType = "html"
        }
        CVBaseElement.prototype = {
            createElements: function() {},
            initRendererElement: function() {},
            createContainerElements: function() {
                if (this.data.tt >= 1) {
                    this.buffers = [];
                    var t = this.globalData.canvasContext
                      , e = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
                    this.buffers.push(e);
                    var i = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
                    this.buffers.push(i),
                    this.data.tt >= 3 && !document._isProxy && assetLoader.loadLumaCanvas()
                }
                this.canvasContext = this.globalData.canvasContext,
                this.transformCanvas = this.globalData.transformCanvas,
                this.renderableEffectsManager = new CVEffects(this)
            },
            createContent: function() {},
            setBlendMode: function() {
                var t = this.globalData;
                if (t.blendMode !== this.data.bm) {
                    t.blendMode = this.data.bm;
                    var e = getBlendMode(this.data.bm);
                    t.canvasContext.globalCompositeOperation = e
                }
            },
            createRenderableComponents: function() {
                this.maskManager = new CVMaskElement(this.data,this)
            },
            hideElement: function() {
                this.hidden || this.isInRange && !this.isTransparent || (this.hidden = !0)
            },
            showElement: function() {
                this.isInRange && !this.isTransparent && (this.hidden = !1,
                this._isFirstFrame = !0,
                this.maskManager._isFirstFrame = !0)
            },
            clearCanvas: function(t) {
                t.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy)
            },
            prepareLayer: function() {
                if (this.data.tt >= 1) {
                    var t = this.buffers[0].getContext("2d");
                    this.clearCanvas(t),
                    t.drawImage(this.canvasContext.canvas, 0, 0),
                    this.currentTransform = this.canvasContext.getTransform(),
                    this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.clearCanvas(this.canvasContext),
                    this.canvasContext.setTransform(this.currentTransform)
                }
            },
            exitLayer: function() {
                if (this.data.tt >= 1) {
                    var t = this.buffers[1]
                      , e = t.getContext("2d");
                    if (this.clearCanvas(e),
                    e.drawImage(this.canvasContext.canvas, 0, 0),
                    this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.clearCanvas(this.canvasContext),
                    this.canvasContext.setTransform(this.currentTransform),
                    this.comp.getElementById("tp"in this.data ? this.data.tp : this.data.ind - 1).renderFrame(!0),
                    this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.data.tt >= 3 && !document._isProxy) {
                        var i = assetLoader.getLumaCanvas(this.canvasContext.canvas);
                        i.getContext("2d").drawImage(this.canvasContext.canvas, 0, 0),
                        this.clearCanvas(this.canvasContext),
                        this.canvasContext.drawImage(i, 0, 0)
                    }
                    this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt],
                    this.canvasContext.drawImage(t, 0, 0),
                    this.canvasContext.globalCompositeOperation = "destination-over",
                    this.canvasContext.drawImage(this.buffers[0], 0, 0),
                    this.canvasContext.setTransform(this.currentTransform),
                    this.canvasContext.globalCompositeOperation = "source-over"
                }
            },
            renderFrame: function(t) {
                if (!this.hidden && !this.data.hd && (1 !== this.data.td || t)) {
                    this.renderTransform(),
                    this.renderRenderable(),
                    this.setBlendMode();
                    var e = 0 === this.data.ty;
                    this.prepareLayer(),
                    this.globalData.renderer.save(e),
                    this.globalData.renderer.ctxTransform(this.finalTransform.mat.props),
                    this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v),
                    this.renderInnerContent(),
                    this.globalData.renderer.restore(e),
                    this.exitLayer(),
                    this.maskManager.hasMasks && this.globalData.renderer.restore(!0),
                    this._isFirstFrame && (this._isFirstFrame = !1)
                }
            },
            destroy: function() {
                this.canvasContext = null,
                this.data = null,
                this.globalData = null,
                this.maskManager.destroy()
            },
            mHelper: new Matrix
        },
        CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement,
        CVBaseElement.prototype.show = CVBaseElement.prototype.showElement,
        CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement),
        CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement,
        CVShapeElement.prototype.transformHelper = {
            opacity: 1,
            _opMdf: !1
        },
        CVShapeElement.prototype.dashResetter = [],
        CVShapeElement.prototype.createContent = function() {
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, [])
        }
        ,
        CVShapeElement.prototype.createStyleElement = function(t, e) {
            var i = {
                data: t,
                type: t.ty,
                preTransforms: this.transformsManager.addTransformSequence(e),
                transforms: [],
                elements: [],
                closed: !0 === t.hd
            }
              , s = {};
            if ("fl" === t.ty || "st" === t.ty ? (s.c = PropertyFactory.getProp(this, t.c, 1, 255, this),
            s.c.k || (i.co = "rgb(" + bmFloor(s.c.v[0]) + "," + bmFloor(s.c.v[1]) + "," + bmFloor(s.c.v[2]) + ")")) : "gf" !== t.ty && "gs" !== t.ty || (s.s = PropertyFactory.getProp(this, t.s, 1, null, this),
            s.e = PropertyFactory.getProp(this, t.e, 1, null, this),
            s.h = PropertyFactory.getProp(this, t.h || {
                k: 0
            }, 0, .01, this),
            s.a = PropertyFactory.getProp(this, t.a || {
                k: 0
            }, 0, degToRads, this),
            s.g = new GradientProperty(this,t.g,this)),
            s.o = PropertyFactory.getProp(this, t.o, 0, .01, this),
            "st" === t.ty || "gs" === t.ty) {
                if (i.lc = lineCapEnum[t.lc || 2],
                i.lj = lineJoinEnum[t.lj || 2],
                1 == t.lj && (i.ml = t.ml),
                s.w = PropertyFactory.getProp(this, t.w, 0, null, this),
                s.w.k || (i.wi = s.w.v),
                t.d) {
                    var n = new DashProperty(this,t.d,"canvas",this);
                    s.d = n,
                    s.d.k || (i.da = s.d.dashArray,
                    i.do = s.d.dashoffset[0])
                }
            } else
                i.r = 2 === t.r ? "evenodd" : "nonzero";
            return this.stylesList.push(i),
            s.style = i,
            s
        }
        ,
        CVShapeElement.prototype.createGroupElement = function() {
            return {
                it: [],
                prevViewData: []
            }
        }
        ,
        CVShapeElement.prototype.createTransformElement = function(t) {
            return {
                transform: {
                    opacity: 1,
                    _opMdf: !1,
                    key: this.transformsManager.getNewKey(),
                    op: PropertyFactory.getProp(this, t.o, 0, .01, this),
                    mProps: TransformPropertyFactory.getTransformProperty(this, t, this)
                }
            }
        }
        ,
        CVShapeElement.prototype.createShapeElement = function(t) {
            var e = new CVShapeData(this,t,this.stylesList,this.transformsManager);
            return this.shapes.push(e),
            this.addShapeToModifiers(e),
            e
        }
        ,
        CVShapeElement.prototype.reloadShapes = function() {
            var t;
            this._isFirstFrame = !0;
            var e = this.itemsData.length;
            for (t = 0; t < e; t += 1)
                this.prevViewData[t] = this.itemsData[t];
            for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []),
            e = this.dynamicProperties.length,
            t = 0; t < e; t += 1)
                this.dynamicProperties[t].getValue();
            this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame)
        }
        ,
        CVShapeElement.prototype.addTransformToStyleList = function(t) {
            var e, i = this.stylesList.length;
            for (e = 0; e < i; e += 1)
                this.stylesList[e].closed || this.stylesList[e].transforms.push(t)
        }
        ,
        CVShapeElement.prototype.removeTransformFromStyleList = function() {
            var t, e = this.stylesList.length;
            for (t = 0; t < e; t += 1)
                this.stylesList[t].closed || this.stylesList[t].transforms.pop()
        }
        ,
        CVShapeElement.prototype.closeStyles = function(t) {
            var e, i = t.length;
            for (e = 0; e < i; e += 1)
                t[e].closed = !0
        }
        ,
        CVShapeElement.prototype.searchShapes = function(t, e, i, s, n) {
            var r, a, o, l, h, c, u = t.length - 1, p = [], d = [], f = [].concat(n);
            for (r = u; r >= 0; r -= 1) {
                if ((l = this.searchProcessedElement(t[r])) ? e[r] = i[l - 1] : t[r]._shouldRender = s,
                "fl" === t[r].ty || "st" === t[r].ty || "gf" === t[r].ty || "gs" === t[r].ty)
                    l ? e[r].style.closed = !1 : e[r] = this.createStyleElement(t[r], f),
                    p.push(e[r].style);
                else if ("gr" === t[r].ty) {
                    if (l)
                        for (o = e[r].it.length,
                        a = 0; a < o; a += 1)
                            e[r].prevViewData[a] = e[r].it[a];
                    else
                        e[r] = this.createGroupElement(t[r]);
                    this.searchShapes(t[r].it, e[r].it, e[r].prevViewData, s, f)
                } else
                    "tr" === t[r].ty ? (l || (c = this.createTransformElement(t[r]),
                    e[r] = c),
                    f.push(e[r]),
                    this.addTransformToStyleList(e[r])) : "sh" === t[r].ty || "rc" === t[r].ty || "el" === t[r].ty || "sr" === t[r].ty ? l || (e[r] = this.createShapeElement(t[r])) : "tm" === t[r].ty || "rd" === t[r].ty || "pb" === t[r].ty || "zz" === t[r].ty || "op" === t[r].ty ? (l ? (h = e[r]).closed = !1 : ((h = ShapeModifiers.getModifier(t[r].ty)).init(this, t[r]),
                    e[r] = h,
                    this.shapeModifiers.push(h)),
                    d.push(h)) : "rp" === t[r].ty && (l ? (h = e[r]).closed = !0 : (h = ShapeModifiers.getModifier(t[r].ty),
                    e[r] = h,
                    h.init(this, t, r, e),
                    this.shapeModifiers.push(h),
                    s = !1),
                    d.push(h));
                this.addProcessedElement(t[r], r + 1)
            }
            for (this.removeTransformFromStyleList(),
            this.closeStyles(p),
            u = d.length,
            r = 0; r < u; r += 1)
                d[r].closed = !0
        }
        ,
        CVShapeElement.prototype.renderInnerContent = function() {
            this.transformHelper.opacity = 1,
            this.transformHelper._opMdf = !1,
            this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame),
            this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0)
        }
        ,
        CVShapeElement.prototype.renderShapeTransform = function(t, e) {
            (t._opMdf || e.op._mdf || this._isFirstFrame) && (e.opacity = t.opacity,
            e.opacity *= e.op.v,
            e._opMdf = !0)
        }
        ,
        CVShapeElement.prototype.drawLayer = function() {
            var t, e, i, s, n, r, a, o, l, h = this.stylesList.length, c = this.globalData.renderer, u = this.globalData.canvasContext;
            for (t = 0; t < h; t += 1)
                if (("st" !== (o = (l = this.stylesList[t]).type) && "gs" !== o || 0 !== l.wi) && l.data._shouldRender && 0 !== l.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                    for (c.save(),
                    r = l.elements,
                    "st" === o || "gs" === o ? (u.strokeStyle = "st" === o ? l.co : l.grd,
                    u.lineWidth = l.wi,
                    u.lineCap = l.lc,
                    u.lineJoin = l.lj,
                    u.miterLimit = l.ml || 0) : u.fillStyle = "fl" === o ? l.co : l.grd,
                    c.ctxOpacity(l.coOp),
                    "st" !== o && "gs" !== o && u.beginPath(),
                    c.ctxTransform(l.preTransforms.finalTransform.props),
                    i = r.length,
                    e = 0; e < i; e += 1) {
                        for ("st" !== o && "gs" !== o || (u.beginPath(),
                        l.da && (u.setLineDash(l.da),
                        u.lineDashOffset = l.do)),
                        n = (a = r[e].trNodes).length,
                        s = 0; s < n; s += 1)
                            "m" === a[s].t ? u.moveTo(a[s].p[0], a[s].p[1]) : "c" === a[s].t ? u.bezierCurveTo(a[s].pts[0], a[s].pts[1], a[s].pts[2], a[s].pts[3], a[s].pts[4], a[s].pts[5]) : u.closePath();
                        "st" !== o && "gs" !== o || (u.stroke(),
                        l.da && u.setLineDash(this.dashResetter))
                    }
                    "st" !== o && "gs" !== o && u.fill(l.r),
                    c.restore()
                }
        }
        ,
        CVShapeElement.prototype.renderShape = function(t, e, i, s) {
            var n, r;
            for (r = t,
            n = e.length - 1; n >= 0; n -= 1)
                "tr" === e[n].ty ? (r = i[n].transform,
                this.renderShapeTransform(t, r)) : "sh" === e[n].ty || "el" === e[n].ty || "rc" === e[n].ty || "sr" === e[n].ty ? this.renderPath(e[n], i[n]) : "fl" === e[n].ty ? this.renderFill(e[n], i[n], r) : "st" === e[n].ty ? this.renderStroke(e[n], i[n], r) : "gf" === e[n].ty || "gs" === e[n].ty ? this.renderGradientFill(e[n], i[n], r) : "gr" === e[n].ty ? this.renderShape(r, e[n].it, i[n].it) : e[n].ty;
            s && this.drawLayer()
        }
        ,
        CVShapeElement.prototype.renderStyledShape = function(t, e) {
            if (this._isFirstFrame || e._mdf || t.transforms._mdf) {
                var i, s, n, r = t.trNodes, a = e.paths, o = a._length;
                r.length = 0;
                var l = t.transforms.finalTransform;
                for (n = 0; n < o; n += 1) {
                    var h = a.shapes[n];
                    if (h && h.v) {
                        for (s = h._length,
                        i = 1; i < s; i += 1)
                            1 === i && r.push({
                                t: "m",
                                p: l.applyToPointArray(h.v[0][0], h.v[0][1], 0)
                            }),
                            r.push({
                                t: "c",
                                pts: l.applyToTriplePoints(h.o[i - 1], h.i[i], h.v[i])
                            });
                        1 === s && r.push({
                            t: "m",
                            p: l.applyToPointArray(h.v[0][0], h.v[0][1], 0)
                        }),
                        h.c && s && (r.push({
                            t: "c",
                            pts: l.applyToTriplePoints(h.o[i - 1], h.i[0], h.v[0])
                        }),
                        r.push({
                            t: "z"
                        }))
                    }
                }
                t.trNodes = r
            }
        }
        ,
        CVShapeElement.prototype.renderPath = function(t, e) {
            if (!0 !== t.hd && t._shouldRender) {
                var i, s = e.styledShapes.length;
                for (i = 0; i < s; i += 1)
                    this.renderStyledShape(e.styledShapes[i], e.sh)
            }
        }
        ,
        CVShapeElement.prototype.renderFill = function(t, e, i) {
            var s = e.style;
            (e.c._mdf || this._isFirstFrame) && (s.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
            (e.o._mdf || i._opMdf || this._isFirstFrame) && (s.coOp = e.o.v * i.opacity)
        }
        ,
        CVShapeElement.prototype.renderGradientFill = function(t, e, i) {
            var s, n = e.style;
            if (!n.grd || e.g._mdf || e.s._mdf || e.e._mdf || 1 !== t.t && (e.h._mdf || e.a._mdf)) {
                var r, a = this.globalData.canvasContext, o = e.s.v, l = e.e.v;
                if (1 === t.t)
                    s = a.createLinearGradient(o[0], o[1], l[0], l[1]);
                else {
                    var h = Math.sqrt(Math.pow(o[0] - l[0], 2) + Math.pow(o[1] - l[1], 2))
                      , c = Math.atan2(l[1] - o[1], l[0] - o[0])
                      , u = e.h.v;
                    u >= 1 ? u = .99 : u <= -1 && (u = -.99);
                    var p = h * u
                      , d = Math.cos(c + e.a.v) * p + o[0]
                      , f = Math.sin(c + e.a.v) * p + o[1];
                    s = a.createRadialGradient(d, f, 0, o[0], o[1], h)
                }
                var m = t.g.p
                  , g = e.g.c
                  , y = 1;
                for (r = 0; r < m; r += 1)
                    e.g._hasOpacity && e.g._collapsable && (y = e.g.o[2 * r + 1]),
                    s.addColorStop(g[4 * r] / 100, "rgba(" + g[4 * r + 1] + "," + g[4 * r + 2] + "," + g[4 * r + 3] + "," + y + ")");
                n.grd = s
            }
            n.coOp = e.o.v * i.opacity
        }
        ,
        CVShapeElement.prototype.renderStroke = function(t, e, i) {
            var s = e.style
              , n = e.d;
            n && (n._mdf || this._isFirstFrame) && (s.da = n.dashArray,
            s.do = n.dashoffset[0]),
            (e.c._mdf || this._isFirstFrame) && (s.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
            (e.o._mdf || i._opMdf || this._isFirstFrame) && (s.coOp = e.o.v * i.opacity),
            (e.w._mdf || this._isFirstFrame) && (s.wi = e.w.v)
        }
        ,
        CVShapeElement.prototype.destroy = function() {
            this.shapesData = null,
            this.globalData = null,
            this.canvasContext = null,
            this.stylesList.length = 0,
            this.itemsData.length = 0
        }
        ,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement),
        CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d"),
        CVTextElement.prototype.buildNewText = function() {
            var t = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
            var e = !1;
            t.fc ? (e = !0,
            this.values.fill = this.buildColor(t.fc)) : this.values.fill = "rgba(0,0,0,0)",
            this.fill = e;
            var i = !1;
            t.sc && (i = !0,
            this.values.stroke = this.buildColor(t.sc),
            this.values.sWidth = t.sw);
            var s, n, r, a, o, l, h, c, u, p, d, f, m = this.globalData.fontManager.getFontByName(t.f), g = t.l, y = this.mHelper;
            this.stroke = i,
            this.values.fValue = t.finalSize + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily,
            n = t.finalText.length;
            var v = this.data.singleShape
              , b = .001 * t.tr * t.finalSize
              , w = 0
              , S = 0
              , E = !0
              , P = 0;
            for (s = 0; s < n; s += 1) {
                a = (r = this.globalData.fontManager.getCharData(t.finalText[s], m.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && r.data || {},
                y.reset(),
                v && g[s].n && (w = -b,
                S += t.yOffset,
                S += E ? 1 : 0,
                E = !1),
                u = (h = a.shapes ? a.shapes[0].it : []).length,
                y.scale(t.finalSize / 100, t.finalSize / 100),
                v && this.applyTextPropertiesToMatrix(t, y, g[s].line, w, S),
                d = createSizedArray(u - 1);
                var k = 0;
                for (c = 0; c < u; c += 1)
                    if ("sh" === h[c].ty) {
                        for (l = h[c].ks.k.i.length,
                        p = h[c].ks.k,
                        f = [],
                        o = 1; o < l; o += 1)
                            1 === o && f.push(y.applyToX(p.v[0][0], p.v[0][1], 0), y.applyToY(p.v[0][0], p.v[0][1], 0)),
                            f.push(y.applyToX(p.o[o - 1][0], p.o[o - 1][1], 0), y.applyToY(p.o[o - 1][0], p.o[o - 1][1], 0), y.applyToX(p.i[o][0], p.i[o][1], 0), y.applyToY(p.i[o][0], p.i[o][1], 0), y.applyToX(p.v[o][0], p.v[o][1], 0), y.applyToY(p.v[o][0], p.v[o][1], 0));
                        f.push(y.applyToX(p.o[o - 1][0], p.o[o - 1][1], 0), y.applyToY(p.o[o - 1][0], p.o[o - 1][1], 0), y.applyToX(p.i[0][0], p.i[0][1], 0), y.applyToY(p.i[0][0], p.i[0][1], 0), y.applyToX(p.v[0][0], p.v[0][1], 0), y.applyToY(p.v[0][0], p.v[0][1], 0)),
                        d[k] = f,
                        k += 1
                    }
                v && (w += g[s].l,
                w += b),
                this.textSpans[P] ? this.textSpans[P].elem = d : this.textSpans[P] = {
                    elem: d
                },
                P += 1
            }
        }
        ,
        CVTextElement.prototype.renderInnerContent = function() {
            var t, e, i, s, n, r, a = this.canvasContext;
            a.font = this.values.fValue,
            a.lineCap = "butt",
            a.lineJoin = "miter",
            a.miterLimit = 4,
            this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
            var o, l = this.textAnimator.renderedLetters, h = this.textProperty.currentData.l;
            e = h.length;
            var c, u, p = null, d = null, f = null;
            for (t = 0; t < e; t += 1)
                if (!h[t].n) {
                    if ((o = l[t]) && (this.globalData.renderer.save(),
                    this.globalData.renderer.ctxTransform(o.p),
                    this.globalData.renderer.ctxOpacity(o.o)),
                    this.fill) {
                        for (o && o.fc ? p !== o.fc && (p = o.fc,
                        a.fillStyle = o.fc) : p !== this.values.fill && (p = this.values.fill,
                        a.fillStyle = this.values.fill),
                        s = (c = this.textSpans[t].elem).length,
                        this.globalData.canvasContext.beginPath(),
                        i = 0; i < s; i += 1)
                            for (r = (u = c[i]).length,
                            this.globalData.canvasContext.moveTo(u[0], u[1]),
                            n = 2; n < r; n += 6)
                                this.globalData.canvasContext.bezierCurveTo(u[n], u[n + 1], u[n + 2], u[n + 3], u[n + 4], u[n + 5]);
                        this.globalData.canvasContext.closePath(),
                        this.globalData.canvasContext.fill()
                    }
                    if (this.stroke) {
                        for (o && o.sw ? f !== o.sw && (f = o.sw,
                        a.lineWidth = o.sw) : f !== this.values.sWidth && (f = this.values.sWidth,
                        a.lineWidth = this.values.sWidth),
                        o && o.sc ? d !== o.sc && (d = o.sc,
                        a.strokeStyle = o.sc) : d !== this.values.stroke && (d = this.values.stroke,
                        a.strokeStyle = this.values.stroke),
                        s = (c = this.textSpans[t].elem).length,
                        this.globalData.canvasContext.beginPath(),
                        i = 0; i < s; i += 1)
                            for (r = (u = c[i]).length,
                            this.globalData.canvasContext.moveTo(u[0], u[1]),
                            n = 2; n < r; n += 6)
                                this.globalData.canvasContext.bezierCurveTo(u[n], u[n + 1], u[n + 2], u[n + 3], u[n + 4], u[n + 5]);
                        this.globalData.canvasContext.closePath(),
                        this.globalData.canvasContext.stroke()
                    }
                    o && this.globalData.renderer.restore()
                }
        }
        ,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement),
        CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement,
        CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
        CVImageElement.prototype.createContent = function() {
            if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
                var t = createTag("canvas");
                t.width = this.assetData.w,
                t.height = this.assetData.h;
                var e, i, s = t.getContext("2d"), n = this.img.width, r = this.img.height, a = n / r, o = this.assetData.w / this.assetData.h, l = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
                a > o && "xMidYMid slice" === l || a < o && "xMidYMid slice" !== l ? e = (i = r) * o : i = (e = n) / o,
                s.drawImage(this.img, (n - e) / 2, (r - i) / 2, e, i, 0, 0, this.assetData.w, this.assetData.h),
                this.img = t
            }
        }
        ,
        CVImageElement.prototype.renderInnerContent = function() {
            this.canvasContext.drawImage(this.img, 0, 0)
        }
        ,
        CVImageElement.prototype.destroy = function() {
            this.img = null
        }
        ,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement),
        CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement,
        CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
        CVSolidElement.prototype.renderInnerContent = function() {
            var t = this.canvasContext;
            t.fillStyle = this.data.sc,
            t.fillRect(0, 0, this.data.sw, this.data.sh)
        }
        ,
        extendPrototype([BaseRenderer], CanvasRendererBase),
        CanvasRendererBase.prototype.createShape = function(t) {
            return new CVShapeElement(t,this.globalData,this)
        }
        ,
        CanvasRendererBase.prototype.createText = function(t) {
            return new CVTextElement(t,this.globalData,this)
        }
        ,
        CanvasRendererBase.prototype.createImage = function(t) {
            return new CVImageElement(t,this.globalData,this)
        }
        ,
        CanvasRendererBase.prototype.createSolid = function(t) {
            return new CVSolidElement(t,this.globalData,this)
        }
        ,
        CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull,
        CanvasRendererBase.prototype.ctxTransform = function(t) {
            if (1 !== t[0] || 0 !== t[1] || 0 !== t[4] || 1 !== t[5] || 0 !== t[12] || 0 !== t[13])
                if (this.renderConfig.clearCanvas) {
                    this.transformMat.cloneFromProps(t);
                    var e = this.contextData.getTransform()
                      , i = e.props;
                    this.transformMat.transform(i[0], i[1], i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9], i[10], i[11], i[12], i[13], i[14], i[15]),
                    e.cloneFromProps(this.transformMat.props);
                    var s = e.props;
                    this.canvasContext.setTransform(s[0], s[1], s[4], s[5], s[12], s[13])
                } else
                    this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13])
        }
        ,
        CanvasRendererBase.prototype.ctxOpacity = function(t) {
            var e = this.contextData.getOpacity();
            if (!this.renderConfig.clearCanvas)
                return this.canvasContext.globalAlpha *= t < 0 ? 0 : t,
                void (this.globalData.currentGlobalAlpha = e);
            e *= t < 0 ? 0 : t,
            this.contextData.setOpacity(e),
            this.globalData.currentGlobalAlpha !== e && (this.canvasContext.globalAlpha = e,
            this.globalData.currentGlobalAlpha = e)
        }
        ,
        CanvasRendererBase.prototype.reset = function() {
            this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore()
        }
        ,
        CanvasRendererBase.prototype.save = function(t) {
            this.renderConfig.clearCanvas ? (t && this.canvasContext.save(),
            this.contextData.push()) : this.canvasContext.save()
        }
        ,
        CanvasRendererBase.prototype.restore = function(t) {
            if (this.renderConfig.clearCanvas) {
                t && (this.canvasContext.restore(),
                this.globalData.blendMode = "source-over");
                var e = this.contextData.pop()
                  , i = e.transform
                  , s = e.opacity;
                this.canvasContext.setTransform(i[0], i[1], i[4], i[5], i[12], i[13]),
                this.globalData.currentGlobalAlpha !== s && (this.canvasContext.globalAlpha = s,
                this.globalData.currentGlobalAlpha = s)
            } else
                this.canvasContext.restore()
        }
        ,
        CanvasRendererBase.prototype.configAnimation = function(t) {
            if (this.animationItem.wrapper) {
                this.animationItem.container = createTag("canvas");
                var e = this.animationItem.container.style;
                e.width = "100%",
                e.height = "100%";
                var i = "0px 0px 0px";
                e.transformOrigin = i,
                e.mozTransformOrigin = i,
                e.webkitTransformOrigin = i,
                e["-webkit-transform"] = i,
                e.contentVisibility = this.renderConfig.contentVisibility,
                this.animationItem.wrapper.appendChild(this.animationItem.container),
                this.canvasContext = this.animationItem.container.getContext("2d"),
                this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className),
                this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id)
            } else
                this.canvasContext = this.renderConfig.context;
            this.data = t,
            this.layers = t.layers,
            this.transformCanvas = {
                w: t.w,
                h: t.h,
                sx: 0,
                sy: 0,
                tx: 0,
                ty: 0
            },
            this.setupGlobalData(t, document.body),
            this.globalData.canvasContext = this.canvasContext,
            this.globalData.renderer = this,
            this.globalData.isDashed = !1,
            this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
            this.globalData.transformCanvas = this.transformCanvas,
            this.elements = createSizedArray(t.layers.length),
            this.updateContainerSize()
        }
        ,
        CanvasRendererBase.prototype.updateContainerSize = function(t, e) {
            var i, s, n, r;
            if (this.reset(),
            t ? (i = t,
            s = e,
            this.canvasContext.canvas.width = i,
            this.canvasContext.canvas.height = s) : (this.animationItem.wrapper && this.animationItem.container ? (i = this.animationItem.wrapper.offsetWidth,
            s = this.animationItem.wrapper.offsetHeight) : (i = this.canvasContext.canvas.width,
            s = this.canvasContext.canvas.height),
            this.canvasContext.canvas.width = i * this.renderConfig.dpr,
            this.canvasContext.canvas.height = s * this.renderConfig.dpr),
            -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice")) {
                var a = this.renderConfig.preserveAspectRatio.split(" ")
                  , o = a[1] || "meet"
                  , l = a[0] || "xMidYMid"
                  , h = l.substr(0, 4)
                  , c = l.substr(4);
                n = i / s,
                (r = this.transformCanvas.w / this.transformCanvas.h) > n && "meet" === o || r < n && "slice" === o ? (this.transformCanvas.sx = i / (this.transformCanvas.w / this.renderConfig.dpr),
                this.transformCanvas.sy = i / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = s / (this.transformCanvas.h / this.renderConfig.dpr),
                this.transformCanvas.sy = s / (this.transformCanvas.h / this.renderConfig.dpr)),
                this.transformCanvas.tx = "xMid" === h && (r < n && "meet" === o || r > n && "slice" === o) ? (i - this.transformCanvas.w * (s / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : "xMax" === h && (r < n && "meet" === o || r > n && "slice" === o) ? (i - this.transformCanvas.w * (s / this.transformCanvas.h)) * this.renderConfig.dpr : 0,
                this.transformCanvas.ty = "YMid" === c && (r > n && "meet" === o || r < n && "slice" === o) ? (s - this.transformCanvas.h * (i / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : "YMax" === c && (r > n && "meet" === o || r < n && "slice" === o) ? (s - this.transformCanvas.h * (i / this.transformCanvas.w)) * this.renderConfig.dpr : 0
            } else
                "none" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = i / (this.transformCanvas.w / this.renderConfig.dpr),
                this.transformCanvas.sy = s / (this.transformCanvas.h / this.renderConfig.dpr),
                this.transformCanvas.tx = 0,
                this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr,
                this.transformCanvas.sy = this.renderConfig.dpr,
                this.transformCanvas.tx = 0,
                this.transformCanvas.ty = 0);
            this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1],
            this.ctxTransform(this.transformCanvas.props),
            this.canvasContext.beginPath(),
            this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h),
            this.canvasContext.closePath(),
            this.canvasContext.clip(),
            this.renderFrame(this.renderedFrame, !0)
        }
        ,
        CanvasRendererBase.prototype.destroy = function() {
            var t;
            for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
            t = (this.layers ? this.layers.length : 0) - 1; t >= 0; t -= 1)
                this.elements[t] && this.elements[t].destroy();
            this.elements.length = 0,
            this.globalData.canvasContext = null,
            this.animationItem.container = null,
            this.destroyed = !0
        }
        ,
        CanvasRendererBase.prototype.renderFrame = function(t, e) {
            if ((this.renderedFrame !== t || !0 !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {
                var i;
                this.renderedFrame = t,
                this.globalData.frameNum = t - this.animationItem._isFirstFrame,
                this.globalData.frameId += 1,
                this.globalData._mdf = !this.renderConfig.clearCanvas || e,
                this.globalData.projectInterface.currentFrame = t;
                var s = this.layers.length;
                for (this.completeLayers || this.checkLayers(t),
                i = 0; i < s; i += 1)
                    (this.completeLayers || this.elements[i]) && this.elements[i].prepareFrame(t - this.layers[i].st);
                if (this.globalData._mdf) {
                    for (!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(),
                    i = s - 1; i >= 0; i -= 1)
                        (this.completeLayers || this.elements[i]) && this.elements[i].renderFrame();
                    !0 !== this.renderConfig.clearCanvas && this.restore()
                }
            }
        }
        ,
        CanvasRendererBase.prototype.buildItem = function(t) {
            var e = this.elements;
            if (!e[t] && 99 !== this.layers[t].ty) {
                var i = this.createItem(this.layers[t], this, this.globalData);
                e[t] = i,
                i.initExpressions()
            }
        }
        ,
        CanvasRendererBase.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; ) {
                this.pendingElements.pop().checkParenting()
            }
        }
        ,
        CanvasRendererBase.prototype.hide = function() {
            this.animationItem.container.style.display = "none"
        }
        ,
        CanvasRendererBase.prototype.show = function() {
            this.animationItem.container.style.display = "block"
        }
        ,
        extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement),
        CVCompElement.prototype.renderInnerContent = function() {
            var t, e = this.canvasContext;
            for (e.beginPath(),
            e.moveTo(0, 0),
            e.lineTo(this.data.w, 0),
            e.lineTo(this.data.w, this.data.h),
            e.lineTo(0, this.data.h),
            e.lineTo(0, 0),
            e.clip(),
            t = this.layers.length - 1; t >= 0; t -= 1)
                (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
        }
        ,
        CVCompElement.prototype.destroy = function() {
            var t;
            for (t = this.layers.length - 1; t >= 0; t -= 1)
                this.elements[t] && this.elements[t].destroy();
            this.layers = null,
            this.elements = null
        }
        ,
        CVCompElement.prototype.createComp = function(t) {
            return new CVCompElement(t,this.globalData,this)
        }
        ,
        extendPrototype([CanvasRendererBase], CanvasRenderer),
        CanvasRenderer.prototype.createComp = function(t) {
            return new CVCompElement(t,this.globalData,this)
        }
        ,
        HBaseElement.prototype = {
            checkBlendMode: function() {},
            initRendererElement: function() {
                this.baseElement = createTag(this.data.tg || "div"),
                this.data.hasMask ? (this.svgElement = createNS("svg"),
                this.layerElement = createNS("g"),
                this.maskedElement = this.layerElement,
                this.svgElement.appendChild(this.layerElement),
                this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement,
                styleDiv(this.baseElement)
            },
            createContainerElements: function() {
                this.renderableEffectsManager = new CVEffects(this),
                this.transformedElement = this.baseElement,
                this.maskedElement = this.layerElement,
                this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                0 !== this.data.bm && this.setBlendMode()
            },
            renderElement: function() {
                var t = this.transformedElement ? this.transformedElement.style : {};
                if (this.finalTransform._matMdf) {
                    var e = this.finalTransform.mat.toCSS();
                    t.transform = e,
                    t.webkitTransform = e
                }
                this.finalTransform._opMdf && (t.opacity = this.finalTransform.mProp.o.v)
            },
            renderFrame: function() {
                this.data.hd || this.hidden || (this.renderTransform(),
                this.renderRenderable(),
                this.renderElement(),
                this.renderInnerContent(),
                this._isFirstFrame && (this._isFirstFrame = !1))
            },
            destroy: function() {
                this.layerElement = null,
                this.transformedElement = null,
                this.matteElement && (this.matteElement = null),
                this.maskManager && (this.maskManager.destroy(),
                this.maskManager = null)
            },
            createRenderableComponents: function() {
                this.maskManager = new MaskElement(this.data,this,this.globalData)
            },
            addEffects: function() {},
            setMatte: function() {}
        },
        HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement,
        HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy,
        HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting,
        extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement),
        HSolidElement.prototype.createContent = function() {
            var t;
            this.data.hasMask ? ((t = createNS("rect")).setAttribute("width", this.data.sw),
            t.setAttribute("height", this.data.sh),
            t.setAttribute("fill", this.data.sc),
            this.svgElement.setAttribute("width", this.data.sw),
            this.svgElement.setAttribute("height", this.data.sh)) : ((t = createTag("div")).style.width = this.data.sw + "px",
            t.style.height = this.data.sh + "px",
            t.style.backgroundColor = this.data.sc),
            this.layerElement.appendChild(t)
        }
        ,
        extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement),
        HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent,
        HShapeElement.prototype.createContent = function() {
            var t;
            if (this.baseElement.style.fontSize = 0,
            this.data.hasMask)
                this.layerElement.appendChild(this.shapesContainer),
                t = this.svgElement;
            else {
                t = createNS("svg");
                var e = this.comp.data ? this.comp.data : this.globalData.compSize;
                t.setAttribute("width", e.w),
                t.setAttribute("height", e.h),
                t.appendChild(this.shapesContainer),
                this.layerElement.appendChild(t)
            }
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0),
            this.filterUniqueShapes(),
            this.shapeCont = t
        }
        ,
        HShapeElement.prototype.getTransformedPoint = function(t, e) {
            var i, s = t.length;
            for (i = 0; i < s; i += 1)
                e = t[i].mProps.v.applyToPointArray(e[0], e[1], 0);
            return e
        }
        ,
        HShapeElement.prototype.calculateShapeBoundingBox = function(t, e) {
            var i, s, n, r, a, o = t.sh.v, l = t.transformers, h = o._length;
            if (!(h <= 1)) {
                for (i = 0; i < h - 1; i += 1)
                    s = this.getTransformedPoint(l, o.v[i]),
                    n = this.getTransformedPoint(l, o.o[i]),
                    r = this.getTransformedPoint(l, o.i[i + 1]),
                    a = this.getTransformedPoint(l, o.v[i + 1]),
                    this.checkBounds(s, n, r, a, e);
                o.c && (s = this.getTransformedPoint(l, o.v[i]),
                n = this.getTransformedPoint(l, o.o[i]),
                r = this.getTransformedPoint(l, o.i[0]),
                a = this.getTransformedPoint(l, o.v[0]),
                this.checkBounds(s, n, r, a, e))
            }
        }
        ,
        HShapeElement.prototype.checkBounds = function(t, e, i, s, n) {
            this.getBoundsOfCurve(t, e, i, s);
            var r = this.shapeBoundingBox;
            n.x = bmMin(r.left, n.x),
            n.xMax = bmMax(r.right, n.xMax),
            n.y = bmMin(r.top, n.y),
            n.yMax = bmMax(r.bottom, n.yMax)
        }
        ,
        HShapeElement.prototype.shapeBoundingBox = {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        },
        HShapeElement.prototype.tempBoundingBox = {
            x: 0,
            xMax: 0,
            y: 0,
            yMax: 0,
            width: 0,
            height: 0
        },
        HShapeElement.prototype.getBoundsOfCurve = function(t, e, i, s) {
            for (var n, r, a, o, l, h, c, u = [[t[0], s[0]], [t[1], s[1]]], p = 0; p < 2; ++p)
                r = 6 * t[p] - 12 * e[p] + 6 * i[p],
                n = -3 * t[p] + 9 * e[p] - 9 * i[p] + 3 * s[p],
                a = 3 * e[p] - 3 * t[p],
                r |= 0,
                a |= 0,
                0 === (n |= 0) && 0 === r || (0 === n ? (o = -a / r) > 0 && o < 1 && u[p].push(this.calculateF(o, t, e, i, s, p)) : (l = r * r - 4 * a * n) >= 0 && ((h = (-r + bmSqrt(l)) / (2 * n)) > 0 && h < 1 && u[p].push(this.calculateF(h, t, e, i, s, p)),
                (c = (-r - bmSqrt(l)) / (2 * n)) > 0 && c < 1 && u[p].push(this.calculateF(c, t, e, i, s, p))));
            this.shapeBoundingBox.left = bmMin.apply(null, u[0]),
            this.shapeBoundingBox.top = bmMin.apply(null, u[1]),
            this.shapeBoundingBox.right = bmMax.apply(null, u[0]),
            this.shapeBoundingBox.bottom = bmMax.apply(null, u[1])
        }
        ,
        HShapeElement.prototype.calculateF = function(t, e, i, s, n, r) {
            return bmPow(1 - t, 3) * e[r] + 3 * bmPow(1 - t, 2) * t * i[r] + 3 * (1 - t) * bmPow(t, 2) * s[r] + bmPow(t, 3) * n[r]
        }
        ,
        HShapeElement.prototype.calculateBoundingBox = function(t, e) {
            var i, s = t.length;
            for (i = 0; i < s; i += 1)
                t[i] && t[i].sh ? this.calculateShapeBoundingBox(t[i], e) : t[i] && t[i].it ? this.calculateBoundingBox(t[i].it, e) : t[i] && t[i].style && t[i].w && this.expandStrokeBoundingBox(t[i].w, e)
        }
        ,
        HShapeElement.prototype.expandStrokeBoundingBox = function(t, e) {
            var i = 0;
            if (t.keyframes) {
                for (var s = 0; s < t.keyframes.length; s += 1) {
                    var n = t.keyframes[s].s;
                    n > i && (i = n)
                }
                i *= t.mult
            } else
                i = t.v * t.mult;
            e.x -= i,
            e.xMax += i,
            e.y -= i,
            e.yMax += i
        }
        ,
        HShapeElement.prototype.currentBoxContains = function(t) {
            return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height
        }
        ,
        HShapeElement.prototype.renderInnerContent = function() {
            if (this._renderShapeFrame(),
            !this.hidden && (this._isFirstFrame || this._mdf)) {
                var t = this.tempBoundingBox
                  , e = 999999;
                if (t.x = e,
                t.xMax = -e,
                t.y = e,
                t.yMax = -e,
                this.calculateBoundingBox(this.itemsData, t),
                t.width = t.xMax < t.x ? 0 : t.xMax - t.x,
                t.height = t.yMax < t.y ? 0 : t.yMax - t.y,
                this.currentBoxContains(t))
                    return;
                var i = !1;
                if (this.currentBBox.w !== t.width && (this.currentBBox.w = t.width,
                this.shapeCont.setAttribute("width", t.width),
                i = !0),
                this.currentBBox.h !== t.height && (this.currentBBox.h = t.height,
                this.shapeCont.setAttribute("height", t.height),
                i = !0),
                i || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y) {
                    this.currentBBox.w = t.width,
                    this.currentBBox.h = t.height,
                    this.currentBBox.x = t.x,
                    this.currentBBox.y = t.y,
                    this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
                    var s = this.shapeCont.style
                      , n = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                    s.transform = n,
                    s.webkitTransform = n
                }
            }
        }
        ,
        extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement),
        HTextElement.prototype.createContent = function() {
            if (this.isMasked = this.checkMasks(),
            this.isMasked) {
                this.renderType = "svg",
                this.compW = this.comp.data.w,
                this.compH = this.comp.data.h,
                this.svgElement.setAttribute("width", this.compW),
                this.svgElement.setAttribute("height", this.compH);
                var t = createNS("g");
                this.maskedElement.appendChild(t),
                this.innerElem = t
            } else
                this.renderType = "html",
                this.innerElem = this.layerElement;
            this.checkParenting()
        }
        ,
        HTextElement.prototype.buildNewText = function() {
            var t = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
            var e = this.innerElem.style
              , i = t.fc ? this.buildColor(t.fc) : "rgba(0,0,0,0)";
            e.fill = i,
            e.color = i,
            t.sc && (e.stroke = this.buildColor(t.sc),
            e.strokeWidth = t.sw + "px");
            var s, n, r = this.globalData.fontManager.getFontByName(t.f);
            if (!this.globalData.fontManager.chars)
                if (e.fontSize = t.finalSize + "px",
                e.lineHeight = t.finalSize + "px",
                r.fClass)
                    this.innerElem.className = r.fClass;
                else {
                    e.fontFamily = r.fFamily;
                    var a = t.fWeight
                      , o = t.fStyle;
                    e.fontStyle = o,
                    e.fontWeight = a
                }
            var l, h, c, u = t.l;
            n = u.length;
            var p, d = this.mHelper, f = "", m = 0;
            for (s = 0; s < n; s += 1) {
                if (this.globalData.fontManager.chars ? (this.textPaths[m] ? l = this.textPaths[m] : ((l = createNS("path")).setAttribute("stroke-linecap", lineCapEnum[1]),
                l.setAttribute("stroke-linejoin", lineJoinEnum[2]),
                l.setAttribute("stroke-miterlimit", "4")),
                this.isMasked || (this.textSpans[m] ? c = (h = this.textSpans[m]).children[0] : ((h = createTag("div")).style.lineHeight = 0,
                (c = createNS("svg")).appendChild(l),
                styleDiv(h)))) : this.isMasked ? l = this.textPaths[m] ? this.textPaths[m] : createNS("text") : this.textSpans[m] ? (h = this.textSpans[m],
                l = this.textPaths[m]) : (styleDiv(h = createTag("span")),
                styleDiv(l = createTag("span")),
                h.appendChild(l)),
                this.globalData.fontManager.chars) {
                    var g, y = this.globalData.fontManager.getCharData(t.finalText[s], r.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                    if (g = y ? y.data : null,
                    d.reset(),
                    g && g.shapes && g.shapes.length && (p = g.shapes[0].it,
                    d.scale(t.finalSize / 100, t.finalSize / 100),
                    f = this.createPathShape(d, p),
                    l.setAttribute("d", f)),
                    this.isMasked)
                        this.innerElem.appendChild(l);
                    else {
                        if (this.innerElem.appendChild(h),
                        g && g.shapes) {
                            document.body.appendChild(c);
                            var v = c.getBBox();
                            c.setAttribute("width", v.width + 2),
                            c.setAttribute("height", v.height + 2),
                            c.setAttribute("viewBox", v.x - 1 + " " + (v.y - 1) + " " + (v.width + 2) + " " + (v.height + 2));
                            var b = c.style
                              , w = "translate(" + (v.x - 1) + "px," + (v.y - 1) + "px)";
                            b.transform = w,
                            b.webkitTransform = w,
                            u[s].yOffset = v.y - 1
                        } else
                            c.setAttribute("width", 1),
                            c.setAttribute("height", 1);
                        h.appendChild(c)
                    }
                } else if (l.textContent = u[s].val,
                l.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"),
                this.isMasked)
                    this.innerElem.appendChild(l);
                else {
                    this.innerElem.appendChild(h);
                    var S = l.style
                      , E = "translate3d(0," + -t.finalSize / 1.2 + "px,0)";
                    S.transform = E,
                    S.webkitTransform = E
                }
                this.isMasked ? this.textSpans[m] = l : this.textSpans[m] = h,
                this.textSpans[m].style.display = "block",
                this.textPaths[m] = l,
                m += 1
            }
            for (; m < this.textSpans.length; )
                this.textSpans[m].style.display = "none",
                m += 1
        }
        ,
        HTextElement.prototype.renderInnerContent = function() {
            var t;
            if (this.data.singleShape) {
                if (!this._isFirstFrame && !this.lettersChangedFlag)
                    return;
                if (this.isMasked && this.finalTransform._matMdf) {
                    this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH),
                    t = this.svgElement.style;
                    var e = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
                    t.transform = e,
                    t.webkitTransform = e
                }
            }
            if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
            this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
                var i, s, n, r, a, o = 0, l = this.textAnimator.renderedLetters, h = this.textProperty.currentData.l;
                for (s = h.length,
                i = 0; i < s; i += 1)
                    h[i].n ? o += 1 : (r = this.textSpans[i],
                    a = this.textPaths[i],
                    n = l[o],
                    o += 1,
                    n._mdf.m && (this.isMasked ? r.setAttribute("transform", n.m) : (r.style.webkitTransform = n.m,
                    r.style.transform = n.m)),
                    r.style.opacity = n.o,
                    n.sw && n._mdf.sw && a.setAttribute("stroke-width", n.sw),
                    n.sc && n._mdf.sc && a.setAttribute("stroke", n.sc),
                    n.fc && n._mdf.fc && (a.setAttribute("fill", n.fc),
                    a.style.color = n.fc));
                if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                    var c = this.innerElem.getBBox();
                    this.currentBBox.w !== c.width && (this.currentBBox.w = c.width,
                    this.svgElement.setAttribute("width", c.width)),
                    this.currentBBox.h !== c.height && (this.currentBBox.h = c.height,
                    this.svgElement.setAttribute("height", c.height));
                    if (this.currentBBox.w !== c.width + 2 || this.currentBBox.h !== c.height + 2 || this.currentBBox.x !== c.x - 1 || this.currentBBox.y !== c.y - 1) {
                        this.currentBBox.w = c.width + 2,
                        this.currentBBox.h = c.height + 2,
                        this.currentBBox.x = c.x - 1,
                        this.currentBBox.y = c.y - 1,
                        this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h),
                        t = this.svgElement.style;
                        var u = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                        t.transform = u,
                        t.webkitTransform = u
                    }
                }
            }
        }
        ,
        extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement),
        HCameraElement.prototype.setup = function() {
            var t, e, i, s, n = this.comp.threeDElements.length;
            for (t = 0; t < n; t += 1)
                if ("3d" === (e = this.comp.threeDElements[t]).type) {
                    i = e.perspectiveElem.style,
                    s = e.container.style;
                    var r = this.pe.v + "px"
                      , a = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                    i.perspective = r,
                    i.webkitPerspective = r,
                    s.transformOrigin = "0px 0px 0px",
                    s.mozTransformOrigin = "0px 0px 0px",
                    s.webkitTransformOrigin = "0px 0px 0px",
                    i.transform = a,
                    i.webkitTransform = a
                }
        }
        ,
        HCameraElement.prototype.createElements = function() {}
        ,
        HCameraElement.prototype.hide = function() {}
        ,
        HCameraElement.prototype.renderFrame = function() {
            var t, e, i = this._isFirstFrame;
            if (this.hierarchy)
                for (e = this.hierarchy.length,
                t = 0; t < e; t += 1)
                    i = this.hierarchy[t].finalTransform.mProp._mdf || i;
            if (i || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
                if (this.mat.reset(),
                this.hierarchy)
                    for (t = e = this.hierarchy.length - 1; t >= 0; t -= 1) {
                        var s = this.hierarchy[t].finalTransform.mProp;
                        this.mat.translate(-s.p.v[0], -s.p.v[1], s.p.v[2]),
                        this.mat.rotateX(-s.or.v[0]).rotateY(-s.or.v[1]).rotateZ(s.or.v[2]),
                        this.mat.rotateX(-s.rx.v).rotateY(-s.ry.v).rotateZ(s.rz.v),
                        this.mat.scale(1 / s.s.v[0], 1 / s.s.v[1], 1 / s.s.v[2]),
                        this.mat.translate(s.a.v[0], s.a.v[1], s.a.v[2])
                    }
                if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v),
                this.a) {
                    var n;
                    n = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                    var r = Math.sqrt(Math.pow(n[0], 2) + Math.pow(n[1], 2) + Math.pow(n[2], 2))
                      , a = [n[0] / r, n[1] / r, n[2] / r]
                      , o = Math.sqrt(a[2] * a[2] + a[0] * a[0])
                      , l = Math.atan2(a[1], o)
                      , h = Math.atan2(a[0], -a[2]);
                    this.mat.rotateY(h).rotateX(-l)
                }
                this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),
                this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]),
                this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0),
                this.mat.translate(0, 0, this.pe.v);
                var c = !this._prevMat.equals(this.mat);
                if ((c || this.pe._mdf) && this.comp.threeDElements) {
                    var u, p, d;
                    for (e = this.comp.threeDElements.length,
                    t = 0; t < e; t += 1)
                        if ("3d" === (u = this.comp.threeDElements[t]).type) {
                            if (c) {
                                var f = this.mat.toCSS();
                                (d = u.container.style).transform = f,
                                d.webkitTransform = f
                            }
                            this.pe._mdf && ((p = u.perspectiveElem.style).perspective = this.pe.v + "px",
                            p.webkitPerspective = this.pe.v + "px")
                        }
                    this.mat.clone(this._prevMat)
                }
            }
            this._isFirstFrame = !1
        }
        ,
        HCameraElement.prototype.prepareFrame = function(t) {
            this.prepareProperties(t, !0)
        }
        ,
        HCameraElement.prototype.destroy = function() {}
        ,
        HCameraElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement),
        HImageElement.prototype.createContent = function() {
            var t = this.globalData.getAssetsPath(this.assetData)
              , e = new Image;
            this.data.hasMask ? (this.imageElem = createNS("image"),
            this.imageElem.setAttribute("width", this.assetData.w + "px"),
            this.imageElem.setAttribute("height", this.assetData.h + "px"),
            this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t),
            this.layerElement.appendChild(this.imageElem),
            this.baseElement.setAttribute("width", this.assetData.w),
            this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(e),
            e.crossOrigin = "anonymous",
            e.src = t,
            this.data.ln && this.baseElement.setAttribute("id", this.data.ln)
        }
        ,
        extendPrototype([BaseRenderer], HybridRendererBase),
        HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem,
        HybridRendererBase.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; ) {
                this.pendingElements.pop().checkParenting()
            }
        }
        ,
        HybridRendererBase.prototype.appendElementInPos = function(t, e) {
            var i = t.getBaseElement();
            if (i) {
                var s = this.layers[e];
                if (s.ddd && this.supports3d)
                    this.addTo3dContainer(i, e);
                else if (this.threeDElements)
                    this.addTo3dContainer(i, e);
                else {
                    for (var n, r, a = 0; a < e; )
                        this.elements[a] && !0 !== this.elements[a] && this.elements[a].getBaseElement && (r = this.elements[a],
                        n = (this.layers[a].ddd ? this.getThreeDContainerByPos(a) : r.getBaseElement()) || n),
                        a += 1;
                    n ? s.ddd && this.supports3d || this.layerElement.insertBefore(i, n) : s.ddd && this.supports3d || this.layerElement.appendChild(i)
                }
            }
        }
        ,
        HybridRendererBase.prototype.createShape = function(t) {
            return this.supports3d ? new HShapeElement(t,this.globalData,this) : new SVGShapeElement(t,this.globalData,this)
        }
        ,
        HybridRendererBase.prototype.createText = function(t) {
            return this.supports3d ? new HTextElement(t,this.globalData,this) : new SVGTextLottieElement(t,this.globalData,this)
        }
        ,
        HybridRendererBase.prototype.createCamera = function(t) {
            return this.camera = new HCameraElement(t,this.globalData,this),
            this.camera
        }
        ,
        HybridRendererBase.prototype.createImage = function(t) {
            return this.supports3d ? new HImageElement(t,this.globalData,this) : new IImageElement(t,this.globalData,this)
        }
        ,
        HybridRendererBase.prototype.createSolid = function(t) {
            return this.supports3d ? new HSolidElement(t,this.globalData,this) : new ISolidElement(t,this.globalData,this)
        }
        ,
        HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull,
        HybridRendererBase.prototype.getThreeDContainerByPos = function(t) {
            for (var e = 0, i = this.threeDElements.length; e < i; ) {
                if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t)
                    return this.threeDElements[e].perspectiveElem;
                e += 1
            }
            return null
        }
        ,
        HybridRendererBase.prototype.createThreeDContainer = function(t, e) {
            var i, s, n = createTag("div");
            styleDiv(n);
            var r = createTag("div");
            if (styleDiv(r),
            "3d" === e) {
                (i = n.style).width = this.globalData.compSize.w + "px",
                i.height = this.globalData.compSize.h + "px";
                i.webkitTransformOrigin = "50% 50%",
                i.mozTransformOrigin = "50% 50%",
                i.transformOrigin = "50% 50%";
                var a = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                (s = r.style).transform = a,
                s.webkitTransform = a
            }
            n.appendChild(r);
            var o = {
                container: r,
                perspectiveElem: n,
                startPos: t,
                endPos: t,
                type: e
            };
            return this.threeDElements.push(o),
            o
        }
        ,
        HybridRendererBase.prototype.build3dContainers = function() {
            var t, e, i = this.layers.length, s = "";
            for (t = 0; t < i; t += 1)
                this.layers[t].ddd && 3 !== this.layers[t].ty ? ("3d" !== s && (s = "3d",
                e = this.createThreeDContainer(t, "3d")),
                e.endPos = Math.max(e.endPos, t)) : ("2d" !== s && (s = "2d",
                e = this.createThreeDContainer(t, "2d")),
                e.endPos = Math.max(e.endPos, t));
            for (t = (i = this.threeDElements.length) - 1; t >= 0; t -= 1)
                this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem)
        }
        ,
        HybridRendererBase.prototype.addTo3dContainer = function(t, e) {
            for (var i = 0, s = this.threeDElements.length; i < s; ) {
                if (e <= this.threeDElements[i].endPos) {
                    for (var n, r = this.threeDElements[i].startPos; r < e; )
                        this.elements[r] && this.elements[r].getBaseElement && (n = this.elements[r].getBaseElement()),
                        r += 1;
                    n ? this.threeDElements[i].container.insertBefore(t, n) : this.threeDElements[i].container.appendChild(t);
                    break
                }
                i += 1
            }
        }
        ,
        HybridRendererBase.prototype.configAnimation = function(t) {
            var e = createTag("div")
              , i = this.animationItem.wrapper
              , s = e.style;
            s.width = t.w + "px",
            s.height = t.h + "px",
            this.resizerElem = e,
            styleDiv(e),
            s.transformStyle = "flat",
            s.mozTransformStyle = "flat",
            s.webkitTransformStyle = "flat",
            this.renderConfig.className && e.setAttribute("class", this.renderConfig.className),
            i.appendChild(e),
            s.overflow = "hidden";
            var n = createNS("svg");
            n.setAttribute("width", "1"),
            n.setAttribute("height", "1"),
            styleDiv(n),
            this.resizerElem.appendChild(n);
            var r = createNS("defs");
            n.appendChild(r),
            this.data = t,
            this.setupGlobalData(t, n),
            this.globalData.defs = r,
            this.layers = t.layers,
            this.layerElement = this.resizerElem,
            this.build3dContainers(),
            this.updateContainerSize()
        }
        ,
        HybridRendererBase.prototype.destroy = function() {
            var t;
            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
            this.animationItem.container = null,
            this.globalData.defs = null;
            var e = this.layers ? this.layers.length : 0;
            for (t = 0; t < e; t += 1)
                this.elements[t].destroy();
            this.elements.length = 0,
            this.destroyed = !0,
            this.animationItem = null
        }
        ,
        HybridRendererBase.prototype.updateContainerSize = function() {
            var t, e, i, s, n = this.animationItem.wrapper.offsetWidth, r = this.animationItem.wrapper.offsetHeight, a = n / r;
            this.globalData.compSize.w / this.globalData.compSize.h > a ? (t = n / this.globalData.compSize.w,
            e = n / this.globalData.compSize.w,
            i = 0,
            s = (r - this.globalData.compSize.h * (n / this.globalData.compSize.w)) / 2) : (t = r / this.globalData.compSize.h,
            e = r / this.globalData.compSize.h,
            i = (n - this.globalData.compSize.w * (r / this.globalData.compSize.h)) / 2,
            s = 0);
            var o = this.resizerElem.style;
            o.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + i + "," + s + ",0,1)",
            o.transform = o.webkitTransform
        }
        ,
        HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame,
        HybridRendererBase.prototype.hide = function() {
            this.resizerElem.style.display = "none"
        }
        ,
        HybridRendererBase.prototype.show = function() {
            this.resizerElem.style.display = "block"
        }
        ,
        HybridRendererBase.prototype.initItems = function() {
            if (this.buildAllItems(),
            this.camera)
                this.camera.setup();
            else {
                var t, e = this.globalData.compSize.w, i = this.globalData.compSize.h, s = this.threeDElements.length;
                for (t = 0; t < s; t += 1) {
                    var n = this.threeDElements[t].perspectiveElem.style;
                    n.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(i, 2)) + "px",
                    n.perspective = n.webkitPerspective
                }
            }
        }
        ,
        HybridRendererBase.prototype.searchExtraCompositions = function(t) {
            var e, i = t.length, s = createTag("div");
            for (e = 0; e < i; e += 1)
                if (t[e].xt) {
                    var n = this.createComp(t[e], s, this.globalData.comp, null);
                    n.initExpressions(),
                    this.globalData.projectInterface.registerComposition(n)
                }
        }
        ,
        extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement),
        HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements,
        HCompElement.prototype.createContainerElements = function() {
            this._createBaseContainerElements(),
            this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w),
            this.svgElement.setAttribute("height", this.data.h),
            this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement
        }
        ,
        HCompElement.prototype.addTo3dContainer = function(t, e) {
            for (var i, s = 0; s < e; )
                this.elements[s] && this.elements[s].getBaseElement && (i = this.elements[s].getBaseElement()),
                s += 1;
            i ? this.layerElement.insertBefore(t, i) : this.layerElement.appendChild(t)
        }
        ,
        HCompElement.prototype.createComp = function(t) {
            return this.supports3d ? new HCompElement(t,this.globalData,this) : new SVGCompElement(t,this.globalData,this)
        }
        ,
        extendPrototype([HybridRendererBase], HybridRenderer),
        HybridRenderer.prototype.createComp = function(t) {
            return this.supports3d ? new HCompElement(t,this.globalData,this) : new SVGCompElement(t,this.globalData,this)
        }
        ;
        var CompExpressionInterface = function(t) {
            function e(e) {
                for (var i = 0, s = t.layers.length; i < s; ) {
                    if (t.layers[i].nm === e || t.layers[i].ind === e)
                        return t.elements[i].layerInterface;
                    i += 1
                }
                return null
            }
            return Object.defineProperty(e, "_name", {
                value: t.data.nm
            }),
            e.layer = e,
            e.pixelAspect = 1,
            e.height = t.data.h || t.globalData.compSize.h,
            e.width = t.data.w || t.globalData.compSize.w,
            e.pixelAspect = 1,
            e.frameDuration = 1 / t.globalData.frameRate,
            e.displayStartTime = 0,
            e.numLayers = t.layers.length,
            e
        }
          , Expressions = function() {
            var t = {};
            return t.initExpressions = function(t) {
                var e = 0
                  , i = [];
                t.renderer.compInterface = CompExpressionInterface(t.renderer),
                t.renderer.globalData.projectInterface.registerComposition(t.renderer),
                t.renderer.globalData.pushExpression = function() {
                    e += 1
                }
                ,
                t.renderer.globalData.popExpression = function() {
                    0 === (e -= 1) && function() {
                        var t, e = i.length;
                        for (t = 0; t < e; t += 1)
                            i[t].release();
                        i.length = 0
                    }()
                }
                ,
                t.renderer.globalData.registerExpressionProperty = function(t) {
                    -1 === i.indexOf(t) && i.push(t)
                }
            }
            ,
            t
        }()
          , MaskManagerInterface = function() {
            function t(t, e) {
                this._mask = t,
                this._data = e
            }
            Object.defineProperty(t.prototype, "maskPath", {
                get: function() {
                    return this._mask.prop.k && this._mask.prop.getValue(),
                    this._mask.prop
                }
            }),
            Object.defineProperty(t.prototype, "maskOpacity", {
                get: function() {
                    return this._mask.op.k && this._mask.op.getValue(),
                    100 * this._mask.op.v
                }
            });
            return function(e) {
                var i, s = createSizedArray(e.viewData.length), n = e.viewData.length;
                for (i = 0; i < n; i += 1)
                    s[i] = new t(e.viewData[i],e.masksProperties[i]);
                return function(t) {
                    for (i = 0; i < n; ) {
                        if (e.masksProperties[i].nm === t)
                            return s[i];
                        i += 1
                    }
                    return null
                }
            }
        }()
          , ExpressionPropertyInterface = function() {
            var t = {
                pv: 0,
                v: 0,
                mult: 1
            }
              , e = {
                pv: [0, 0, 0],
                v: [0, 0, 0],
                mult: 1
            };
            function i(t, e, i) {
                Object.defineProperty(t, "velocity", {
                    get: function() {
                        return e.getVelocityAtTime(e.comp.currentFrame)
                    }
                }),
                t.numKeys = e.keyframes ? e.keyframes.length : 0,
                t.key = function(s) {
                    if (!t.numKeys)
                        return 0;
                    var n = "";
                    n = "s"in e.keyframes[s - 1] ? e.keyframes[s - 1].s : "e"in e.keyframes[s - 2] ? e.keyframes[s - 2].e : e.keyframes[s - 2].s;
                    var r = "unidimensional" === i ? new Number(n) : Object.assign({}, n);
                    return r.time = e.keyframes[s - 1].t / e.elem.comp.globalData.frameRate,
                    r.value = "unidimensional" === i ? n[0] : n,
                    r
                }
                ,
                t.valueAtTime = e.getValueAtTime,
                t.speedAtTime = e.getSpeedAtTime,
                t.velocityAtTime = e.getVelocityAtTime,
                t.propertyGroup = e.propertyGroup
            }
            function s() {
                return t
            }
            return function(n) {
                return n ? "unidimensional" === n.propType ? function(e) {
                    e && "pv"in e || (e = t);
                    var s = 1 / e.mult
                      , n = e.pv * s
                      , r = new Number(n);
                    return r.value = n,
                    i(r, e, "unidimensional"),
                    function() {
                        return e.k && e.getValue(),
                        n = e.v * s,
                        r.value !== n && ((r = new Number(n)).value = n,
                        i(r, e, "unidimensional")),
                        r
                    }
                }(n) : function(t) {
                    t && "pv"in t || (t = e);
                    var s = 1 / t.mult
                      , n = t.data && t.data.l || t.pv.length
                      , r = createTypedArray("float32", n)
                      , a = createTypedArray("float32", n);
                    return r.value = a,
                    i(r, t, "multidimensional"),
                    function() {
                        t.k && t.getValue();
                        for (var e = 0; e < n; e += 1)
                            a[e] = t.v[e] * s,
                            r[e] = a[e];
                        return r
                    }
                }(n) : s
            }
        }()
          , TransformExpressionInterface = function(t) {
            function e(t) {
                switch (t) {
                case "scale":
                case "Scale":
                case "ADBE Scale":
                case 6:
                    return e.scale;
                case "rotation":
                case "Rotation":
                case "ADBE Rotation":
                case "ADBE Rotate Z":
                case 10:
                    return e.rotation;
                case "ADBE Rotate X":
                    return e.xRotation;
                case "ADBE Rotate Y":
                    return e.yRotation;
                case "position":
                case "Position":
                case "ADBE Position":
                case 2:
                    return e.position;
                case "ADBE Position_0":
                    return e.xPosition;
                case "ADBE Position_1":
                    return e.yPosition;
                case "ADBE Position_2":
                    return e.zPosition;
                case "anchorPoint":
                case "AnchorPoint":
                case "Anchor Point":
                case "ADBE AnchorPoint":
                case 1:
                    return e.anchorPoint;
                case "opacity":
                case "Opacity":
                case 11:
                    return e.opacity;
                default:
                    return null
                }
            }
            var i, s, n, r;
            return Object.defineProperty(e, "rotation", {
                get: ExpressionPropertyInterface(t.r || t.rz)
            }),
            Object.defineProperty(e, "zRotation", {
                get: ExpressionPropertyInterface(t.rz || t.r)
            }),
            Object.defineProperty(e, "xRotation", {
                get: ExpressionPropertyInterface(t.rx)
            }),
            Object.defineProperty(e, "yRotation", {
                get: ExpressionPropertyInterface(t.ry)
            }),
            Object.defineProperty(e, "scale", {
                get: ExpressionPropertyInterface(t.s)
            }),
            t.p ? r = ExpressionPropertyInterface(t.p) : (i = ExpressionPropertyInterface(t.px),
            s = ExpressionPropertyInterface(t.py),
            t.pz && (n = ExpressionPropertyInterface(t.pz))),
            Object.defineProperty(e, "position", {
                get: function() {
                    return t.p ? r() : [i(), s(), n ? n() : 0]
                }
            }),
            Object.defineProperty(e, "xPosition", {
                get: ExpressionPropertyInterface(t.px)
            }),
            Object.defineProperty(e, "yPosition", {
                get: ExpressionPropertyInterface(t.py)
            }),
            Object.defineProperty(e, "zPosition", {
                get: ExpressionPropertyInterface(t.pz)
            }),
            Object.defineProperty(e, "anchorPoint", {
                get: ExpressionPropertyInterface(t.a)
            }),
            Object.defineProperty(e, "opacity", {
                get: ExpressionPropertyInterface(t.o)
            }),
            Object.defineProperty(e, "skew", {
                get: ExpressionPropertyInterface(t.sk)
            }),
            Object.defineProperty(e, "skewAxis", {
                get: ExpressionPropertyInterface(t.sa)
            }),
            Object.defineProperty(e, "orientation", {
                get: ExpressionPropertyInterface(t.or)
            }),
            e
        }
          , LayerExpressionInterface = function() {
            function t(t) {
                var e = new Matrix;
                void 0 !== t ? this._elem.finalTransform.mProp.getValueAtTime(t).clone(e) : this._elem.finalTransform.mProp.applyToMatrix(e);
                return e
            }
            function e(t, e) {
                var i = this.getMatrix(e);
                return i.props[12] = 0,
                i.props[13] = 0,
                i.props[14] = 0,
                this.applyPoint(i, t)
            }
            function i(t, e) {
                var i = this.getMatrix(e);
                return this.applyPoint(i, t)
            }
            function s(t, e) {
                var i = this.getMatrix(e);
                return i.props[12] = 0,
                i.props[13] = 0,
                i.props[14] = 0,
                this.invertPoint(i, t)
            }
            function n(t, e) {
                var i = this.getMatrix(e);
                return this.invertPoint(i, t)
            }
            function r(t, e) {
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var i, s = this._elem.hierarchy.length;
                    for (i = 0; i < s; i += 1)
                        this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(t)
                }
                return t.applyToPointArray(e[0], e[1], e[2] || 0)
            }
            function a(t, e) {
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var i, s = this._elem.hierarchy.length;
                    for (i = 0; i < s; i += 1)
                        this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(t)
                }
                return t.inversePoint(e)
            }
            function o(t) {
                var e = new Matrix;
                if (e.reset(),
                this._elem.finalTransform.mProp.applyToMatrix(e),
                this._elem.hierarchy && this._elem.hierarchy.length) {
                    var i, s = this._elem.hierarchy.length;
                    for (i = 0; i < s; i += 1)
                        this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(e);
                    return e.inversePoint(t)
                }
                return e.inversePoint(t)
            }
            function l() {
                return [1, 1, 1, 1]
            }
            return function(h) {
                var c;
                function u(t) {
                    switch (t) {
                    case "ADBE Root Vectors Group":
                    case "Contents":
                    case 2:
                        return u.shapeInterface;
                    case 1:
                    case 6:
                    case "Transform":
                    case "transform":
                    case "ADBE Transform Group":
                        return c;
                    case 4:
                    case "ADBE Effect Parade":
                    case "effects":
                    case "Effects":
                        return u.effect;
                    case "ADBE Text Properties":
                        return u.textInterface;
                    default:
                        return null
                    }
                }
                u.getMatrix = t,
                u.invertPoint = a,
                u.applyPoint = r,
                u.toWorld = i,
                u.toWorldVec = e,
                u.fromWorld = n,
                u.fromWorldVec = s,
                u.toComp = i,
                u.fromComp = o,
                u.sampleImage = l,
                u.sourceRectAtTime = h.sourceRectAtTime.bind(h),
                u._elem = h;
                var p = getDescriptor(c = TransformExpressionInterface(h.finalTransform.mProp), "anchorPoint");
                return Object.defineProperties(u, {
                    hasParent: {
                        get: function() {
                            return h.hierarchy.length
                        }
                    },
                    parent: {
                        get: function() {
                            return h.hierarchy[0].layerInterface
                        }
                    },
                    rotation: getDescriptor(c, "rotation"),
                    scale: getDescriptor(c, "scale"),
                    position: getDescriptor(c, "position"),
                    opacity: getDescriptor(c, "opacity"),
                    anchorPoint: p,
                    anchor_point: p,
                    transform: {
                        get: function() {
                            return c
                        }
                    },
                    active: {
                        get: function() {
                            return h.isInRange
                        }
                    }
                }),
                u.startTime = h.data.st,
                u.index = h.data.ind,
                u.source = h.data.refId,
                u.height = 0 === h.data.ty ? h.data.h : 100,
                u.width = 0 === h.data.ty ? h.data.w : 100,
                u.inPoint = h.data.ip / h.comp.globalData.frameRate,
                u.outPoint = h.data.op / h.comp.globalData.frameRate,
                u._name = h.data.nm,
                u.registerMaskInterface = function(t) {
                    u.mask = new MaskManagerInterface(t,h)
                }
                ,
                u.registerEffectsInterface = function(t) {
                    u.effect = t
                }
                ,
                u
            }
        }()
          , propertyGroupFactory = function(t, e) {
            return function(i) {
                return (i = void 0 === i ? 1 : i) <= 0 ? t : e(i - 1)
            }
        }
          , PropertyInterface = function(t, e) {
            var i = {
                _name: t
            };
            return function(t) {
                return (t = void 0 === t ? 1 : t) <= 0 ? i : e(t - 1)
            }
        }
          , EffectsExpressionInterface = function() {
            function t(i, s, n, r) {
                function a(t) {
                    for (var e = i.ef, s = 0, n = e.length; s < n; ) {
                        if (t === e[s].nm || t === e[s].mn || t === e[s].ix)
                            return 5 === e[s].ty ? h[s] : h[s]();
                        s += 1
                    }
                    throw new Error
                }
                var o, l = propertyGroupFactory(a, n), h = [], c = i.ef.length;
                for (o = 0; o < c; o += 1)
                    5 === i.ef[o].ty ? h.push(t(i.ef[o], s.effectElements[o], s.effectElements[o].propertyGroup, r)) : h.push(e(s.effectElements[o], i.ef[o].ty, r, l));
                return "ADBE Color Control" === i.mn && Object.defineProperty(a, "color", {
                    get: function() {
                        return h[0]()
                    }
                }),
                Object.defineProperties(a, {
                    numProperties: {
                        get: function() {
                            return i.np
                        }
                    },
                    _name: {
                        value: i.nm
                    },
                    propertyGroup: {
                        value: l
                    }
                }),
                a.enabled = 0 !== i.en,
                a.active = a.enabled,
                a
            }
            function e(t, e, i, s) {
                var n = ExpressionPropertyInterface(t.p);
                return t.p.setGroupProperty && t.p.setGroupProperty(PropertyInterface("", s)),
                function() {
                    return 10 === e ? i.comp.compInterface(t.p.v) : n()
                }
            }
            return {
                createEffectsInterface: function(e, i) {
                    if (e.effectsManager) {
                        var s, n = [], r = e.data.ef, a = e.effectsManager.effectElements.length;
                        for (s = 0; s < a; s += 1)
                            n.push(t(r[s], e.effectsManager.effectElements[s], i, e));
                        var o = e.data.ef || []
                          , l = function(t) {
                            for (s = 0,
                            a = o.length; s < a; ) {
                                if (t === o[s].nm || t === o[s].mn || t === o[s].ix)
                                    return n[s];
                                s += 1
                            }
                            return null
                        };
                        return Object.defineProperty(l, "numProperties", {
                            get: function() {
                                return o.length
                            }
                        }),
                        l
                    }
                    return null
                }
            }
        }()
          , ShapePathInterface = function(t, e, i) {
            var s = e.sh;
            function n(t) {
                return "Shape" === t || "shape" === t || "Path" === t || "path" === t || "ADBE Vector Shape" === t || 2 === t ? n.path : null
            }
            var r = propertyGroupFactory(n, i);
            return s.setGroupProperty(PropertyInterface("Path", r)),
            Object.defineProperties(n, {
                path: {
                    get: function() {
                        return s.k && s.getValue(),
                        s
                    }
                },
                shape: {
                    get: function() {
                        return s.k && s.getValue(),
                        s
                    }
                },
                _name: {
                    value: t.nm
                },
                ix: {
                    value: t.ix
                },
                propertyIndex: {
                    value: t.ix
                },
                mn: {
                    value: t.mn
                },
                propertyGroup: {
                    value: i
                }
            }),
            n
        }
          , ShapeExpressionInterface = function() {
            function t(t, o, d) {
                var f, m = [], g = t ? t.length : 0;
                for (f = 0; f < g; f += 1)
                    "gr" === t[f].ty ? m.push(e(t[f], o[f], d)) : "fl" === t[f].ty ? m.push(i(t[f], o[f], d)) : "st" === t[f].ty ? m.push(r(t[f], o[f], d)) : "tm" === t[f].ty ? m.push(a(t[f], o[f], d)) : "tr" === t[f].ty || ("el" === t[f].ty ? m.push(l(t[f], o[f], d)) : "sr" === t[f].ty ? m.push(h(t[f], o[f], d)) : "sh" === t[f].ty ? m.push(ShapePathInterface(t[f], o[f], d)) : "rc" === t[f].ty ? m.push(c(t[f], o[f], d)) : "rd" === t[f].ty ? m.push(u(t[f], o[f], d)) : "rp" === t[f].ty ? m.push(p(t[f], o[f], d)) : "gf" === t[f].ty ? m.push(s(t[f], o[f], d)) : m.push(n(t[f], o[f])));
                return m
            }
            function e(e, i, s) {
                var n = function(t) {
                    switch (t) {
                    case "ADBE Vectors Group":
                    case "Contents":
                    case 2:
                        return n.content;
                    default:
                        return n.transform
                    }
                };
                n.propertyGroup = propertyGroupFactory(n, s);
                var r = function(e, i, s) {
                    var n, r = function(t) {
                        for (var e = 0, i = n.length; e < i; ) {
                            if (n[e]._name === t || n[e].mn === t || n[e].propertyIndex === t || n[e].ix === t || n[e].ind === t)
                                return n[e];
                            e += 1
                        }
                        return "number" == typeof t ? n[t - 1] : null
                    };
                    r.propertyGroup = propertyGroupFactory(r, s),
                    n = t(e.it, i.it, r.propertyGroup),
                    r.numProperties = n.length;
                    var a = o(e.it[e.it.length - 1], i.it[i.it.length - 1], r.propertyGroup);
                    return r.transform = a,
                    r.propertyIndex = e.cix,
                    r._name = e.nm,
                    r
                }(e, i, n.propertyGroup)
                  , a = o(e.it[e.it.length - 1], i.it[i.it.length - 1], n.propertyGroup);
                return n.content = r,
                n.transform = a,
                Object.defineProperty(n, "_name", {
                    get: function() {
                        return e.nm
                    }
                }),
                n.numProperties = e.np,
                n.propertyIndex = e.ix,
                n.nm = e.nm,
                n.mn = e.mn,
                n
            }
            function i(t, e, i) {
                function s(t) {
                    return "Color" === t || "color" === t ? s.color : "Opacity" === t || "opacity" === t ? s.opacity : null
                }
                return Object.defineProperties(s, {
                    color: {
                        get: ExpressionPropertyInterface(e.c)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(e.o)
                    },
                    _name: {
                        value: t.nm
                    },
                    mn: {
                        value: t.mn
                    }
                }),
                e.c.setGroupProperty(PropertyInterface("Color", i)),
                e.o.setGroupProperty(PropertyInterface("Opacity", i)),
                s
            }
            function s(t, e, i) {
                function s(t) {
                    return "Start Point" === t || "start point" === t ? s.startPoint : "End Point" === t || "end point" === t ? s.endPoint : "Opacity" === t || "opacity" === t ? s.opacity : null
                }
                return Object.defineProperties(s, {
                    startPoint: {
                        get: ExpressionPropertyInterface(e.s)
                    },
                    endPoint: {
                        get: ExpressionPropertyInterface(e.e)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(e.o)
                    },
                    type: {
                        get: function() {
                            return "a"
                        }
                    },
                    _name: {
                        value: t.nm
                    },
                    mn: {
                        value: t.mn
                    }
                }),
                e.s.setGroupProperty(PropertyInterface("Start Point", i)),
                e.e.setGroupProperty(PropertyInterface("End Point", i)),
                e.o.setGroupProperty(PropertyInterface("Opacity", i)),
                s
            }
            function n() {
                return function() {
                    return null
                }
            }
            function r(t, e, i) {
                var s, n = propertyGroupFactory(h, i), r = propertyGroupFactory(l, n);
                function a(i) {
                    Object.defineProperty(l, t.d[i].nm, {
                        get: ExpressionPropertyInterface(e.d.dataProps[i].p)
                    })
                }
                var o = t.d ? t.d.length : 0
                  , l = {};
                for (s = 0; s < o; s += 1)
                    a(s),
                    e.d.dataProps[s].p.setGroupProperty(r);
                function h(t) {
                    return "Color" === t || "color" === t ? h.color : "Opacity" === t || "opacity" === t ? h.opacity : "Stroke Width" === t || "stroke width" === t ? h.strokeWidth : null
                }
                return Object.defineProperties(h, {
                    color: {
                        get: ExpressionPropertyInterface(e.c)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(e.o)
                    },
                    strokeWidth: {
                        get: ExpressionPropertyInterface(e.w)
                    },
                    dash: {
                        get: function() {
                            return l
                        }
                    },
                    _name: {
                        value: t.nm
                    },
                    mn: {
                        value: t.mn
                    }
                }),
                e.c.setGroupProperty(PropertyInterface("Color", n)),
                e.o.setGroupProperty(PropertyInterface("Opacity", n)),
                e.w.setGroupProperty(PropertyInterface("Stroke Width", n)),
                h
            }
            function a(t, e, i) {
                function s(e) {
                    return e === t.e.ix || "End" === e || "end" === e ? s.end : e === t.s.ix ? s.start : e === t.o.ix ? s.offset : null
                }
                var n = propertyGroupFactory(s, i);
                return s.propertyIndex = t.ix,
                e.s.setGroupProperty(PropertyInterface("Start", n)),
                e.e.setGroupProperty(PropertyInterface("End", n)),
                e.o.setGroupProperty(PropertyInterface("Offset", n)),
                s.propertyIndex = t.ix,
                s.propertyGroup = i,
                Object.defineProperties(s, {
                    start: {
                        get: ExpressionPropertyInterface(e.s)
                    },
                    end: {
                        get: ExpressionPropertyInterface(e.e)
                    },
                    offset: {
                        get: ExpressionPropertyInterface(e.o)
                    },
                    _name: {
                        value: t.nm
                    }
                }),
                s.mn = t.mn,
                s
            }
            function o(t, e, i) {
                function s(e) {
                    return t.a.ix === e || "Anchor Point" === e ? s.anchorPoint : t.o.ix === e || "Opacity" === e ? s.opacity : t.p.ix === e || "Position" === e ? s.position : t.r.ix === e || "Rotation" === e || "ADBE Vector Rotation" === e ? s.rotation : t.s.ix === e || "Scale" === e ? s.scale : t.sk && t.sk.ix === e || "Skew" === e ? s.skew : t.sa && t.sa.ix === e || "Skew Axis" === e ? s.skewAxis : null
                }
                var n = propertyGroupFactory(s, i);
                return e.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", n)),
                e.transform.mProps.p.setGroupProperty(PropertyInterface("Position", n)),
                e.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", n)),
                e.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", n)),
                e.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", n)),
                e.transform.mProps.sk && (e.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", n)),
                e.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", n))),
                e.transform.op.setGroupProperty(PropertyInterface("Opacity", n)),
                Object.defineProperties(s, {
                    opacity: {
                        get: ExpressionPropertyInterface(e.transform.mProps.o)
                    },
                    position: {
                        get: ExpressionPropertyInterface(e.transform.mProps.p)
                    },
                    anchorPoint: {
                        get: ExpressionPropertyInterface(e.transform.mProps.a)
                    },
                    scale: {
                        get: ExpressionPropertyInterface(e.transform.mProps.s)
                    },
                    rotation: {
                        get: ExpressionPropertyInterface(e.transform.mProps.r)
                    },
                    skew: {
                        get: ExpressionPropertyInterface(e.transform.mProps.sk)
                    },
                    skewAxis: {
                        get: ExpressionPropertyInterface(e.transform.mProps.sa)
                    },
                    _name: {
                        value: t.nm
                    }
                }),
                s.ty = "tr",
                s.mn = t.mn,
                s.propertyGroup = i,
                s
            }
            function l(t, e, i) {
                function s(e) {
                    return t.p.ix === e ? s.position : t.s.ix === e ? s.size : null
                }
                var n = propertyGroupFactory(s, i);
                s.propertyIndex = t.ix;
                var r = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                return r.s.setGroupProperty(PropertyInterface("Size", n)),
                r.p.setGroupProperty(PropertyInterface("Position", n)),
                Object.defineProperties(s, {
                    size: {
                        get: ExpressionPropertyInterface(r.s)
                    },
                    position: {
                        get: ExpressionPropertyInterface(r.p)
                    },
                    _name: {
                        value: t.nm
                    }
                }),
                s.mn = t.mn,
                s
            }
            function h(t, e, i) {
                function s(e) {
                    return t.p.ix === e ? s.position : t.r.ix === e ? s.rotation : t.pt.ix === e ? s.points : t.or.ix === e || "ADBE Vector Star Outer Radius" === e ? s.outerRadius : t.os.ix === e ? s.outerRoundness : !t.ir || t.ir.ix !== e && "ADBE Vector Star Inner Radius" !== e ? t.is && t.is.ix === e ? s.innerRoundness : null : s.innerRadius
                }
                var n = propertyGroupFactory(s, i)
                  , r = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                return s.propertyIndex = t.ix,
                r.or.setGroupProperty(PropertyInterface("Outer Radius", n)),
                r.os.setGroupProperty(PropertyInterface("Outer Roundness", n)),
                r.pt.setGroupProperty(PropertyInterface("Points", n)),
                r.p.setGroupProperty(PropertyInterface("Position", n)),
                r.r.setGroupProperty(PropertyInterface("Rotation", n)),
                t.ir && (r.ir.setGroupProperty(PropertyInterface("Inner Radius", n)),
                r.is.setGroupProperty(PropertyInterface("Inner Roundness", n))),
                Object.defineProperties(s, {
                    position: {
                        get: ExpressionPropertyInterface(r.p)
                    },
                    rotation: {
                        get: ExpressionPropertyInterface(r.r)
                    },
                    points: {
                        get: ExpressionPropertyInterface(r.pt)
                    },
                    outerRadius: {
                        get: ExpressionPropertyInterface(r.or)
                    },
                    outerRoundness: {
                        get: ExpressionPropertyInterface(r.os)
                    },
                    innerRadius: {
                        get: ExpressionPropertyInterface(r.ir)
                    },
                    innerRoundness: {
                        get: ExpressionPropertyInterface(r.is)
                    },
                    _name: {
                        value: t.nm
                    }
                }),
                s.mn = t.mn,
                s
            }
            function c(t, e, i) {
                function s(e) {
                    return t.p.ix === e ? s.position : t.r.ix === e ? s.roundness : t.s.ix === e || "Size" === e || "ADBE Vector Rect Size" === e ? s.size : null
                }
                var n = propertyGroupFactory(s, i)
                  , r = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                return s.propertyIndex = t.ix,
                r.p.setGroupProperty(PropertyInterface("Position", n)),
                r.s.setGroupProperty(PropertyInterface("Size", n)),
                r.r.setGroupProperty(PropertyInterface("Rotation", n)),
                Object.defineProperties(s, {
                    position: {
                        get: ExpressionPropertyInterface(r.p)
                    },
                    roundness: {
                        get: ExpressionPropertyInterface(r.r)
                    },
                    size: {
                        get: ExpressionPropertyInterface(r.s)
                    },
                    _name: {
                        value: t.nm
                    }
                }),
                s.mn = t.mn,
                s
            }
            function u(t, e, i) {
                function s(e) {
                    return t.r.ix === e || "Round Corners 1" === e ? s.radius : null
                }
                var n = propertyGroupFactory(s, i)
                  , r = e;
                return s.propertyIndex = t.ix,
                r.rd.setGroupProperty(PropertyInterface("Radius", n)),
                Object.defineProperties(s, {
                    radius: {
                        get: ExpressionPropertyInterface(r.rd)
                    },
                    _name: {
                        value: t.nm
                    }
                }),
                s.mn = t.mn,
                s
            }
            function p(t, e, i) {
                function s(e) {
                    return t.c.ix === e || "Copies" === e ? s.copies : t.o.ix === e || "Offset" === e ? s.offset : null
                }
                var n = propertyGroupFactory(s, i)
                  , r = e;
                return s.propertyIndex = t.ix,
                r.c.setGroupProperty(PropertyInterface("Copies", n)),
                r.o.setGroupProperty(PropertyInterface("Offset", n)),
                Object.defineProperties(s, {
                    copies: {
                        get: ExpressionPropertyInterface(r.c)
                    },
                    offset: {
                        get: ExpressionPropertyInterface(r.o)
                    },
                    _name: {
                        value: t.nm
                    }
                }),
                s.mn = t.mn,
                s
            }
            return function(e, i, s) {
                var n;
                function r(t) {
                    if ("number" == typeof t)
                        return 0 === (t = void 0 === t ? 1 : t) ? s : n[t - 1];
                    for (var e = 0, i = n.length; e < i; ) {
                        if (n[e]._name === t)
                            return n[e];
                        e += 1
                    }
                    return null
                }
                return r.propertyGroup = propertyGroupFactory(r, (function() {
                    return s
                }
                )),
                n = t(e, i, r.propertyGroup),
                r.numProperties = n.length,
                r._name = "Contents",
                r
            }
        }()
          , TextExpressionInterface = function(t) {
            var e, i;
            function s(t) {
                switch (t) {
                case "ADBE Text Document":
                    return s.sourceText;
                default:
                    return null
                }
            }
            return Object.defineProperty(s, "sourceText", {
                get: function() {
                    t.textProperty.getValue();
                    var s = t.textProperty.currentData.t;
                    return s !== e && (e = t.textProperty.currentData.t,
                    (i = new String(s)).value = s || new String(s),
                    Object.defineProperty(i, "style", {
                        get: function() {
                            return {
                                fillColor: t.textProperty.currentData.fc
                            }
                        }
                    })),
                    i
                }
            }),
            s
        };
        function _typeof$2(t) {
            return (_typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            )(t)
        }
        var FootageInterface = (dataInterfaceFactory = function(t) {
            function e(t) {
                return "Outline" === t ? e.outlineInterface() : null
            }
            return e._name = "Outline",
            e.outlineInterface = function(t) {
                var e = ""
                  , i = t.getFootageData();
                function s(t) {
                    if (i[t])
                        return e = t,
                        "object" === _typeof$2(i = i[t]) ? s : i;
                    var n = t.indexOf(e);
                    if (-1 !== n) {
                        var r = parseInt(t.substr(n + e.length), 10);
                        return "object" === _typeof$2(i = i[r]) ? s : i
                    }
                    return ""
                }
                return function() {
                    return e = "",
                    i = t.getFootageData(),
                    s
                }
            }(t),
            e
        }
        ,
        function(t) {
            function e(t) {
                return "Data" === t ? e.dataInterface : null
            }
            return e._name = "Data",
            e.dataInterface = dataInterfaceFactory(t),
            e
        }
        ), dataInterfaceFactory, interfaces = {
            layer: LayerExpressionInterface,
            effects: EffectsExpressionInterface,
            comp: CompExpressionInterface,
            shape: ShapeExpressionInterface,
            text: TextExpressionInterface,
            footage: FootageInterface
        };
        function getInterface(t) {
            return interfaces[t] || null
        }
        function _typeof$1(t) {
            return (_typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            )(t)
        }
        function seedRandom(t, e) {
            var i = this
              , s = e.pow(256, 6)
              , n = e.pow(2, 52)
              , r = 2 * n;
            function a(t) {
                var e, i = t.length, s = this, n = 0, r = s.i = s.j = 0, a = s.S = [];
                for (i || (t = [i++]); n < 256; )
                    a[n] = n++;
                for (n = 0; n < 256; n++)
                    a[n] = a[r = 255 & r + t[n % i] + (e = a[n])],
                    a[r] = e;
                s.g = function(t) {
                    for (var e, i = 0, n = s.i, r = s.j, a = s.S; t--; )
                        e = a[n = 255 & n + 1],
                        i = 256 * i + a[255 & (a[n] = a[r = 255 & r + e]) + (a[r] = e)];
                    return s.i = n,
                    s.j = r,
                    i
                }
            }
            function o(t, e) {
                return e.i = t.i,
                e.j = t.j,
                e.S = t.S.slice(),
                e
            }
            function l(t, e) {
                for (var i, s = t + "", n = 0; n < s.length; )
                    e[255 & n] = 255 & (i ^= 19 * e[255 & n]) + s.charCodeAt(n++);
                return h(e)
            }
            function h(t) {
                return String.fromCharCode.apply(0, t)
            }
            e.seedrandom = function(c, u, p) {
                var d = []
                  , f = l(function t(e, i) {
                    var s, n = [], r = _typeof$1(e);
                    if (i && "object" == r)
                        for (s in e)
                            try {
                                n.push(t(e[s], i - 1))
                            } catch (t) {}
                    return n.length ? n : "string" == r ? e : e + "\0"
                }((u = !0 === u ? {
                    entropy: !0
                } : u || {}).entropy ? [c, h(t)] : null === c ? function() {
                    try {
                        void 0;
                        var e = new Uint8Array(256);
                        return (i.crypto || i.msCrypto).getRandomValues(e),
                        h(e)
                    } catch (e) {
                        var s = i.navigator
                          , n = s && s.plugins;
                        return [+new Date, i, n, i.screen, h(t)]
                    }
                }() : c, 3), d)
                  , m = new a(d)
                  , g = function() {
                    for (var t = m.g(6), e = s, i = 0; t < n; )
                        t = 256 * (t + i),
                        e *= 256,
                        i = m.g(1);
                    for (; t >= r; )
                        t /= 2,
                        e /= 2,
                        i >>>= 1;
                    return (t + i) / e
                };
                return g.int32 = function() {
                    return 0 | m.g(4)
                }
                ,
                g.quick = function() {
                    return m.g(4) / 4294967296
                }
                ,
                g.double = g,
                l(h(m.S), t),
                (u.pass || p || function(t, i, s, n) {
                    return n && (n.S && o(n, m),
                    t.state = function() {
                        return o(m, {})
                    }
                    ),
                    s ? (e.random = t,
                    i) : t
                }
                )(g, f, "global"in u ? u.global : this == e, u.state)
            }
            ,
            l(e.random(), t)
        }
        function initialize$2(t) {
            seedRandom([], t)
        }
        var propTypes = {
            SHAPE: "shape"
        };
        function _typeof(t) {
            return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
            )(t)
        }
        var ExpressionManager = function() {
            var ob = {}
              , Math = BMMath
              , window = null
              , document = null
              , XMLHttpRequest = null
              , fetch = null
              , frames = null;
            function $bm_isInstanceOfArray(t) {
                return t.constructor === Array || t.constructor === Float32Array
            }
            function isNumerable(t, e) {
                return "number" === t || "boolean" === t || "string" === t || e instanceof Number
            }
            function $bm_neg(t) {
                var e = _typeof(t);
                if ("number" === e || "boolean" === e || t instanceof Number)
                    return -t;
                if ($bm_isInstanceOfArray(t)) {
                    var i, s = t.length, n = [];
                    for (i = 0; i < s; i += 1)
                        n[i] = -t[i];
                    return n
                }
                return t.propType ? t.v : -t
            }
            initialize$2(BMMath);
            var easeInBez = BezierFactory.getBezierEasing(.333, 0, .833, .833, "easeIn").get
              , easeOutBez = BezierFactory.getBezierEasing(.167, .167, .667, 1, "easeOut").get
              , easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, "easeInOut").get;
            function sum(t, e) {
                var i = _typeof(t)
                  , s = _typeof(e);
                if ("string" === i || "string" === s)
                    return t + e;
                if (isNumerable(i, t) && isNumerable(s, e))
                    return t + e;
                if ($bm_isInstanceOfArray(t) && isNumerable(s, e))
                    return (t = t.slice(0))[0] += e,
                    t;
                if (isNumerable(i, t) && $bm_isInstanceOfArray(e))
                    return (e = e.slice(0))[0] = t + e[0],
                    e;
                if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                    for (var n = 0, r = t.length, a = e.length, o = []; n < r || n < a; )
                        ("number" == typeof t[n] || t[n]instanceof Number) && ("number" == typeof e[n] || e[n]instanceof Number) ? o[n] = t[n] + e[n] : o[n] = void 0 === e[n] ? t[n] : t[n] || e[n],
                        n += 1;
                    return o
                }
                return 0
            }
            var add = sum;
            function sub(t, e) {
                var i = _typeof(t)
                  , s = _typeof(e);
                if (isNumerable(i, t) && isNumerable(s, e))
                    return "string" === i && (t = parseInt(t, 10)),
                    "string" === s && (e = parseInt(e, 10)),
                    t - e;
                if ($bm_isInstanceOfArray(t) && isNumerable(s, e))
                    return (t = t.slice(0))[0] -= e,
                    t;
                if (isNumerable(i, t) && $bm_isInstanceOfArray(e))
                    return (e = e.slice(0))[0] = t - e[0],
                    e;
                if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                    for (var n = 0, r = t.length, a = e.length, o = []; n < r || n < a; )
                        ("number" == typeof t[n] || t[n]instanceof Number) && ("number" == typeof e[n] || e[n]instanceof Number) ? o[n] = t[n] - e[n] : o[n] = void 0 === e[n] ? t[n] : t[n] || e[n],
                        n += 1;
                    return o
                }
                return 0
            }
            function mul(t, e) {
                var i, s, n, r = _typeof(t), a = _typeof(e);
                if (isNumerable(r, t) && isNumerable(a, e))
                    return t * e;
                if ($bm_isInstanceOfArray(t) && isNumerable(a, e)) {
                    for (n = t.length,
                    i = createTypedArray("float32", n),
                    s = 0; s < n; s += 1)
                        i[s] = t[s] * e;
                    return i
                }
                if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) {
                    for (n = e.length,
                    i = createTypedArray("float32", n),
                    s = 0; s < n; s += 1)
                        i[s] = t * e[s];
                    return i
                }
                return 0
            }
            function div(t, e) {
                var i, s, n, r = _typeof(t), a = _typeof(e);
                if (isNumerable(r, t) && isNumerable(a, e))
                    return t / e;
                if ($bm_isInstanceOfArray(t) && isNumerable(a, e)) {
                    for (n = t.length,
                    i = createTypedArray("float32", n),
                    s = 0; s < n; s += 1)
                        i[s] = t[s] / e;
                    return i
                }
                if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) {
                    for (n = e.length,
                    i = createTypedArray("float32", n),
                    s = 0; s < n; s += 1)
                        i[s] = t / e[s];
                    return i
                }
                return 0
            }
            function mod(t, e) {
                return "string" == typeof t && (t = parseInt(t, 10)),
                "string" == typeof e && (e = parseInt(e, 10)),
                t % e
            }
            var $bm_sum = sum
              , $bm_sub = sub
              , $bm_mul = mul
              , $bm_div = div
              , $bm_mod = mod;
            function clamp(t, e, i) {
                if (e > i) {
                    var s = i;
                    i = e,
                    e = s
                }
                return Math.min(Math.max(t, e), i)
            }
            function radiansToDegrees(t) {
                return t / degToRads
            }
            var radians_to_degrees = radiansToDegrees;
            function degreesToRadians(t) {
                return t * degToRads
            }
            var degrees_to_radians = radiansToDegrees
              , helperLengthArray = [0, 0, 0, 0, 0, 0];
            function length(t, e) {
                if ("number" == typeof t || t instanceof Number)
                    return e = e || 0,
                    Math.abs(t - e);
                var i;
                e || (e = helperLengthArray);
                var s = Math.min(t.length, e.length)
                  , n = 0;
                for (i = 0; i < s; i += 1)
                    n += Math.pow(e[i] - t[i], 2);
                return Math.sqrt(n)
            }
            function normalize(t) {
                return div(t, length(t))
            }
            function rgbToHsl(t) {
                var e, i, s = t[0], n = t[1], r = t[2], a = Math.max(s, n, r), o = Math.min(s, n, r), l = (a + o) / 2;
                if (a === o)
                    e = 0,
                    i = 0;
                else {
                    var h = a - o;
                    switch (i = l > .5 ? h / (2 - a - o) : h / (a + o),
                    a) {
                    case s:
                        e = (n - r) / h + (n < r ? 6 : 0);
                        break;
                    case n:
                        e = (r - s) / h + 2;
                        break;
                    case r:
                        e = (s - n) / h + 4
                    }
                    e /= 6
                }
                return [e, i, l, t[3]]
            }
            function hue2rgb(t, e, i) {
                return i < 0 && (i += 1),
                i > 1 && (i -= 1),
                i < 1 / 6 ? t + 6 * (e - t) * i : i < .5 ? e : i < 2 / 3 ? t + (e - t) * (2 / 3 - i) * 6 : t
            }
            function hslToRgb(t) {
                var e, i, s, n = t[0], r = t[1], a = t[2];
                if (0 === r)
                    e = a,
                    s = a,
                    i = a;
                else {
                    var o = a < .5 ? a * (1 + r) : a + r - a * r
                      , l = 2 * a - o;
                    e = hue2rgb(l, o, n + 1 / 3),
                    i = hue2rgb(l, o, n),
                    s = hue2rgb(l, o, n - 1 / 3)
                }
                return [e, i, s, t[3]]
            }
            function linear(t, e, i, s, n) {
                if (void 0 !== s && void 0 !== n || (s = e,
                n = i,
                e = 0,
                i = 1),
                i < e) {
                    var r = i;
                    i = e,
                    e = r
                }
                if (t <= e)
                    return s;
                if (t >= i)
                    return n;
                var a, o = i === e ? 0 : (t - e) / (i - e);
                if (!s.length)
                    return s + (n - s) * o;
                var l = s.length
                  , h = createTypedArray("float32", l);
                for (a = 0; a < l; a += 1)
                    h[a] = s[a] + (n[a] - s[a]) * o;
                return h
            }
            function random(t, e) {
                if (void 0 === e && (void 0 === t ? (t = 0,
                e = 1) : (e = t,
                t = void 0)),
                e.length) {
                    var i, s = e.length;
                    t || (t = createTypedArray("float32", s));
                    var n = createTypedArray("float32", s)
                      , r = BMMath.random();
                    for (i = 0; i < s; i += 1)
                        n[i] = t[i] + r * (e[i] - t[i]);
                    return n
                }
                return void 0 === t && (t = 0),
                t + BMMath.random() * (e - t)
            }
            function createPath(t, e, i, s) {
                var n, r = t.length, a = shapePool.newElement();
                a.setPathData(!!s, r);
                var o, l, h = [0, 0];
                for (n = 0; n < r; n += 1)
                    o = e && e[n] ? e[n] : h,
                    l = i && i[n] ? i[n] : h,
                    a.setTripleAt(t[n][0], t[n][1], l[0] + t[n][0], l[1] + t[n][1], o[0] + t[n][0], o[1] + t[n][1], n, !0);
                return a
            }
            function initiateExpression(elem, data, property) {
                function noOp(t) {
                    return t
                }
                if (!elem.globalData.renderConfig.runExpressions)
                    return noOp;
                var val = data.x, needsVelocity = /velocity(?![\w\d])/.test(val), _needsRandom = -1 !== val.indexOf("random"), elemType = elem.data.ty, transform, $bm_transform, content, effect, thisProperty = property;
                thisProperty.valueAtTime = thisProperty.getValueAtTime,
                Object.defineProperty(thisProperty, "value", {
                    get: function() {
                        return thisProperty.v
                    }
                }),
                elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate,
                elem.comp.displayStartTime = 0;
                var inPoint = elem.data.ip / elem.comp.globalData.frameRate, outPoint = elem.data.op / elem.comp.globalData.frameRate, width = elem.data.sw ? elem.data.sw : 0, height = elem.data.sh ? elem.data.sh : 0, name = elem.data.nm, loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0], numKeys = property.kf ? data.k.length : 0, active = !this.data || !0 !== this.data.hd, wiggle = function(t, e) {
                    var i, s, n = this.pv.length ? this.pv.length : 1, r = createTypedArray("float32", n);
                    var a = Math.floor(5 * time);
                    for (i = 0,
                    s = 0; i < a; ) {
                        for (s = 0; s < n; s += 1)
                            r[s] += -e + 2 * e * BMMath.random();
                        i += 1
                    }
                    var o = 5 * time
                      , l = o - Math.floor(o)
                      , h = createTypedArray("float32", n);
                    if (n > 1) {
                        for (s = 0; s < n; s += 1)
                            h[s] = this.pv[s] + r[s] + (-e + 2 * e * BMMath.random()) * l;
                        return h
                    }
                    return this.pv + r[0] + (-e + 2 * e * BMMath.random()) * l
                }
                .bind(this);
                function loopInDuration(t, e) {
                    return loopIn(t, e, !0)
                }
                function loopOutDuration(t, e) {
                    return loopOut(t, e, !0)
                }
                thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty),
                loop_in = loopIn),
                thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty),
                loop_out = loopOut),
                thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)),
                this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)),
                this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface), time, velocity, value, text, textIndex, textTotal, selectorValue;
                function lookAt(t, e) {
                    var i = [e[0] - t[0], e[1] - t[1], e[2] - t[2]]
                      , s = Math.atan2(i[0], Math.sqrt(i[1] * i[1] + i[2] * i[2])) / degToRads;
                    return [-Math.atan2(i[1], i[2]) / degToRads, s, 0]
                }
                function easeOut(t, e, i, s, n) {
                    return applyEase(easeOutBez, t, e, i, s, n)
                }
                function easeIn(t, e, i, s, n) {
                    return applyEase(easeInBez, t, e, i, s, n)
                }
                function ease(t, e, i, s, n) {
                    return applyEase(easeInOutBez, t, e, i, s, n)
                }
                function applyEase(t, e, i, s, n, r) {
                    void 0 === n ? (n = i,
                    r = s) : e = (e - i) / (s - i),
                    e > 1 ? e = 1 : e < 0 && (e = 0);
                    var a = t(e);
                    if ($bm_isInstanceOfArray(n)) {
                        var o, l = n.length, h = createTypedArray("float32", l);
                        for (o = 0; o < l; o += 1)
                            h[o] = (r[o] - n[o]) * a + n[o];
                        return h
                    }
                    return (r - n) * a + n
                }
                function nearestKey(t) {
                    var e, i, s, n = data.k.length;
                    if (data.k.length && "number" != typeof data.k[0])
                        if (i = -1,
                        (t *= elem.comp.globalData.frameRate) < data.k[0].t)
                            i = 1,
                            s = data.k[0].t;
                        else {
                            for (e = 0; e < n - 1; e += 1) {
                                if (t === data.k[e].t) {
                                    i = e + 1,
                                    s = data.k[e].t;
                                    break
                                }
                                if (t > data.k[e].t && t < data.k[e + 1].t) {
                                    t - data.k[e].t > data.k[e + 1].t - t ? (i = e + 2,
                                    s = data.k[e + 1].t) : (i = e + 1,
                                    s = data.k[e].t);
                                    break
                                }
                            }
                            -1 === i && (i = e + 1,
                            s = data.k[e].t)
                        }
                    else
                        i = 0,
                        s = 0;
                    var r = {};
                    return r.index = i,
                    r.time = s / elem.comp.globalData.frameRate,
                    r
                }
                function key(t) {
                    var e, i, s;
                    if (!data.k.length || "number" == typeof data.k[0])
                        throw new Error("The property has no keyframe at index " + t);
                    t -= 1,
                    e = {
                        time: data.k[t].t / elem.comp.globalData.frameRate,
                        value: []
                    };
                    var n = Object.prototype.hasOwnProperty.call(data.k[t], "s") ? data.k[t].s : data.k[t - 1].e;
                    for (s = n.length,
                    i = 0; i < s; i += 1)
                        e[i] = n[i],
                        e.value[i] = n[i];
                    return e
                }
                function framesToTime(t, e) {
                    return e || (e = elem.comp.globalData.frameRate),
                    t / e
                }
                function timeToFrames(t, e) {
                    return t || 0 === t || (t = time),
                    e || (e = elem.comp.globalData.frameRate),
                    t * e
                }
                function seedRandom(t) {
                    BMMath.seedrandom(randSeed + t)
                }
                function sourceRectAtTime() {
                    return elem.sourceRectAtTime()
                }
                function substring(t, e) {
                    return "string" == typeof value ? void 0 === e ? value.substring(t) : value.substring(t, e) : ""
                }
                function substr(t, e) {
                    return "string" == typeof value ? void 0 === e ? value.substr(t) : value.substr(t, e) : ""
                }
                function posterizeTime(t) {
                    time = 0 === t ? 0 : Math.floor(time * t) / t,
                    value = valueAtTime(time)
                }
                var index = elem.data.ind, hasParent = !(!elem.hierarchy || !elem.hierarchy.length), parent, randSeed = Math.floor(1e6 * Math.random()), globalData = elem.globalData;
                function executeExpression(t) {
                    return value = t,
                    this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType ? value : ("textSelector" === this.propType && (textIndex = this.textIndex,
                    textTotal = this.textTotal,
                    selectorValue = this.selectorValue),
                    thisLayer || (text = elem.layerInterface.text,
                    thisLayer = elem.layerInterface,
                    thisComp = elem.comp.compInterface,
                    toWorld = thisLayer.toWorld.bind(thisLayer),
                    fromWorld = thisLayer.fromWorld.bind(thisLayer),
                    fromComp = thisLayer.fromComp.bind(thisLayer),
                    toComp = thisLayer.toComp.bind(thisLayer),
                    mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null,
                    fromCompToSurface = fromComp),
                    transform || (transform = elem.layerInterface("ADBE Transform Group"),
                    $bm_transform = transform,
                    transform && (anchorPoint = transform.anchorPoint)),
                    4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")),
                    effect || (effect = thisLayer(4)),
                    (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface),
                    time = this.comp.renderedFrame / this.comp.globalData.frameRate,
                    _needsRandom && seedRandom(randSeed + time),
                    needsVelocity && (velocity = velocityAtTime(time)),
                    expression_function(),
                    this.frameExpressionId = elem.globalData.frameId,
                    scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt)
                }
                return executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData],
                executeExpression
            }
            return ob.initiateExpression = initiateExpression,
            ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath],
            ob
        }()
          , expressionHelpers = {
            searchExpressions: function(t, e, i) {
                e.x && (i.k = !0,
                i.x = !0,
                i.initiateExpression = ExpressionManager.initiateExpression,
                i.effectsSequence.push(i.initiateExpression(t, e, i).bind(i)))
            },
            getSpeedAtTime: function(t) {
                var e = this.getValueAtTime(t)
                  , i = this.getValueAtTime(t + -.01)
                  , s = 0;
                if (e.length) {
                    var n;
                    for (n = 0; n < e.length; n += 1)
                        s += Math.pow(i[n] - e[n], 2);
                    s = 100 * Math.sqrt(s)
                } else
                    s = 0;
                return s
            },
            getVelocityAtTime: function(t) {
                if (void 0 !== this.vel)
                    return this.vel;
                var e, i, s = this.getValueAtTime(t), n = this.getValueAtTime(t + -.001);
                if (s.length)
                    for (e = createTypedArray("float32", s.length),
                    i = 0; i < s.length; i += 1)
                        e[i] = (n[i] - s[i]) / -.001;
                else
                    e = (n - s) / -.001;
                return e
            },
            getValueAtTime: function(t) {
                return t *= this.elem.globalData.frameRate,
                (t -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0,
                this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime),
                this._cachingAtTime.lastFrame = t),
                this._cachingAtTime.value
            },
            getStaticValueAtTime: function() {
                return this.pv
            },
            setGroupProperty: function(t) {
                this.propertyGroup = t
            }
        };
        function addPropertyDecorator() {
            function t(t, e, i) {
                if (!this.k || !this.keyframes)
                    return this.pv;
                t = t ? t.toLowerCase() : "";
                var s, n, r, a, o, l = this.comp.renderedFrame, h = this.keyframes, c = h[h.length - 1].t;
                if (l <= c)
                    return this.pv;
                if (i ? n = c - (s = e ? Math.abs(c - this.elem.comp.globalData.frameRate * e) : Math.max(0, c - this.elem.data.ip)) : ((!e || e > h.length - 1) && (e = h.length - 1),
                s = c - (n = h[h.length - 1 - e].t)),
                "pingpong" === t) {
                    if (Math.floor((l - n) / s) % 2 != 0)
                        return this.getValueAtTime((s - (l - n) % s + n) / this.comp.globalData.frameRate, 0)
                } else {
                    if ("offset" === t) {
                        var u = this.getValueAtTime(n / this.comp.globalData.frameRate, 0)
                          , p = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , d = this.getValueAtTime(((l - n) % s + n) / this.comp.globalData.frameRate, 0)
                          , f = Math.floor((l - n) / s);
                        if (this.pv.length) {
                            for (a = (o = new Array(u.length)).length,
                            r = 0; r < a; r += 1)
                                o[r] = (p[r] - u[r]) * f + d[r];
                            return o
                        }
                        return (p - u) * f + d
                    }
                    if ("continue" === t) {
                        var m = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , g = this.getValueAtTime((c - .001) / this.comp.globalData.frameRate, 0);
                        if (this.pv.length) {
                            for (a = (o = new Array(m.length)).length,
                            r = 0; r < a; r += 1)
                                o[r] = m[r] + (m[r] - g[r]) * ((l - c) / this.comp.globalData.frameRate) / 5e-4;
                            return o
                        }
                        return m + (l - c) / .001 * (m - g)
                    }
                }
                return this.getValueAtTime(((l - n) % s + n) / this.comp.globalData.frameRate, 0)
            }
            function e(t, e, i) {
                if (!this.k)
                    return this.pv;
                t = t ? t.toLowerCase() : "";
                var s, n, r, a, o, l = this.comp.renderedFrame, h = this.keyframes, c = h[0].t;
                if (l >= c)
                    return this.pv;
                if (i ? n = c + (s = e ? Math.abs(this.elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - c)) : ((!e || e > h.length - 1) && (e = h.length - 1),
                s = (n = h[e].t) - c),
                "pingpong" === t) {
                    if (Math.floor((c - l) / s) % 2 == 0)
                        return this.getValueAtTime(((c - l) % s + c) / this.comp.globalData.frameRate, 0)
                } else {
                    if ("offset" === t) {
                        var u = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , p = this.getValueAtTime(n / this.comp.globalData.frameRate, 0)
                          , d = this.getValueAtTime((s - (c - l) % s + c) / this.comp.globalData.frameRate, 0)
                          , f = Math.floor((c - l) / s) + 1;
                        if (this.pv.length) {
                            for (a = (o = new Array(u.length)).length,
                            r = 0; r < a; r += 1)
                                o[r] = d[r] - (p[r] - u[r]) * f;
                            return o
                        }
                        return d - (p - u) * f
                    }
                    if ("continue" === t) {
                        var m = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , g = this.getValueAtTime((c + .001) / this.comp.globalData.frameRate, 0);
                        if (this.pv.length) {
                            for (a = (o = new Array(m.length)).length,
                            r = 0; r < a; r += 1)
                                o[r] = m[r] + (m[r] - g[r]) * (c - l) / .001;
                            return o
                        }
                        return m + (m - g) * (c - l) / .001
                    }
                }
                return this.getValueAtTime((s - ((c - l) % s + c)) / this.comp.globalData.frameRate, 0)
            }
            function i(t, e) {
                if (!this.k)
                    return this.pv;
                if (t = .5 * (t || .4),
                (e = Math.floor(e || 5)) <= 1)
                    return this.pv;
                var i, s, n = this.comp.renderedFrame / this.comp.globalData.frameRate, r = n - t, a = e > 1 ? (n + t - r) / (e - 1) : 1, o = 0, l = 0;
                for (i = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o < e; ) {
                    if (s = this.getValueAtTime(r + o * a),
                    this.pv.length)
                        for (l = 0; l < this.pv.length; l += 1)
                            i[l] += s[l];
                    else
                        i += s;
                    o += 1
                }
                if (this.pv.length)
                    for (l = 0; l < this.pv.length; l += 1)
                        i[l] /= e;
                else
                    i /= e;
                return i
            }
            function s(t) {
                this._transformCachingAtTime || (this._transformCachingAtTime = {
                    v: new Matrix
                });
                var e = this._transformCachingAtTime.v;
                if (e.cloneFromProps(this.pre.props),
                this.appliedTransformations < 1) {
                    var i = this.a.getValueAtTime(t);
                    e.translate(-i[0] * this.a.mult, -i[1] * this.a.mult, i[2] * this.a.mult)
                }
                if (this.appliedTransformations < 2) {
                    var s = this.s.getValueAtTime(t);
                    e.scale(s[0] * this.s.mult, s[1] * this.s.mult, s[2] * this.s.mult)
                }
                if (this.sk && this.appliedTransformations < 3) {
                    var n = this.sk.getValueAtTime(t)
                      , r = this.sa.getValueAtTime(t);
                    e.skewFromAxis(-n * this.sk.mult, r * this.sa.mult)
                }
                if (this.r && this.appliedTransformations < 4) {
                    var a = this.r.getValueAtTime(t);
                    e.rotate(-a * this.r.mult)
                } else if (!this.r && this.appliedTransformations < 4) {
                    var o = this.rz.getValueAtTime(t)
                      , l = this.ry.getValueAtTime(t)
                      , h = this.rx.getValueAtTime(t)
                      , c = this.or.getValueAtTime(t);
                    e.rotateZ(-o * this.rz.mult).rotateY(l * this.ry.mult).rotateX(h * this.rx.mult).rotateZ(-c[2] * this.or.mult).rotateY(c[1] * this.or.mult).rotateX(c[0] * this.or.mult)
                }
                if (this.data.p && this.data.p.s) {
                    var u = this.px.getValueAtTime(t)
                      , p = this.py.getValueAtTime(t);
                    if (this.data.p.z) {
                        var d = this.pz.getValueAtTime(t);
                        e.translate(u * this.px.mult, p * this.py.mult, -d * this.pz.mult)
                    } else
                        e.translate(u * this.px.mult, p * this.py.mult, 0)
                } else {
                    var f = this.p.getValueAtTime(t);
                    e.translate(f[0] * this.p.mult, f[1] * this.p.mult, -f[2] * this.p.mult)
                }
                return e
            }
            function n() {
                return this.v.clone(new Matrix)
            }
            var r = TransformPropertyFactory.getTransformProperty;
            TransformPropertyFactory.getTransformProperty = function(t, e, i) {
                var a = r(t, e, i);
                return a.dynamicProperties.length ? a.getValueAtTime = s.bind(a) : a.getValueAtTime = n.bind(a),
                a.setGroupProperty = expressionHelpers.setGroupProperty,
                a
            }
            ;
            var a = PropertyFactory.getProp;
            PropertyFactory.getProp = function(s, n, r, o, l) {
                var h = a(s, n, r, o, l);
                h.kf ? h.getValueAtTime = expressionHelpers.getValueAtTime.bind(h) : h.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(h),
                h.setGroupProperty = expressionHelpers.setGroupProperty,
                h.loopOut = t,
                h.loopIn = e,
                h.smooth = i,
                h.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(h),
                h.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(h),
                h.numKeys = 1 === n.a ? n.k.length : 0,
                h.propertyIndex = n.ix;
                var c = 0;
                return 0 !== r && (c = createTypedArray("float32", 1 === n.a ? n.k[0].s.length : n.k.length)),
                h._cachingAtTime = {
                    lastFrame: initialDefaultFrame,
                    lastIndex: 0,
                    value: c
                },
                expressionHelpers.searchExpressions(s, n, h),
                h.k && l.addDynamicProperty(h),
                h
            }
            ;
            var o = ShapePropertyFactory.getConstructorFunction()
              , l = ShapePropertyFactory.getKeyframedConstructorFunction();
            function h() {}
            h.prototype = {
                vertices: function(t, e) {
                    this.k && this.getValue();
                    var i, s = this.v;
                    void 0 !== e && (s = this.getValueAtTime(e, 0));
                    var n = s._length
                      , r = s[t]
                      , a = s.v
                      , o = createSizedArray(n);
                    for (i = 0; i < n; i += 1)
                        o[i] = "i" === t || "o" === t ? [r[i][0] - a[i][0], r[i][1] - a[i][1]] : [r[i][0], r[i][1]];
                    return o
                },
                points: function(t) {
                    return this.vertices("v", t)
                },
                inTangents: function(t) {
                    return this.vertices("i", t)
                },
                outTangents: function(t) {
                    return this.vertices("o", t)
                },
                isClosed: function() {
                    return this.v.c
                },
                pointOnPath: function(t, e) {
                    var i = this.v;
                    void 0 !== e && (i = this.getValueAtTime(e, 0)),
                    this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(i));
                    for (var s, n = this._segmentsLength, r = n.lengths, a = n.totalLength * t, o = 0, l = r.length, h = 0; o < l; ) {
                        if (h + r[o].addedLength > a) {
                            var c = o
                              , u = i.c && o === l - 1 ? 0 : o + 1
                              , p = (a - h) / r[o].addedLength;
                            s = bez.getPointInSegment(i.v[c], i.v[u], i.o[c], i.i[u], p, r[o]);
                            break
                        }
                        h += r[o].addedLength,
                        o += 1
                    }
                    return s || (s = i.c ? [i.v[0][0], i.v[0][1]] : [i.v[i._length - 1][0], i.v[i._length - 1][1]]),
                    s
                },
                vectorOnPath: function(t, e, i) {
                    1 == t ? t = this.v.c : 0 == t && (t = .999);
                    var s = this.pointOnPath(t, e)
                      , n = this.pointOnPath(t + .001, e)
                      , r = n[0] - s[0]
                      , a = n[1] - s[1]
                      , o = Math.sqrt(Math.pow(r, 2) + Math.pow(a, 2));
                    return 0 === o ? [0, 0] : "tangent" === i ? [r / o, a / o] : [-a / o, r / o]
                },
                tangentOnPath: function(t, e) {
                    return this.vectorOnPath(t, e, "tangent")
                },
                normalOnPath: function(t, e) {
                    return this.vectorOnPath(t, e, "normal")
                },
                setGroupProperty: expressionHelpers.setGroupProperty,
                getValueAtTime: expressionHelpers.getStaticValueAtTime
            },
            extendPrototype([h], o),
            extendPrototype([h], l),
            l.prototype.getValueAtTime = function(t) {
                return this._cachingAtTime || (this._cachingAtTime = {
                    shapeValue: shapePool.clone(this.pv),
                    lastIndex: 0,
                    lastTime: initialDefaultFrame
                }),
                t *= this.elem.globalData.frameRate,
                (t -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t ? this._caching.lastIndex : 0,
                this._cachingAtTime.lastTime = t,
                this.interpolateShape(t, this._cachingAtTime.shapeValue, this._cachingAtTime)),
                this._cachingAtTime.shapeValue
            }
            ,
            l.prototype.initiateExpression = ExpressionManager.initiateExpression;
            var c = ShapePropertyFactory.getShapeProp;
            ShapePropertyFactory.getShapeProp = function(t, e, i, s, n) {
                var r = c(t, e, i, s, n);
                return r.propertyIndex = e.ix,
                r.lock = !1,
                3 === i ? expressionHelpers.searchExpressions(t, e.pt, r) : 4 === i && expressionHelpers.searchExpressions(t, e.ks, r),
                r.k && t.addDynamicProperty(r),
                r
            }
        }
        function initialize$1() {
            addPropertyDecorator()
        }
        function addDecorator() {
            TextProperty.prototype.getExpressionValue = function(t, e) {
                var i = this.calculateExpression(e);
                if (t.t !== i) {
                    var s = {};
                    return this.copyData(s, t),
                    s.t = i.toString(),
                    s.__complete = !1,
                    s
                }
                return t
            }
            ,
            TextProperty.prototype.searchProperty = function() {
                var t = this.searchKeyframes()
                  , e = this.searchExpressions();
                return this.kf = t || e,
                this.kf
            }
            ,
            TextProperty.prototype.searchExpressions = function() {
                return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this),
                this.addEffect(this.getExpressionValue.bind(this)),
                !0) : null
            }
        }
        function initialize() {
            addDecorator()
        }
        function SVGComposableEffect() {}
        SVGComposableEffect.prototype = {
            createMergeNode: function(t, e) {
                var i, s, n = createNS("feMerge");
                for (n.setAttribute("result", t),
                s = 0; s < e.length; s += 1)
                    (i = createNS("feMergeNode")).setAttribute("in", e[s]),
                    n.appendChild(i),
                    n.appendChild(i);
                return n
            }
        };
        var linearFilterValue = "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
        function SVGTintFilter(t, e, i, s, n) {
            this.filterManager = e;
            var r = createNS("feColorMatrix");
            r.setAttribute("type", "matrix"),
            r.setAttribute("color-interpolation-filters", "linearRGB"),
            r.setAttribute("values", linearFilterValue + " 1 0"),
            this.linearFilter = r,
            r.setAttribute("result", s + "_tint_1"),
            t.appendChild(r),
            (r = createNS("feColorMatrix")).setAttribute("type", "matrix"),
            r.setAttribute("color-interpolation-filters", "sRGB"),
            r.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
            r.setAttribute("result", s + "_tint_2"),
            t.appendChild(r),
            this.matrixFilter = r;
            var a = this.createMergeNode(s, [n, s + "_tint_1", s + "_tint_2"]);
            t.appendChild(a)
        }
        function SVGFillFilter(t, e, i, s) {
            this.filterManager = e;
            var n = createNS("feColorMatrix");
            n.setAttribute("type", "matrix"),
            n.setAttribute("color-interpolation-filters", "sRGB"),
            n.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
            n.setAttribute("result", s),
            t.appendChild(n),
            this.matrixFilter = n
        }
        function SVGStrokeEffect(t, e, i) {
            this.initialized = !1,
            this.filterManager = e,
            this.elem = i,
            this.paths = []
        }
        function SVGTritoneFilter(t, e, i, s) {
            this.filterManager = e;
            var n = createNS("feColorMatrix");
            n.setAttribute("type", "matrix"),
            n.setAttribute("color-interpolation-filters", "linearRGB"),
            n.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
            t.appendChild(n);
            var r = createNS("feComponentTransfer");
            r.setAttribute("color-interpolation-filters", "sRGB"),
            r.setAttribute("result", s),
            this.matrixFilter = r;
            var a = createNS("feFuncR");
            a.setAttribute("type", "table"),
            r.appendChild(a),
            this.feFuncR = a;
            var o = createNS("feFuncG");
            o.setAttribute("type", "table"),
            r.appendChild(o),
            this.feFuncG = o;
            var l = createNS("feFuncB");
            l.setAttribute("type", "table"),
            r.appendChild(l),
            this.feFuncB = l,
            t.appendChild(r)
        }
        function SVGProLevelsFilter(t, e, i, s) {
            this.filterManager = e;
            var n = this.filterManager.effectElements
              , r = createNS("feComponentTransfer");
            (n[10].p.k || 0 !== n[10].p.v || n[11].p.k || 1 !== n[11].p.v || n[12].p.k || 1 !== n[12].p.v || n[13].p.k || 0 !== n[13].p.v || n[14].p.k || 1 !== n[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", r)),
            (n[17].p.k || 0 !== n[17].p.v || n[18].p.k || 1 !== n[18].p.v || n[19].p.k || 1 !== n[19].p.v || n[20].p.k || 0 !== n[20].p.v || n[21].p.k || 1 !== n[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", r)),
            (n[24].p.k || 0 !== n[24].p.v || n[25].p.k || 1 !== n[25].p.v || n[26].p.k || 1 !== n[26].p.v || n[27].p.k || 0 !== n[27].p.v || n[28].p.k || 1 !== n[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", r)),
            (n[31].p.k || 0 !== n[31].p.v || n[32].p.k || 1 !== n[32].p.v || n[33].p.k || 1 !== n[33].p.v || n[34].p.k || 0 !== n[34].p.v || n[35].p.k || 1 !== n[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", r)),
            (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (r.setAttribute("color-interpolation-filters", "sRGB"),
            t.appendChild(r)),
            (n[3].p.k || 0 !== n[3].p.v || n[4].p.k || 1 !== n[4].p.v || n[5].p.k || 1 !== n[5].p.v || n[6].p.k || 0 !== n[6].p.v || n[7].p.k || 1 !== n[7].p.v) && ((r = createNS("feComponentTransfer")).setAttribute("color-interpolation-filters", "sRGB"),
            r.setAttribute("result", s),
            t.appendChild(r),
            this.feFuncRComposed = this.createFeFunc("feFuncR", r),
            this.feFuncGComposed = this.createFeFunc("feFuncG", r),
            this.feFuncBComposed = this.createFeFunc("feFuncB", r))
        }
        function SVGDropShadowEffect(t, e, i, s, n) {
            var r = e.container.globalData.renderConfig.filterSize
              , a = e.data.fs || r;
            t.setAttribute("x", a.x || r.x),
            t.setAttribute("y", a.y || r.y),
            t.setAttribute("width", a.width || r.width),
            t.setAttribute("height", a.height || r.height),
            this.filterManager = e;
            var o = createNS("feGaussianBlur");
            o.setAttribute("in", "SourceAlpha"),
            o.setAttribute("result", s + "_drop_shadow_1"),
            o.setAttribute("stdDeviation", "0"),
            this.feGaussianBlur = o,
            t.appendChild(o);
            var l = createNS("feOffset");
            l.setAttribute("dx", "25"),
            l.setAttribute("dy", "0"),
            l.setAttribute("in", s + "_drop_shadow_1"),
            l.setAttribute("result", s + "_drop_shadow_2"),
            this.feOffset = l,
            t.appendChild(l);
            var h = createNS("feFlood");
            h.setAttribute("flood-color", "#00ff00"),
            h.setAttribute("flood-opacity", "1"),
            h.setAttribute("result", s + "_drop_shadow_3"),
            this.feFlood = h,
            t.appendChild(h);
            var c = createNS("feComposite");
            c.setAttribute("in", s + "_drop_shadow_3"),
            c.setAttribute("in2", s + "_drop_shadow_2"),
            c.setAttribute("operator", "in"),
            c.setAttribute("result", s + "_drop_shadow_4"),
            t.appendChild(c);
            var u = this.createMergeNode(s, [s + "_drop_shadow_4", n]);
            t.appendChild(u)
        }
        extendPrototype([SVGComposableEffect], SVGTintFilter),
        SVGTintFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
                var e = this.filterManager.effectElements[0].p.v
                  , i = this.filterManager.effectElements[1].p.v
                  , s = this.filterManager.effectElements[2].p.v / 100;
                this.linearFilter.setAttribute("values", linearFilterValue + " " + s + " 0"),
                this.matrixFilter.setAttribute("values", i[0] - e[0] + " 0 0 0 " + e[0] + " " + (i[1] - e[1]) + " 0 0 0 " + e[1] + " " + (i[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 1 0")
            }
        }
        ,
        SVGFillFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
                var e = this.filterManager.effectElements[2].p.v
                  , i = this.filterManager.effectElements[6].p.v;
                this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + i + " 0")
            }
        }
        ,
        SVGStrokeEffect.prototype.initialize = function() {
            var t, e, i, s, n = this.elem.layerElement.children || this.elem.layerElement.childNodes;
            for (1 === this.filterManager.effectElements[1].p.v ? (s = this.elem.maskManager.masksProperties.length,
            i = 0) : s = (i = this.filterManager.effectElements[0].p.v - 1) + 1,
            (e = createNS("g")).setAttribute("fill", "none"),
            e.setAttribute("stroke-linecap", "round"),
            e.setAttribute("stroke-dashoffset", 1); i < s; i += 1)
                t = createNS("path"),
                e.appendChild(t),
                this.paths.push({
                    p: t,
                    m: i
                });
            if (3 === this.filterManager.effectElements[10].p.v) {
                var r = createNS("mask")
                  , a = createElementID();
                r.setAttribute("id", a),
                r.setAttribute("mask-type", "alpha"),
                r.appendChild(e),
                this.elem.globalData.defs.appendChild(r);
                var o = createNS("g");
                for (o.setAttribute("mask", "url(" + getLocationHref() + "#" + a + ")"); n[0]; )
                    o.appendChild(n[0]);
                this.elem.layerElement.appendChild(o),
                this.masker = r,
                e.setAttribute("stroke", "#fff")
            } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
                if (2 === this.filterManager.effectElements[10].p.v)
                    for (n = this.elem.layerElement.children || this.elem.layerElement.childNodes; n.length; )
                        this.elem.layerElement.removeChild(n[0]);
                this.elem.layerElement.appendChild(e),
                this.elem.layerElement.removeAttribute("mask"),
                e.setAttribute("stroke", "#fff")
            }
            this.initialized = !0,
            this.pathMasker = e
        }
        ,
        SVGStrokeEffect.prototype.renderFrame = function(t) {
            var e;
            this.initialized || this.initialize();
            var i, s, n = this.paths.length;
            for (e = 0; e < n; e += 1)
                if (-1 !== this.paths[e].m && (i = this.elem.maskManager.viewData[this.paths[e].m],
                s = this.paths[e].p,
                (t || this.filterManager._mdf || i.prop._mdf) && s.setAttribute("d", i.lastPath),
                t || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || i.prop._mdf)) {
                    var r;
                    if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                        var a = .01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                          , o = .01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                          , l = s.getTotalLength();
                        r = "0 0 0 " + l * a + " ";
                        var h, c = l * (o - a), u = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01, p = Math.floor(c / u);
                        for (h = 0; h < p; h += 1)
                            r += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01 + " ";
                        r += "0 " + 10 * l + " 0 0"
                    } else
                        r = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01;
                    s.setAttribute("stroke-dasharray", r)
                }
            if ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v),
            (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v),
            (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf)) {
                var d = this.filterManager.effectElements[3].p.v;
                this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * d[0]) + "," + bmFloor(255 * d[1]) + "," + bmFloor(255 * d[2]) + ")")
            }
        }
        ,
        SVGTritoneFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
                var e = this.filterManager.effectElements[0].p.v
                  , i = this.filterManager.effectElements[1].p.v
                  , s = this.filterManager.effectElements[2].p.v
                  , n = s[0] + " " + i[0] + " " + e[0]
                  , r = s[1] + " " + i[1] + " " + e[1]
                  , a = s[2] + " " + i[2] + " " + e[2];
                this.feFuncR.setAttribute("tableValues", n),
                this.feFuncG.setAttribute("tableValues", r),
                this.feFuncB.setAttribute("tableValues", a)
            }
        }
        ,
        SVGProLevelsFilter.prototype.createFeFunc = function(t, e) {
            var i = createNS(t);
            return i.setAttribute("type", "table"),
            e.appendChild(i),
            i
        }
        ,
        SVGProLevelsFilter.prototype.getTableValue = function(t, e, i, s, n) {
            for (var r, a, o = 0, l = Math.min(t, e), h = Math.max(t, e), c = Array.call(null, {
                length: 256
            }), u = 0, p = n - s, d = e - t; o <= 256; )
                a = (r = o / 256) <= l ? d < 0 ? n : s : r >= h ? d < 0 ? s : n : s + p * Math.pow((r - t) / d, 1 / i),
                c[u] = a,
                u += 1,
                o += 256 / 255;
            return c.join(" ")
        }
        ,
        SVGProLevelsFilter.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
                var e, i = this.filterManager.effectElements;
                this.feFuncRComposed && (t || i[3].p._mdf || i[4].p._mdf || i[5].p._mdf || i[6].p._mdf || i[7].p._mdf) && (e = this.getTableValue(i[3].p.v, i[4].p.v, i[5].p.v, i[6].p.v, i[7].p.v),
                this.feFuncRComposed.setAttribute("tableValues", e),
                this.feFuncGComposed.setAttribute("tableValues", e),
                this.feFuncBComposed.setAttribute("tableValues", e)),
                this.feFuncR && (t || i[10].p._mdf || i[11].p._mdf || i[12].p._mdf || i[13].p._mdf || i[14].p._mdf) && (e = this.getTableValue(i[10].p.v, i[11].p.v, i[12].p.v, i[13].p.v, i[14].p.v),
                this.feFuncR.setAttribute("tableValues", e)),
                this.feFuncG && (t || i[17].p._mdf || i[18].p._mdf || i[19].p._mdf || i[20].p._mdf || i[21].p._mdf) && (e = this.getTableValue(i[17].p.v, i[18].p.v, i[19].p.v, i[20].p.v, i[21].p.v),
                this.feFuncG.setAttribute("tableValues", e)),
                this.feFuncB && (t || i[24].p._mdf || i[25].p._mdf || i[26].p._mdf || i[27].p._mdf || i[28].p._mdf) && (e = this.getTableValue(i[24].p.v, i[25].p.v, i[26].p.v, i[27].p.v, i[28].p.v),
                this.feFuncB.setAttribute("tableValues", e)),
                this.feFuncA && (t || i[31].p._mdf || i[32].p._mdf || i[33].p._mdf || i[34].p._mdf || i[35].p._mdf) && (e = this.getTableValue(i[31].p.v, i[32].p.v, i[33].p.v, i[34].p.v, i[35].p.v),
                this.feFuncA.setAttribute("tableValues", e))
            }
        }
        ,
        extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
        SVGDropShadowEffect.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
                if ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4),
                t || this.filterManager.effectElements[0].p._mdf) {
                    var e = this.filterManager.effectElements[0].p.v;
                    this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])))
                }
                if ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255),
                t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
                    var i = this.filterManager.effectElements[3].p.v
                      , s = (this.filterManager.effectElements[2].p.v - 90) * degToRads
                      , n = i * Math.cos(s)
                      , r = i * Math.sin(s);
                    this.feOffset.setAttribute("dx", n),
                    this.feOffset.setAttribute("dy", r)
                }
            }
        }
        ;
        var _svgMatteSymbols = [];
        function SVGMatte3Effect(t, e, i) {
            this.initialized = !1,
            this.filterManager = e,
            this.filterElem = t,
            this.elem = i,
            i.matteElement = createNS("g"),
            i.matteElement.appendChild(i.layerElement),
            i.matteElement.appendChild(i.transformedElement),
            i.baseElement = i.matteElement
        }
        function SVGGaussianBlurEffect(t, e, i, s) {
            t.setAttribute("x", "-100%"),
            t.setAttribute("y", "-100%"),
            t.setAttribute("width", "300%"),
            t.setAttribute("height", "300%"),
            this.filterManager = e;
            var n = createNS("feGaussianBlur");
            n.setAttribute("result", s),
            t.appendChild(n),
            this.feGaussianBlur = n
        }
        return SVGMatte3Effect.prototype.findSymbol = function(t) {
            for (var e = 0, i = _svgMatteSymbols.length; e < i; ) {
                if (_svgMatteSymbols[e] === t)
                    return _svgMatteSymbols[e];
                e += 1
            }
            return null
        }
        ,
        SVGMatte3Effect.prototype.replaceInParent = function(t, e) {
            var i = t.layerElement.parentNode;
            if (i) {
                for (var s, n = i.children, r = 0, a = n.length; r < a && n[r] !== t.layerElement; )
                    r += 1;
                r <= a - 2 && (s = n[r + 1]);
                var o = createNS("use");
                o.setAttribute("href", "#" + e),
                s ? i.insertBefore(o, s) : i.appendChild(o)
            }
        }
        ,
        SVGMatte3Effect.prototype.setElementAsMask = function(t, e) {
            if (!this.findSymbol(e)) {
                var i = createElementID()
                  , s = createNS("mask");
                s.setAttribute("id", e.layerId),
                s.setAttribute("mask-type", "alpha"),
                _svgMatteSymbols.push(e);
                var n = t.globalData.defs;
                n.appendChild(s);
                var r = createNS("symbol");
                r.setAttribute("id", i),
                this.replaceInParent(e, i),
                r.appendChild(e.layerElement),
                n.appendChild(r);
                var a = createNS("use");
                a.setAttribute("href", "#" + i),
                s.appendChild(a),
                e.data.hd = !1,
                e.show()
            }
            t.setMatte(e.layerId)
        }
        ,
        SVGMatte3Effect.prototype.initialize = function() {
            for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, i = 0, s = e.length; i < s; )
                e[i] && e[i].data.ind === t && this.setElementAsMask(this.elem, e[i]),
                i += 1;
            this.initialized = !0
        }
        ,
        SVGMatte3Effect.prototype.renderFrame = function() {
            this.initialized || this.initialize()
        }
        ,
        SVGGaussianBlurEffect.prototype.renderFrame = function(t) {
            if (t || this.filterManager._mdf) {
                var e = .3 * this.filterManager.effectElements[0].p.v
                  , i = this.filterManager.effectElements[1].p.v
                  , s = 3 == i ? 0 : e
                  , n = 2 == i ? 0 : e;
                this.feGaussianBlur.setAttribute("stdDeviation", s + " " + n);
                var r = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
                this.feGaussianBlur.setAttribute("edgeMode", r)
            }
        }
        ,
        registerRenderer("canvas", CanvasRenderer),
        registerRenderer("html", HybridRenderer),
        registerRenderer("svg", SVGRenderer),
        ShapeModifiers.registerModifier("tm", TrimModifier),
        ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
        ShapeModifiers.registerModifier("rp", RepeaterModifier),
        ShapeModifiers.registerModifier("rd", RoundCornersModifier),
        ShapeModifiers.registerModifier("zz", ZigZagModifier),
        ShapeModifiers.registerModifier("op", OffsetPathModifier),
        setExpressionsPlugin(Expressions),
        setExpressionInterfaces(getInterface),
        initialize$1(),
        initialize(),
        registerEffect(20, SVGTintFilter, !0),
        registerEffect(21, SVGFillFilter, !0),
        registerEffect(22, SVGStrokeEffect, !1),
        registerEffect(23, SVGTritoneFilter, !0),
        registerEffect(24, SVGProLevelsFilter, !0),
        registerEffect(25, SVGDropShadowEffect, !0),
        registerEffect(28, SVGMatte3Effect, !1),
        registerEffect(29, SVGGaussianBlurEffect, !0),
        lottie
    }
    ))
}
, function(t, e, i) {
    window,
    t.exports = function(t) {
        var e = {};
        function i(s) {
            if (e[s])
                return e[s].exports;
            var n = e[s] = {
                i: s,
                l: !1,
                exports: {}
            };
            return t[s].call(n.exports, n, n.exports, i),
            n.l = !0,
            n.exports
        }
        return i.m = t,
        i.c = e,
        i.d = function(t, e, s) {
            i.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: s
            })
        }
        ,
        i.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }),
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }
        ,
        i.t = function(t, e) {
            if (1 & e && (t = i(t)),
            8 & e)
                return t;
            if (4 & e && "object" == typeof t && t && t.__esModule)
                return t;
            var s = Object.create(null);
            if (i.r(s),
            Object.defineProperty(s, "default", {
                enumerable: !0,
                value: t
            }),
            2 & e && "string" != typeof t)
                for (var n in t)
                    i.d(s, n, function(e) {
                        return t[e]
                    }
                    .bind(null, n));
            return s
        }
        ,
        i.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default
            }
            : function() {
                return t
            }
            ;
            return i.d(e, "a", e),
            e
        }
        ,
        i.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        ,
        i.p = "",
        i(i.s = 0)
    }([function(t, e, i) {
        "use strict";
        i.r(e);
        var s = []
          , n = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
          , r = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
          , a = {
            t: "top",
            r: "right",
            b: "bottom",
            l: "left",
            c: "centered"
        };
        function o() {}
        var l = ["click", "focusin", "keydown", "input"];
        function h(t) {
            l.forEach((function(e) {
                t.addEventListener(e, t === document ? T : _)
            }
            ))
        }
        function c(t) {
            return Array.isArray(t) ? t.map(c) : "[object Object]" === C(t) ? Object.keys(t).reduce((function(e, i) {
                return e[i] = c(t[i]),
                e
            }
            ), {}) : t
        }
        function u(t, e) {
            var i = t.calendar.querySelector(".qs-overlay")
              , s = i && !i.classList.contains("qs-hidden");
            e = e || new Date(t.currentYear,t.currentMonth),
            t.calendar.innerHTML = [p(e, t, s), d(e, t, s), f(t, s)].join(""),
            s && window.requestAnimationFrame((function() {
                k(!0, t)
            }
            ))
        }
        function p(t, e, i) {
            return ['<div class="qs-controls' + (i ? " qs-blur" : "") + '">', '<div class="qs-arrow qs-left"></div>', '<div class="qs-month-year">', '<span class="qs-month">' + e.months[t.getMonth()] + "</span>", '<span class="qs-year">' + t.getFullYear() + "</span>", "</div>", '<div class="qs-arrow qs-right"></div>', "</div>"].join("")
        }
        function d(t, e, i) {
            var s = e.currentMonth
              , n = e.currentYear
              , r = e.dateSelected
              , a = e.maxDate
              , o = e.minDate
              , l = e.showAllDates
              , h = e.days
              , c = e.disabledDates
              , u = e.startDay
              , p = e.weekendIndices
              , d = e.events
              , f = e.getRange ? e.getRange() : {}
              , m = +f.start
              , g = +f.end
              , y = S(new Date(t).setDate(1))
              , v = y.getDay() - u
              , b = v < 0 ? 7 : 0;
            y.setMonth(y.getMonth() + 1),
            y.setDate(0);
            var w = y.getDate()
              , E = []
              , P = b + 7 * ((v + w) / 7 | 0);
            P += (v + w) % 7 ? 7 : 0;
            for (var k = 1; k <= P; k++) {
                var x = (k - 1) % 7
                  , C = h[x]
                  , A = k - (v >= 0 ? v : 7 + v)
                  , T = new Date(n,s,A)
                  , _ = d[+T]
                  , M = A < 1 || A > w
                  , D = M ? A < 1 ? -1 : 1 : 0
                  , I = M && !l
                  , F = I ? "" : T.getDate()
                  , L = +T == +r
                  , B = x === p[0] || x === p[1]
                  , V = m !== g
                  , R = "qs-square " + C;
                _ && !I && (R += " qs-event"),
                M && (R += " qs-outside-current-month"),
                !l && M || (R += " qs-num"),
                L && (R += " qs-active"),
                (c[+T] || e.disabler(T) || B && e.noWeekends || o && +T < +o || a && +T > +a) && !I && (R += " qs-disabled"),
                +S(new Date) == +T && (R += " qs-current"),
                +T === m && g && V && (R += " qs-range-start"),
                +T > m && +T < g && (R += " qs-range-middle"),
                +T === g && m && V && (R += " qs-range-end"),
                I && (R += " qs-empty",
                F = ""),
                E.push('<div class="' + R + '" data-direction="' + D + '">' + F + "</div>")
            }
            var N = h.map((function(t) {
                return '<div class="qs-square qs-day">' + t + "</div>"
            }
            )).concat(E);
            return N.unshift('<div class="qs-squares' + (i ? " qs-blur" : "") + '">'),
            N.push("</div>"),
            N.join("")
        }
        function f(t, e) {
            var i = t.overlayPlaceholder
              , s = t.overlayButton;
            return ['<div class="qs-overlay' + (e ? "" : " qs-hidden") + '">', "<div>", '<input class="qs-overlay-year" placeholder="' + i + '" inputmode="numeric" />', '<div class="qs-close">&#10005;</div>', "</div>", '<div class="qs-overlay-month-container">' + t.overlayMonths.map((function(t, e) {
                return '<div class="qs-overlay-month" data-month-num="' + e + '">' + t + "</div>"
            }
            )).join("") + "</div>", '<div class="qs-submit qs-disabled">' + s + "</div>", "</div>"].join("")
        }
        function m(t, e, i) {
            var s = e.el
              , n = e.calendar.querySelector(".qs-active")
              , r = t.textContent
              , a = e.sibling;
            (s.disabled || s.readOnly) && e.respectDisabledReadOnly || (e.dateSelected = i ? void 0 : new Date(e.currentYear,e.currentMonth,r),
            n && n.classList.remove("qs-active"),
            i || t.classList.add("qs-active"),
            y(s, e, i),
            i || E(e),
            a && (g({
                instance: e,
                deselect: i
            }),
            e.first && !a.dateSelected && (a.currentYear = e.currentYear,
            a.currentMonth = e.currentMonth,
            a.currentMonthName = e.currentMonthName),
            u(e),
            u(a)),
            e.onSelect(e, i ? void 0 : new Date(e.dateSelected)))
        }
        function g(t) {
            var e = t.instance.first ? t.instance : t.instance.sibling
              , i = e.sibling;
            e === t.instance ? t.deselect ? (e.minDate = e.originalMinDate,
            i.minDate = i.originalMinDate) : i.minDate = e.dateSelected : t.deselect ? (i.maxDate = i.originalMaxDate,
            e.maxDate = e.originalMaxDate) : e.maxDate = i.dateSelected
        }
        function y(t, e, i) {
            if (!e.nonInput)
                return i ? t.value = "" : e.formatter !== o ? e.formatter(t, e.dateSelected, e) : void (t.value = e.dateSelected.toDateString())
        }
        function v(t, e, i, s) {
            i || s ? (i && (e.currentYear = +i),
            s && (e.currentMonth = +s)) : (e.currentMonth += t.contains("qs-right") ? 1 : -1,
            12 === e.currentMonth ? (e.currentMonth = 0,
            e.currentYear++) : -1 === e.currentMonth && (e.currentMonth = 11,
            e.currentYear--)),
            e.currentMonthName = e.months[e.currentMonth],
            u(e),
            e.onMonthChange(e)
        }
        function b(t) {
            if (!t.noPosition) {
                var e = t.position.top
                  , i = t.position.right;
                if (t.position.centered)
                    return t.calendarContainer.classList.add("qs-centered");
                var s = t.positionedEl.getBoundingClientRect()
                  , n = t.el.getBoundingClientRect()
                  , r = t.calendarContainer.getBoundingClientRect()
                  , a = n.top - s.top + (e ? -1 * r.height : n.height) + "px"
                  , o = n.left - s.left + (i ? n.width - r.width : 0) + "px";
                t.calendarContainer.style.setProperty("top", a),
                t.calendarContainer.style.setProperty("left", o)
            }
        }
        function w(t) {
            return "[object Date]" === C(t) && "Invalid Date" !== t.toString()
        }
        function S(t) {
            if (w(t) || "number" == typeof t && !isNaN(t)) {
                var e = new Date(+t);
                return new Date(e.getFullYear(),e.getMonth(),e.getDate())
            }
        }
        function E(t) {
            t.disabled || !t.calendarContainer.classList.contains("qs-hidden") && !t.alwaysShow && ("overlay" !== t.defaultView && k(!0, t),
            t.calendarContainer.classList.add("qs-hidden"),
            t.onHide(t))
        }
        function P(t) {
            t.disabled || (t.calendarContainer.classList.remove("qs-hidden"),
            "overlay" === t.defaultView && k(!1, t),
            b(t),
            t.onShow(t))
        }
        function k(t, e) {
            var i = e.calendar
              , s = i.querySelector(".qs-overlay")
              , n = s.querySelector(".qs-overlay-year")
              , r = i.querySelector(".qs-controls")
              , a = i.querySelector(".qs-squares");
            t ? (s.classList.add("qs-hidden"),
            r.classList.remove("qs-blur"),
            a.classList.remove("qs-blur"),
            n.value = "") : (s.classList.remove("qs-hidden"),
            r.classList.add("qs-blur"),
            a.classList.add("qs-blur"),
            n.focus())
        }
        function x(t, e, i, s) {
            var n = isNaN(+(new Date).setFullYear(e.value || void 0))
              , r = n ? null : e.value;
            13 === t.which || 13 === t.keyCode || "click" === t.type ? s ? v(null, i, r, s) : n || e.classList.contains("qs-disabled") || v(null, i, r) : i.calendar.contains(e) && i.calendar.querySelector(".qs-submit").classList[n ? "add" : "remove"]("qs-disabled")
        }
        function C(t) {
            return {}.toString.call(t)
        }
        function A(t) {
            s.forEach((function(e) {
                e !== t && E(e)
            }
            ))
        }
        function T(t) {
            if (!t.__qs_shadow_dom) {
                var e = t.which || t.keyCode
                  , i = t.type
                  , n = t.target
                  , a = n.classList
                  , o = s.filter((function(t) {
                    return t.calendar.contains(n) || t.el === n
                }
                ))[0]
                  , l = o && o.calendar.contains(n);
                if (!(o && o.isMobile && o.disableMobile))
                    if ("click" === i) {
                        if (!o)
                            return s.forEach(E);
                        if (o.disabled)
                            return;
                        var h = o.calendar
                          , c = o.calendarContainer
                          , p = o.disableYearOverlay
                          , d = o.nonInput
                          , f = h.querySelector(".qs-overlay-year")
                          , g = !!h.querySelector(".qs-hidden")
                          , y = h.querySelector(".qs-month-year").contains(n)
                          , b = n.dataset.monthNum;
                        if (o.noPosition && !l)
                            (c.classList.contains("qs-hidden") ? P : E)(o);
                        else if (a.contains("qs-arrow"))
                            v(a, o);
                        else if (y || a.contains("qs-close"))
                            p || k(!g, o);
                        else if (b)
                            x(t, f, o, b);
                        else {
                            if (a.contains("qs-disabled"))
                                return;
                            if (a.contains("qs-num")) {
                                var w = n.textContent
                                  , S = +n.dataset.direction
                                  , C = new Date(o.currentYear,o.currentMonth + S,w);
                                if (S) {
                                    o.currentYear = C.getFullYear(),
                                    o.currentMonth = C.getMonth(),
                                    o.currentMonthName = r[o.currentMonth],
                                    u(o);
                                    for (var T, _ = o.calendar.querySelectorAll('[data-direction="0"]'), M = 0; !T; ) {
                                        var D = _[M];
                                        D.textContent === w && (T = D),
                                        M++
                                    }
                                    n = T
                                }
                                return void (+C == +o.dateSelected ? m(n, o, !0) : n.classList.contains("qs-disabled") || m(n, o))
                            }
                            a.contains("qs-submit") ? x(t, f, o) : d && n === o.el && (P(o),
                            A(o))
                        }
                    } else if ("focusin" === i && o)
                        P(o),
                        A(o);
                    else if ("keydown" === i && 9 === e && o)
                        E(o);
                    else if ("keydown" === i && o && !o.disabled) {
                        var I = !o.calendar.querySelector(".qs-overlay").classList.contains("qs-hidden");
                        13 === e && I && l ? x(t, n, o) : 27 === e && I && l && k(!0, o)
                    } else if ("input" === i) {
                        if (!o || !o.calendar.contains(n))
                            return;
                        var F = o.calendar.querySelector(".qs-submit")
                          , L = n.value.split("").reduce((function(t, e) {
                            return t || "0" !== e ? t + (e.match(/[0-9]/) ? e : "") : ""
                        }
                        ), "").slice(0, 4);
                        n.value = L,
                        F.classList[4 === L.length ? "remove" : "add"]("qs-disabled")
                    }
            }
        }
        function _(t) {
            T(t),
            t.__qs_shadow_dom = !0
        }
        function M(t, e) {
            l.forEach((function(i) {
                t.removeEventListener(i, e)
            }
            ))
        }
        function D() {
            P(this)
        }
        function I() {
            E(this)
        }
        function F(t, e) {
            var i = S(t)
              , s = this.currentYear
              , n = this.currentMonth
              , r = this.sibling;
            if (null == t)
                return this.dateSelected = void 0,
                y(this.el, this, !0),
                r && (g({
                    instance: this,
                    deselect: !0
                }),
                u(r)),
                u(this),
                this;
            if (!w(t))
                throw new Error("`setDate` needs a JavaScript Date object.");
            if (this.disabledDates[+i] || i < this.minDate || i > this.maxDate)
                throw new Error("You can't manually set a date that's disabled.");
            this.dateSelected = i,
            e && (this.currentYear = i.getFullYear(),
            this.currentMonth = i.getMonth(),
            this.currentMonthName = this.months[i.getMonth()]),
            y(this.el, this),
            r && (g({
                instance: this
            }),
            u(r));
            var a = s === i.getFullYear() && n === i.getMonth();
            return a || e ? u(this, i) : a || u(this, new Date(s,n,1)),
            this
        }
        function L(t) {
            return V(this, t, !0)
        }
        function B(t) {
            return V(this, t)
        }
        function V(t, e, i) {
            var s = t.dateSelected
              , n = t.first
              , r = t.sibling
              , a = t.minDate
              , o = t.maxDate
              , l = S(e)
              , h = i ? "Min" : "Max";
            function c() {
                return "original" + h + "Date"
            }
            function p() {
                return h.toLowerCase() + "Date"
            }
            function d() {
                return "set" + h
            }
            function f() {
                throw new Error("Out-of-range date passed to " + d())
            }
            if (null == e)
                t[c()] = void 0,
                r ? (r[c()] = void 0,
                i ? (n && !s || !n && !r.dateSelected) && (t.minDate = void 0,
                r.minDate = void 0) : (n && !r.dateSelected || !n && !s) && (t.maxDate = void 0,
                r.maxDate = void 0)) : t[p()] = void 0;
            else {
                if (!w(e))
                    throw new Error("Invalid date passed to " + d());
                r ? ((n && i && l > (s || o) || n && !i && l < (r.dateSelected || a) || !n && i && l > (r.dateSelected || o) || !n && !i && l < (s || a)) && f(),
                t[c()] = l,
                r[c()] = l,
                (i && (n && !s || !n && !r.dateSelected) || !i && (n && !r.dateSelected || !n && !s)) && (t[p()] = l,
                r[p()] = l)) : ((i && l > (s || o) || !i && l < (s || a)) && f(),
                t[p()] = l)
            }
            return r && u(r),
            u(t),
            t
        }
        function R() {
            var t = this.first ? this : this.sibling
              , e = t.sibling;
            return {
                start: t.dateSelected,
                end: e.dateSelected
            }
        }
        function N() {
            var t = this.shadowDom
              , e = this.positionedEl
              , i = this.calendarContainer
              , n = this.sibling
              , r = this;
            this.inlinePosition && (s.some((function(t) {
                return t !== r && t.positionedEl === e
            }
            )) || e.style.setProperty("position", null)),
            i.remove(),
            s = s.filter((function(t) {
                return t !== r
            }
            )),
            n && delete n.sibling,
            s.length || M(document, T);
            var a = s.some((function(e) {
                return e.shadowDom === t
            }
            ));
            for (var o in t && !a && M(t, _),
            this)
                delete this[o];
            s.length || l.forEach((function(t) {
                document.removeEventListener(t, T)
            }
            ))
        }
        function O(t, e) {
            var i = new Date(t);
            if (!w(i))
                throw new Error("Invalid date passed to `navigate`");
            this.currentYear = i.getFullYear(),
            this.currentMonth = i.getMonth(),
            u(this),
            e && this.onMonthChange(this)
        }
        function q() {
            var t = !this.calendarContainer.classList.contains("qs-hidden")
              , e = !this.calendarContainer.querySelector(".qs-overlay").classList.contains("qs-hidden");
            t && k(e, this)
        }
        e.default = function(t, e) {
            var i = function(t, e) {
                var i, l, h = function(t) {
                    var e = c(t);
                    e.events && (e.events = e.events.reduce((function(t, e) {
                        if (!w(e))
                            throw new Error('"options.events" must only contain valid JavaScript Date objects.');
                        return t[+S(e)] = !0,
                        t
                    }
                    ), {})),
                    ["startDate", "dateSelected", "minDate", "maxDate"].forEach((function(t) {
                        var i = e[t];
                        if (i && !w(i))
                            throw new Error('"options.' + t + '" needs to be a valid JavaScript Date object.');
                        e[t] = S(i)
                    }
                    ));
                    var i = e.position
                      , r = e.maxDate
                      , l = e.minDate
                      , h = e.dateSelected
                      , u = e.overlayPlaceholder
                      , p = e.overlayButton
                      , d = e.startDay
                      , f = e.id;
                    if (e.startDate = S(e.startDate || h || new Date),
                    e.disabledDates = (e.disabledDates || []).reduce((function(t, e) {
                        var i = +S(e);
                        if (!w(e))
                            throw new Error('You supplied an invalid date to "options.disabledDates".');
                        if (i === +S(h))
                            throw new Error('"disabledDates" cannot contain the same date as "dateSelected".');
                        return t[i] = 1,
                        t
                    }
                    ), {}),
                    e.hasOwnProperty("id") && null == f)
                        throw new Error("`id` cannot be `null` or `undefined`");
                    if (null != f) {
                        var m = s.filter((function(t) {
                            return t.id === f
                        }
                        ));
                        if (m.length > 1)
                            throw new Error("Only two datepickers can share an id.");
                        m.length ? (e.second = !0,
                        e.sibling = m[0]) : e.first = !0
                    }
                    var g = ["tr", "tl", "br", "bl", "c"].some((function(t) {
                        return i === t
                    }
                    ));
                    if (i && !g)
                        throw new Error('"options.position" must be one of the following: tl, tr, bl, br, or c.');
                    function y(t) {
                        throw new Error('"dateSelected" in options is ' + (t ? "less" : "greater") + ' than "' + (t || "max") + 'Date".')
                    }
                    if (e.position = function(t) {
                        var e = t[0]
                          , i = t[1]
                          , s = {};
                        return s[a[e]] = 1,
                        i && (s[a[i]] = 1),
                        s
                    }(i || "bl"),
                    r < l)
                        throw new Error('"maxDate" in options is less than "minDate".');
                    if (h && (l > h && y("min"),
                    r < h && y()),
                    ["onSelect", "onShow", "onHide", "onMonthChange", "formatter", "disabler"].forEach((function(t) {
                        "function" != typeof e[t] && (e[t] = o)
                    }
                    )),
                    ["customDays", "customMonths", "customOverlayMonths"].forEach((function(t, i) {
                        var s = e[t]
                          , n = i ? 12 : 7;
                        if (s) {
                            if (!Array.isArray(s) || s.length !== n || s.some((function(t) {
                                return "string" != typeof t
                            }
                            )))
                                throw new Error('"' + t + '" must be an array with ' + n + " strings.");
                            e[i ? i < 2 ? "months" : "overlayMonths" : "days"] = s
                        }
                    }
                    )),
                    d && d > 0 && d < 7) {
                        var v = (e.customDays || n).slice()
                          , b = v.splice(0, d);
                        e.customDays = v.concat(b),
                        e.startDay = +d,
                        e.weekendIndices = [v.length - 1, v.length]
                    } else
                        e.startDay = 0,
                        e.weekendIndices = [6, 0];
                    "string" != typeof u && delete e.overlayPlaceholder,
                    "string" != typeof p && delete e.overlayButton;
                    var E = e.defaultView;
                    if (E && "calendar" !== E && "overlay" !== E)
                        throw new Error('options.defaultView must either be "calendar" or "overlay".');
                    return e.defaultView = E || "calendar",
                    e
                }(e || {
                    startDate: S(new Date),
                    position: "bl",
                    defaultView: "calendar"
                }), u = t;
                if ("string" == typeof u)
                    u = "#" === u[0] ? document.getElementById(u.slice(1)) : document.querySelector(u);
                else {
                    if ("[object ShadowRoot]" === C(u))
                        throw new Error("Using a shadow DOM as your selector is not supported.");
                    for (var p, d = u.parentNode; !p; ) {
                        var f = C(d);
                        "[object HTMLDocument]" === f ? p = !0 : "[object ShadowRoot]" === f ? (p = !0,
                        i = d,
                        l = d.host) : d = d.parentNode
                    }
                }
                if (!u)
                    throw new Error("No selector / element found.");
                if (s.some((function(t) {
                    return t.el === u
                }
                )))
                    throw new Error("A datepicker already exists on that element.");
                var m = u === document.body
                  , g = i ? u.parentElement || i : m ? document.body : u.parentElement
                  , v = i ? u.parentElement || l : g
                  , b = document.createElement("div")
                  , E = document.createElement("div");
                b.className = "qs-datepicker-container qs-hidden",
                E.className = "qs-datepicker";
                var k = {
                    shadowDom: i,
                    customElement: l,
                    positionedEl: v,
                    el: u,
                    parent: g,
                    nonInput: "INPUT" !== u.nodeName,
                    noPosition: m,
                    position: !m && h.position,
                    startDate: h.startDate,
                    dateSelected: h.dateSelected,
                    disabledDates: h.disabledDates,
                    minDate: h.minDate,
                    maxDate: h.maxDate,
                    noWeekends: !!h.noWeekends,
                    weekendIndices: h.weekendIndices,
                    calendarContainer: b,
                    calendar: E,
                    currentMonth: (h.startDate || h.dateSelected).getMonth(),
                    currentMonthName: (h.months || r)[(h.startDate || h.dateSelected).getMonth()],
                    currentYear: (h.startDate || h.dateSelected).getFullYear(),
                    events: h.events || {},
                    defaultView: h.defaultView,
                    setDate: F,
                    remove: N,
                    setMin: L,
                    setMax: B,
                    show: D,
                    hide: I,
                    navigate: O,
                    toggleOverlay: q,
                    onSelect: h.onSelect,
                    onShow: h.onShow,
                    onHide: h.onHide,
                    onMonthChange: h.onMonthChange,
                    formatter: h.formatter,
                    disabler: h.disabler,
                    months: h.months || r,
                    days: h.customDays || n,
                    startDay: h.startDay,
                    overlayMonths: h.overlayMonths || (h.months || r).map((function(t) {
                        return t.slice(0, 3)
                    }
                    )),
                    overlayPlaceholder: h.overlayPlaceholder || "4-digit year",
                    overlayButton: h.overlayButton || "Submit",
                    disableYearOverlay: !!h.disableYearOverlay,
                    disableMobile: !!h.disableMobile,
                    isMobile: "ontouchstart"in window,
                    alwaysShow: !!h.alwaysShow,
                    id: h.id,
                    showAllDates: !!h.showAllDates,
                    respectDisabledReadOnly: !!h.respectDisabledReadOnly,
                    first: h.first,
                    second: h.second
                };
                if (h.sibling) {
                    var x = h.sibling
                      , A = k
                      , T = x.minDate || A.minDate
                      , _ = x.maxDate || A.maxDate;
                    A.sibling = x,
                    x.sibling = A,
                    x.minDate = T,
                    x.maxDate = _,
                    A.minDate = T,
                    A.maxDate = _,
                    x.originalMinDate = T,
                    x.originalMaxDate = _,
                    A.originalMinDate = T,
                    A.originalMaxDate = _,
                    x.getRange = R,
                    A.getRange = R
                }
                h.dateSelected && y(u, k);
                var M = getComputedStyle(v).position;
                m || M && "static" !== M || (k.inlinePosition = !0,
                v.style.setProperty("position", "relative"));
                var V = s.filter((function(t) {
                    return t.positionedEl === k.positionedEl
                }
                ));
                return V.some((function(t) {
                    return t.inlinePosition
                }
                )) && (k.inlinePosition = !0,
                V.forEach((function(t) {
                    t.inlinePosition = !0
                }
                ))),
                b.appendChild(E),
                g.appendChild(b),
                k.alwaysShow && P(k),
                k
            }(t, e);
            if (s.length || h(document),
            i.shadowDom && (s.some((function(t) {
                return t.shadowDom === i.shadowDom
            }
            )) || h(i.shadowDom)),
            s.push(i),
            i.second) {
                var l = i.sibling;
                g({
                    instance: i,
                    deselect: !i.dateSelected
                }),
                g({
                    instance: l,
                    deselect: !l.dateSelected
                }),
                u(l)
            }
            return u(i, i.startDate || i.dateSelected),
            i.alwaysShow && b(i),
            i
        }
    }
    ]).default
}
, function(t, e, i) {}
, function(t, e, i) {
    var s, n, r;
    /*!
 * Flickity v2.2.1
 * Touch, responsive, flickable carousels
 *
 * Licensed GPLv3 for open source use
 * or Flickity Commercial License for commercial use
 *
 * https://flickity.metafizzy.co
 * Copyright 2015-2019 Metafizzy
 */
    window,
    n = [i(21), i(56), i(58), i(59), i(60), i(61), i(62)],
    void 0 === (r = "function" == typeof (s = function(t) {
        return t
    }
    ) ? s.apply(e, n) : s) || (t.exports = r)
}
, function(t, e, i) {
    var s, n;
    !function(r, a) {
        "use strict";
        void 0 === (n = "function" == typeof (s = a) ? s.call(e, i, e, t) : s) || (t.exports = n)
    }(window, (function() {
        "use strict";
        var t = function() {
            var t = window.Element.prototype;
            if (t.matches)
                return "matches";
            if (t.matchesSelector)
                return "matchesSelector";
            for (var e = ["webkit", "moz", "ms", "o"], i = 0; i < e.length; i++) {
                var s = e[i] + "MatchesSelector";
                if (t[s])
                    return s
            }
        }();
        return function(e, i) {
            return e[t](i)
        }
    }
    ))
}
, function(t, e, i) {
    var s, n;
    window,
    s = [i(44)],
    void 0 === (n = function(t) {
        return function(t, e) {
            "use strict";
            function i(t, e) {
                this.element = t,
                this.parent = e,
                this.create()
            }
            var s = i.prototype;
            return s.create = function() {
                this.element.style.position = "absolute",
                this.element.setAttribute("aria-hidden", "true"),
                this.x = 0,
                this.shift = 0
            }
            ,
            s.destroy = function() {
                this.unselect(),
                this.element.style.position = "";
                var t = this.parent.originSide;
                this.element.style[t] = ""
            }
            ,
            s.getSize = function() {
                this.size = e(this.element)
            }
            ,
            s.setPosition = function(t) {
                this.x = t,
                this.updateTarget(),
                this.renderPosition(t)
            }
            ,
            s.updateTarget = s.setDefaultTarget = function() {
                var t = "left" == this.parent.originSide ? "marginLeft" : "marginRight";
                this.target = this.x + this.size[t] + this.size.width * this.parent.cellAlign
            }
            ,
            s.renderPosition = function(t) {
                var e = this.parent.originSide;
                this.element.style[e] = this.parent.getPositionValue(t)
            }
            ,
            s.select = function() {
                this.element.classList.add("is-selected"),
                this.element.removeAttribute("aria-hidden")
            }
            ,
            s.unselect = function() {
                this.element.classList.remove("is-selected"),
                this.element.setAttribute("aria-hidden", "true")
            }
            ,
            s.wrapShift = function(t) {
                this.shift = t,
                this.renderPosition(this.x + this.parent.slideableWidth * t)
            }
            ,
            s.remove = function() {
                this.element.parentNode.removeChild(this.element)
            }
            ,
            i
        }(0, t)
    }
    .apply(e, s)) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    window,
    void 0 === (n = "function" == typeof (s = function() {
        "use strict";
        function t(t) {
            this.parent = t,
            this.isOriginLeft = "left" == t.originSide,
            this.cells = [],
            this.outerWidth = 0,
            this.height = 0
        }
        var e = t.prototype;
        return e.addCell = function(t) {
            if (this.cells.push(t),
            this.outerWidth += t.size.outerWidth,
            this.height = Math.max(t.size.outerHeight, this.height),
            1 == this.cells.length) {
                this.x = t.x;
                var e = this.isOriginLeft ? "marginLeft" : "marginRight";
                this.firstMargin = t.size[e]
            }
        }
        ,
        e.updateTarget = function() {
            var t = this.isOriginLeft ? "marginRight" : "marginLeft"
              , e = this.getLastCell()
              , i = e ? e.size[t] : 0
              , s = this.outerWidth - (this.firstMargin + i);
            this.target = this.x + this.firstMargin + s * this.parent.cellAlign
        }
        ,
        e.getLastCell = function() {
            return this.cells[this.cells.length - 1]
        }
        ,
        e.select = function() {
            this.cells.forEach((function(t) {
                t.select()
            }
            ))
        }
        ,
        e.unselect = function() {
            this.cells.forEach((function(t) {
                t.unselect()
            }
            ))
        }
        ,
        e.getCellElements = function() {
            return this.cells.map((function(t) {
                return t.element
            }
            ))
        }
        ,
        t
    }
    ) ? s.call(e, i, e, t) : s) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    window,
    s = [i(19)],
    void 0 === (n = function(t) {
        return function(t, e) {
            "use strict";
            var i = {
                startAnimation: function() {
                    this.isAnimating || (this.isAnimating = !0,
                    this.restingFrames = 0,
                    this.animate())
                },
                animate: function() {
                    this.applyDragForce(),
                    this.applySelectedAttraction();
                    var t = this.x;
                    if (this.integratePhysics(),
                    this.positionSlider(),
                    this.settle(t),
                    this.isAnimating) {
                        var e = this;
                        requestAnimationFrame((function() {
                            e.animate()
                        }
                        ))
                    }
                },
                positionSlider: function() {
                    var t = this.x;
                    this.options.wrapAround && this.cells.length > 1 && (t = e.modulo(t, this.slideableWidth),
                    t -= this.slideableWidth,
                    this.shiftWrapCells(t)),
                    this.setTranslateX(t, this.isAnimating),
                    this.dispatchScrollEvent()
                },
                setTranslateX: function(t, e) {
                    t += this.cursorPosition,
                    t = this.options.rightToLeft ? -t : t;
                    var i = this.getPositionValue(t);
                    this.slider.style.transform = e ? "translate3d(" + i + ",0,0)" : "translateX(" + i + ")"
                },
                dispatchScrollEvent: function() {
                    var t = this.slides[0];
                    if (t) {
                        var e = -this.x - t.target
                          , i = e / this.slidesWidth;
                        this.dispatchEvent("scroll", null, [i, e])
                    }
                },
                positionSliderAtSelected: function() {
                    this.cells.length && (this.x = -this.selectedSlide.target,
                    this.velocity = 0,
                    this.positionSlider())
                },
                getPositionValue: function(t) {
                    return this.options.percentPosition ? .01 * Math.round(t / this.size.innerWidth * 1e4) + "%" : Math.round(t) + "px"
                },
                settle: function(t) {
                    this.isPointerDown || Math.round(100 * this.x) != Math.round(100 * t) || this.restingFrames++,
                    this.restingFrames > 2 && (this.isAnimating = !1,
                    delete this.isFreeScrolling,
                    this.positionSlider(),
                    this.dispatchEvent("settle", null, [this.selectedIndex]))
                },
                shiftWrapCells: function(t) {
                    var e = this.cursorPosition + t;
                    this._shiftCells(this.beforeShiftCells, e, -1);
                    var i = this.size.innerWidth - (t + this.slideableWidth + this.cursorPosition);
                    this._shiftCells(this.afterShiftCells, i, 1)
                },
                _shiftCells: function(t, e, i) {
                    for (var s = 0; s < t.length; s++) {
                        var n = t[s]
                          , r = e > 0 ? i : 0;
                        n.wrapShift(r),
                        e -= n.size.outerWidth
                    }
                },
                _unshiftCells: function(t) {
                    if (t && t.length)
                        for (var e = 0; e < t.length; e++)
                            t[e].wrapShift(0)
                },
                integratePhysics: function() {
                    this.x += this.velocity,
                    this.velocity *= this.getFrictionFactor()
                },
                applyForce: function(t) {
                    this.velocity += t
                },
                getFrictionFactor: function() {
                    return 1 - this.options[this.isFreeScrolling ? "freeScrollFriction" : "friction"]
                },
                getRestingPosition: function() {
                    return this.x + this.velocity / (1 - this.getFrictionFactor())
                },
                applyDragForce: function() {
                    if (this.isDraggable && this.isPointerDown) {
                        var t = this.dragX - this.x - this.velocity;
                        this.applyForce(t)
                    }
                },
                applySelectedAttraction: function() {
                    if ((!this.isDraggable || !this.isPointerDown) && !this.isFreeScrolling && this.slides.length) {
                        var t = (-1 * this.selectedSlide.target - this.x) * this.options.selectedAttraction;
                        this.applyForce(t)
                    }
                }
            };
            return i
        }(0, t)
    }
    .apply(e, s)) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    !function(r, a) {
        s = [i(21), i(57), i(19)],
        void 0 === (n = function(t, e, i) {
            return function(t, e, i, s) {
                "use strict";
                s.extend(e.defaults, {
                    draggable: ">1",
                    dragThreshold: 3
                }),
                e.createMethods.push("_createDrag");
                var n = e.prototype;
                s.extend(n, i.prototype),
                n._touchActionValue = "pan-y";
                var r = "createTouch"in document
                  , a = !1;
                n._createDrag = function() {
                    this.on("activate", this.onActivateDrag),
                    this.on("uiChange", this._uiChangeDrag),
                    this.on("deactivate", this.onDeactivateDrag),
                    this.on("cellChange", this.updateDraggable),
                    r && !a && (t.addEventListener("touchmove", (function() {}
                    )),
                    a = !0)
                }
                ,
                n.onActivateDrag = function() {
                    this.handles = [this.viewport],
                    this.bindHandles(),
                    this.updateDraggable()
                }
                ,
                n.onDeactivateDrag = function() {
                    this.unbindHandles(),
                    this.element.classList.remove("is-draggable")
                }
                ,
                n.updateDraggable = function() {
                    ">1" == this.options.draggable ? this.isDraggable = this.slides.length > 1 : this.isDraggable = this.options.draggable,
                    this.isDraggable ? this.element.classList.add("is-draggable") : this.element.classList.remove("is-draggable")
                }
                ,
                n.bindDrag = function() {
                    this.options.draggable = !0,
                    this.updateDraggable()
                }
                ,
                n.unbindDrag = function() {
                    this.options.draggable = !1,
                    this.updateDraggable()
                }
                ,
                n._uiChangeDrag = function() {
                    delete this.isFreeScrolling
                }
                ,
                n.pointerDown = function(e, i) {
                    this.isDraggable ? this.okayPointerDown(e) && (this._pointerDownPreventDefault(e),
                    this.pointerDownFocus(e),
                    document.activeElement != this.element && this.pointerDownBlur(),
                    this.dragX = this.x,
                    this.viewport.classList.add("is-pointer-down"),
                    this.pointerDownScroll = l(),
                    t.addEventListener("scroll", this),
                    this._pointerDownDefault(e, i)) : this._pointerDownDefault(e, i)
                }
                ,
                n._pointerDownDefault = function(t, e) {
                    this.pointerDownPointer = {
                        pageX: e.pageX,
                        pageY: e.pageY
                    },
                    this._bindPostStartEvents(t),
                    this.dispatchEvent("pointerDown", t, [e])
                }
                ;
                var o = {
                    INPUT: !0,
                    TEXTAREA: !0,
                    SELECT: !0
                };
                function l() {
                    return {
                        x: t.pageXOffset,
                        y: t.pageYOffset
                    }
                }
                return n.pointerDownFocus = function(t) {
                    o[t.target.nodeName] || this.focus()
                }
                ,
                n._pointerDownPreventDefault = function(t) {
                    var e = "touchstart" == t.type
                      , i = "touch" == t.pointerType
                      , s = o[t.target.nodeName];
                    e || i || s || t.preventDefault()
                }
                ,
                n.hasDragStarted = function(t) {
                    return Math.abs(t.x) > this.options.dragThreshold
                }
                ,
                n.pointerUp = function(t, e) {
                    delete this.isTouchScrolling,
                    this.viewport.classList.remove("is-pointer-down"),
                    this.dispatchEvent("pointerUp", t, [e]),
                    this._dragPointerUp(t, e)
                }
                ,
                n.pointerDone = function() {
                    t.removeEventListener("scroll", this),
                    delete this.pointerDownScroll
                }
                ,
                n.dragStart = function(e, i) {
                    this.isDraggable && (this.dragStartPosition = this.x,
                    this.startAnimation(),
                    t.removeEventListener("scroll", this),
                    this.dispatchEvent("dragStart", e, [i]))
                }
                ,
                n.pointerMove = function(t, e) {
                    var i = this._dragPointerMove(t, e);
                    this.dispatchEvent("pointerMove", t, [e, i]),
                    this._dragMove(t, e, i)
                }
                ,
                n.dragMove = function(t, e, i) {
                    if (this.isDraggable) {
                        t.preventDefault(),
                        this.previousDragX = this.dragX;
                        var s = this.options.rightToLeft ? -1 : 1;
                        this.options.wrapAround && (i.x = i.x % this.slideableWidth);
                        var n = this.dragStartPosition + i.x * s;
                        if (!this.options.wrapAround && this.slides.length) {
                            var r = Math.max(-this.slides[0].target, this.dragStartPosition);
                            n = n > r ? .5 * (n + r) : n;
                            var a = Math.min(-this.getLastSlide().target, this.dragStartPosition);
                            n = n < a ? .5 * (n + a) : n
                        }
                        this.dragX = n,
                        this.dragMoveTime = new Date,
                        this.dispatchEvent("dragMove", t, [e, i])
                    }
                }
                ,
                n.dragEnd = function(t, e) {
                    if (this.isDraggable) {
                        this.options.freeScroll && (this.isFreeScrolling = !0);
                        var i = this.dragEndRestingSelect();
                        if (this.options.freeScroll && !this.options.wrapAround) {
                            var s = this.getRestingPosition();
                            this.isFreeScrolling = -s > this.slides[0].target && -s < this.getLastSlide().target
                        } else
                            this.options.freeScroll || i != this.selectedIndex || (i += this.dragEndBoostSelect());
                        delete this.previousDragX,
                        this.isDragSelect = this.options.wrapAround,
                        this.select(i),
                        delete this.isDragSelect,
                        this.dispatchEvent("dragEnd", t, [e])
                    }
                }
                ,
                n.dragEndRestingSelect = function() {
                    var t = this.getRestingPosition()
                      , e = Math.abs(this.getSlideDistance(-t, this.selectedIndex))
                      , i = this._getClosestResting(t, e, 1)
                      , s = this._getClosestResting(t, e, -1);
                    return i.distance < s.distance ? i.index : s.index
                }
                ,
                n._getClosestResting = function(t, e, i) {
                    for (var s = this.selectedIndex, n = 1 / 0, r = this.options.contain && !this.options.wrapAround ? function(t, e) {
                        return t <= e
                    }
                    : function(t, e) {
                        return t < e
                    }
                    ; r(e, n) && (s += i,
                    n = e,
                    null !== (e = this.getSlideDistance(-t, s))); )
                        e = Math.abs(e);
                    return {
                        distance: n,
                        index: s - i
                    }
                }
                ,
                n.getSlideDistance = function(t, e) {
                    var i = this.slides.length
                      , n = this.options.wrapAround && i > 1
                      , r = n ? s.modulo(e, i) : e
                      , a = this.slides[r];
                    if (!a)
                        return null;
                    var o = n ? this.slideableWidth * Math.floor(e / i) : 0;
                    return t - (a.target + o)
                }
                ,
                n.dragEndBoostSelect = function() {
                    if (void 0 === this.previousDragX || !this.dragMoveTime || new Date - this.dragMoveTime > 100)
                        return 0;
                    var t = this.getSlideDistance(-this.dragX, this.selectedIndex)
                      , e = this.previousDragX - this.dragX;
                    return t > 0 && e > 0 ? 1 : t < 0 && e < 0 ? -1 : 0
                }
                ,
                n.staticClick = function(t, e) {
                    var i = this.getParentCell(t.target)
                      , s = i && i.element
                      , n = i && this.cells.indexOf(i);
                    this.dispatchEvent("staticClick", t, [e, s, n])
                }
                ,
                n.onscroll = function() {
                    var t = l()
                      , e = this.pointerDownScroll.x - t.x
                      , i = this.pointerDownScroll.y - t.y;
                    (Math.abs(e) > 3 || Math.abs(i) > 3) && this._pointerDone()
                }
                ,
                e
            }(r, t, e, i)
        }
        .apply(e, s)) || (t.exports = n)
    }(window)
}
, function(t, e, i) {
    var s, n;
    /*!
 * Unidragger v2.3.0
 * Draggable base class
 * MIT license
 */
    !function(r, a) {
        s = [i(36)],
        void 0 === (n = function(t) {
            return function(t, e) {
                "use strict";
                function i() {}
                var s = i.prototype = Object.create(e.prototype);
                s.bindHandles = function() {
                    this._bindHandles(!0)
                }
                ,
                s.unbindHandles = function() {
                    this._bindHandles(!1)
                }
                ,
                s._bindHandles = function(e) {
                    for (var i = (e = void 0 === e || e) ? "addEventListener" : "removeEventListener", s = e ? this._touchActionValue : "", n = 0; n < this.handles.length; n++) {
                        var r = this.handles[n];
                        this._bindStartEvent(r, e),
                        r[i]("click", this),
                        t.PointerEvent && (r.style.touchAction = s)
                    }
                }
                ,
                s._touchActionValue = "none",
                s.pointerDown = function(t, e) {
                    this.okayPointerDown(t) && (this.pointerDownPointer = e,
                    t.preventDefault(),
                    this.pointerDownBlur(),
                    this._bindPostStartEvents(t),
                    this.emitEvent("pointerDown", [t, e]))
                }
                ;
                var n = {
                    TEXTAREA: !0,
                    INPUT: !0,
                    SELECT: !0,
                    OPTION: !0
                }
                  , r = {
                    radio: !0,
                    checkbox: !0,
                    button: !0,
                    submit: !0,
                    image: !0,
                    file: !0
                };
                return s.okayPointerDown = function(t) {
                    var e = n[t.target.nodeName]
                      , i = r[t.target.type]
                      , s = !e || i;
                    return s || this._pointerReset(),
                    s
                }
                ,
                s.pointerDownBlur = function() {
                    var t = document.activeElement;
                    t && t.blur && t != document.body && t.blur()
                }
                ,
                s.pointerMove = function(t, e) {
                    var i = this._dragPointerMove(t, e);
                    this.emitEvent("pointerMove", [t, e, i]),
                    this._dragMove(t, e, i)
                }
                ,
                s._dragPointerMove = function(t, e) {
                    var i = {
                        x: e.pageX - this.pointerDownPointer.pageX,
                        y: e.pageY - this.pointerDownPointer.pageY
                    };
                    return !this.isDragging && this.hasDragStarted(i) && this._dragStart(t, e),
                    i
                }
                ,
                s.hasDragStarted = function(t) {
                    return Math.abs(t.x) > 3 || Math.abs(t.y) > 3
                }
                ,
                s.pointerUp = function(t, e) {
                    this.emitEvent("pointerUp", [t, e]),
                    this._dragPointerUp(t, e)
                }
                ,
                s._dragPointerUp = function(t, e) {
                    this.isDragging ? this._dragEnd(t, e) : this._staticClick(t, e)
                }
                ,
                s._dragStart = function(t, e) {
                    this.isDragging = !0,
                    this.isPreventingClicks = !0,
                    this.dragStart(t, e)
                }
                ,
                s.dragStart = function(t, e) {
                    this.emitEvent("dragStart", [t, e])
                }
                ,
                s._dragMove = function(t, e, i) {
                    this.isDragging && this.dragMove(t, e, i)
                }
                ,
                s.dragMove = function(t, e, i) {
                    t.preventDefault(),
                    this.emitEvent("dragMove", [t, e, i])
                }
                ,
                s._dragEnd = function(t, e) {
                    this.isDragging = !1,
                    setTimeout(function() {
                        delete this.isPreventingClicks
                    }
                    .bind(this)),
                    this.dragEnd(t, e)
                }
                ,
                s.dragEnd = function(t, e) {
                    this.emitEvent("dragEnd", [t, e])
                }
                ,
                s.onclick = function(t) {
                    this.isPreventingClicks && t.preventDefault()
                }
                ,
                s._staticClick = function(t, e) {
                    this.isIgnoringMouseUp && "mouseup" == t.type || (this.staticClick(t, e),
                    "mouseup" != t.type && (this.isIgnoringMouseUp = !0,
                    setTimeout(function() {
                        delete this.isIgnoringMouseUp
                    }
                    .bind(this), 400)))
                }
                ,
                s.staticClick = function(t, e) {
                    this.emitEvent("staticClick", [t, e])
                }
                ,
                i.getPointerPoint = e.getPointerPoint,
                i
            }(r, t)
        }
        .apply(e, s)) || (t.exports = n)
    }(window)
}
, function(t, e, i) {
    var s, n;
    window,
    s = [i(21), i(36), i(19)],
    void 0 === (n = function(t, e, i) {
        return function(t, e, i, s) {
            "use strict";
            var n = "http://www.w3.org/2000/svg";
            function r(t, e) {
                this.direction = t,
                this.parent = e,
                this._create()
            }
            r.prototype = Object.create(i.prototype),
            r.prototype._create = function() {
                this.isEnabled = !0,
                this.isPrevious = -1 == this.direction;
                var t = this.parent.options.rightToLeft ? 1 : -1;
                this.isLeft = this.direction == t;
                var e = this.element = document.createElement("button");
                e.className = "flickity-button flickity-prev-next-button",
                e.className += this.isPrevious ? " previous" : " next",
                e.setAttribute("type", "button"),
                this.disable(),
                e.setAttribute("aria-label", this.isPrevious ? "Previous" : "Next");
                var i = this.createSVG();
                e.appendChild(i),
                this.parent.on("select", this.update.bind(this)),
                this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent))
            }
            ,
            r.prototype.activate = function() {
                this.bindStartEvent(this.element),
                this.element.addEventListener("click", this),
                this.parent.element.appendChild(this.element)
            }
            ,
            r.prototype.deactivate = function() {
                this.parent.element.removeChild(this.element),
                this.unbindStartEvent(this.element),
                this.element.removeEventListener("click", this)
            }
            ,
            r.prototype.createSVG = function() {
                var t = document.createElementNS(n, "svg");
                t.setAttribute("class", "flickity-button-icon"),
                t.setAttribute("viewBox", "0 0 100 100");
                var e, i = document.createElementNS(n, "path"), s = "string" == typeof (e = this.parent.options.arrowShape) ? e : "M " + e.x0 + ",50 L " + e.x1 + "," + (e.y1 + 50) + " L " + e.x2 + "," + (e.y2 + 50) + " L " + e.x3 + ",50  L " + e.x2 + "," + (50 - e.y2) + " L " + e.x1 + "," + (50 - e.y1) + " Z";
                return i.setAttribute("d", s),
                i.setAttribute("class", "arrow"),
                this.isLeft || i.setAttribute("transform", "translate(100, 100) rotate(180) "),
                t.appendChild(i),
                t
            }
            ,
            r.prototype.handleEvent = s.handleEvent,
            r.prototype.onclick = function() {
                if (this.isEnabled) {
                    this.parent.uiChange();
                    var t = this.isPrevious ? "previous" : "next";
                    this.parent[t]()
                }
            }
            ,
            r.prototype.enable = function() {
                this.isEnabled || (this.element.disabled = !1,
                this.isEnabled = !0)
            }
            ,
            r.prototype.disable = function() {
                this.isEnabled && (this.element.disabled = !0,
                this.isEnabled = !1)
            }
            ,
            r.prototype.update = function() {
                var t = this.parent.slides;
                if (this.parent.options.wrapAround && t.length > 1)
                    this.enable();
                else {
                    var e = t.length ? t.length - 1 : 0
                      , i = this.isPrevious ? 0 : e;
                    this[this.parent.selectedIndex == i ? "disable" : "enable"]()
                }
            }
            ,
            r.prototype.destroy = function() {
                this.deactivate(),
                this.allOff()
            }
            ,
            s.extend(e.defaults, {
                prevNextButtons: !0,
                arrowShape: {
                    x0: 10,
                    x1: 60,
                    y1: 50,
                    x2: 70,
                    y2: 40,
                    x3: 30
                }
            }),
            e.createMethods.push("_createPrevNextButtons");
            var a = e.prototype;
            return a._createPrevNextButtons = function() {
                this.options.prevNextButtons && (this.prevButton = new r(-1,this),
                this.nextButton = new r(1,this),
                this.on("activate", this.activatePrevNextButtons))
            }
            ,
            a.activatePrevNextButtons = function() {
                this.prevButton.activate(),
                this.nextButton.activate(),
                this.on("deactivate", this.deactivatePrevNextButtons)
            }
            ,
            a.deactivatePrevNextButtons = function() {
                this.prevButton.deactivate(),
                this.nextButton.deactivate(),
                this.off("deactivate", this.deactivatePrevNextButtons)
            }
            ,
            e.PrevNextButton = r,
            e
        }(0, t, e, i)
    }
    .apply(e, s)) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    window,
    s = [i(21), i(36), i(19)],
    void 0 === (n = function(t, e, i) {
        return function(t, e, i, s) {
            "use strict";
            function n(t) {
                this.parent = t,
                this._create()
            }
            n.prototype = Object.create(i.prototype),
            n.prototype._create = function() {
                this.holder = document.createElement("ol"),
                this.holder.className = "flickity-page-dots",
                this.dots = [],
                this.handleClick = this.onClick.bind(this),
                this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent))
            }
            ,
            n.prototype.activate = function() {
                this.setDots(),
                this.holder.addEventListener("click", this.handleClick),
                this.bindStartEvent(this.holder),
                this.parent.element.appendChild(this.holder)
            }
            ,
            n.prototype.deactivate = function() {
                this.holder.removeEventListener("click", this.handleClick),
                this.unbindStartEvent(this.holder),
                this.parent.element.removeChild(this.holder)
            }
            ,
            n.prototype.setDots = function() {
                var t = this.parent.slides.length - this.dots.length;
                t > 0 ? this.addDots(t) : t < 0 && this.removeDots(-t)
            }
            ,
            n.prototype.addDots = function(t) {
                for (var e = document.createDocumentFragment(), i = [], s = this.dots.length, n = s + t, r = s; r < n; r++) {
                    var a = document.createElement("li");
                    a.className = "dot",
                    a.setAttribute("aria-label", "Page dot " + (r + 1)),
                    e.appendChild(a),
                    i.push(a)
                }
                this.holder.appendChild(e),
                this.dots = this.dots.concat(i)
            }
            ,
            n.prototype.removeDots = function(t) {
                this.dots.splice(this.dots.length - t, t).forEach((function(t) {
                    this.holder.removeChild(t)
                }
                ), this)
            }
            ,
            n.prototype.updateSelected = function() {
                this.selectedDot && (this.selectedDot.className = "dot",
                this.selectedDot.removeAttribute("aria-current")),
                this.dots.length && (this.selectedDot = this.dots[this.parent.selectedIndex],
                this.selectedDot.className = "dot is-selected",
                this.selectedDot.setAttribute("aria-current", "step"))
            }
            ,
            n.prototype.onTap = n.prototype.onClick = function(t) {
                var e = t.target;
                if ("LI" == e.nodeName) {
                    this.parent.uiChange();
                    var i = this.dots.indexOf(e);
                    this.parent.select(i)
                }
            }
            ,
            n.prototype.destroy = function() {
                this.deactivate(),
                this.allOff()
            }
            ,
            e.PageDots = n,
            s.extend(e.defaults, {
                pageDots: !0
            }),
            e.createMethods.push("_createPageDots");
            var r = e.prototype;
            return r._createPageDots = function() {
                this.options.pageDots && (this.pageDots = new n(this),
                this.on("activate", this.activatePageDots),
                this.on("select", this.updateSelectedPageDots),
                this.on("cellChange", this.updatePageDots),
                this.on("resize", this.updatePageDots),
                this.on("deactivate", this.deactivatePageDots))
            }
            ,
            r.activatePageDots = function() {
                this.pageDots.activate()
            }
            ,
            r.updateSelectedPageDots = function() {
                this.pageDots.updateSelected()
            }
            ,
            r.updatePageDots = function() {
                this.pageDots.setDots()
            }
            ,
            r.deactivatePageDots = function() {
                this.pageDots.deactivate()
            }
            ,
            e.PageDots = n,
            e
        }(0, t, e, i)
    }
    .apply(e, s)) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    window,
    s = [i(35), i(19), i(21)],
    void 0 === (n = function(t, e, i) {
        return function(t, e, i) {
            "use strict";
            function s(t) {
                this.parent = t,
                this.state = "stopped",
                this.onVisibilityChange = this.visibilityChange.bind(this),
                this.onVisibilityPlay = this.visibilityPlay.bind(this)
            }
            s.prototype = Object.create(t.prototype),
            s.prototype.play = function() {
                "playing" != this.state && (document.hidden ? document.addEventListener("visibilitychange", this.onVisibilityPlay) : (this.state = "playing",
                document.addEventListener("visibilitychange", this.onVisibilityChange),
                this.tick()))
            }
            ,
            s.prototype.tick = function() {
                if ("playing" == this.state) {
                    var t = this.parent.options.autoPlay;
                    t = "number" == typeof t ? t : 3e3;
                    var e = this;
                    this.clear(),
                    this.timeout = setTimeout((function() {
                        e.parent.next(!0),
                        e.tick()
                    }
                    ), t)
                }
            }
            ,
            s.prototype.stop = function() {
                this.state = "stopped",
                this.clear(),
                document.removeEventListener("visibilitychange", this.onVisibilityChange)
            }
            ,
            s.prototype.clear = function() {
                clearTimeout(this.timeout)
            }
            ,
            s.prototype.pause = function() {
                "playing" == this.state && (this.state = "paused",
                this.clear())
            }
            ,
            s.prototype.unpause = function() {
                "paused" == this.state && this.play()
            }
            ,
            s.prototype.visibilityChange = function() {
                this[document.hidden ? "pause" : "unpause"]()
            }
            ,
            s.prototype.visibilityPlay = function() {
                this.play(),
                document.removeEventListener("visibilitychange", this.onVisibilityPlay)
            }
            ,
            e.extend(i.defaults, {
                pauseAutoPlayOnHover: !0
            }),
            i.createMethods.push("_createPlayer");
            var n = i.prototype;
            return n._createPlayer = function() {
                this.player = new s(this),
                this.on("activate", this.activatePlayer),
                this.on("uiChange", this.stopPlayer),
                this.on("pointerDown", this.stopPlayer),
                this.on("deactivate", this.deactivatePlayer)
            }
            ,
            n.activatePlayer = function() {
                this.options.autoPlay && (this.player.play(),
                this.element.addEventListener("mouseenter", this))
            }
            ,
            n.playPlayer = function() {
                this.player.play()
            }
            ,
            n.stopPlayer = function() {
                this.player.stop()
            }
            ,
            n.pausePlayer = function() {
                this.player.pause()
            }
            ,
            n.unpausePlayer = function() {
                this.player.unpause()
            }
            ,
            n.deactivatePlayer = function() {
                this.player.stop(),
                this.element.removeEventListener("mouseenter", this)
            }
            ,
            n.onmouseenter = function() {
                this.options.pauseAutoPlayOnHover && (this.player.pause(),
                this.element.addEventListener("mouseleave", this))
            }
            ,
            n.onmouseleave = function() {
                this.player.unpause(),
                this.element.removeEventListener("mouseleave", this)
            }
            ,
            i.Player = s,
            i
        }(t, e, i)
    }
    .apply(e, s)) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    window,
    s = [i(21), i(19)],
    void 0 === (n = function(t, e) {
        return function(t, e, i) {
            "use strict";
            var s = e.prototype;
            return s.insert = function(t, e) {
                var i = this._makeCells(t);
                if (i && i.length) {
                    var s = this.cells.length;
                    e = void 0 === e ? s : e;
                    var n = function(t) {
                        var e = document.createDocumentFragment();
                        return t.forEach((function(t) {
                            e.appendChild(t.element)
                        }
                        )),
                        e
                    }(i)
                      , r = e == s;
                    if (r)
                        this.slider.appendChild(n);
                    else {
                        var a = this.cells[e].element;
                        this.slider.insertBefore(n, a)
                    }
                    if (0 === e)
                        this.cells = i.concat(this.cells);
                    else if (r)
                        this.cells = this.cells.concat(i);
                    else {
                        var o = this.cells.splice(e, s - e);
                        this.cells = this.cells.concat(i).concat(o)
                    }
                    this._sizeCells(i),
                    this.cellChange(e, !0)
                }
            }
            ,
            s.append = function(t) {
                this.insert(t, this.cells.length)
            }
            ,
            s.prepend = function(t) {
                this.insert(t, 0)
            }
            ,
            s.remove = function(t) {
                var e = this.getCells(t);
                if (e && e.length) {
                    var s = this.cells.length - 1;
                    e.forEach((function(t) {
                        t.remove();
                        var e = this.cells.indexOf(t);
                        s = Math.min(e, s),
                        i.removeFrom(this.cells, t)
                    }
                    ), this),
                    this.cellChange(s, !0)
                }
            }
            ,
            s.cellSizeChange = function(t) {
                var e = this.getCell(t);
                if (e) {
                    e.getSize();
                    var i = this.cells.indexOf(e);
                    this.cellChange(i)
                }
            }
            ,
            s.cellChange = function(t, e) {
                var i = this.selectedElement;
                this._positionCells(t),
                this._getWrapShiftCells(),
                this.setGallerySize();
                var s = this.getCell(i);
                s && (this.selectedIndex = this.getCellSlideIndex(s)),
                this.selectedIndex = Math.min(this.slides.length - 1, this.selectedIndex),
                this.emitEvent("cellChange", [t]),
                this.select(this.selectedIndex),
                e && this.positionSliderAtSelected()
            }
            ,
            e
        }(0, t, e)
    }
    .apply(e, s)) || (t.exports = n)
}
, function(t, e, i) {
    var s, n;
    window,
    s = [i(21), i(19)],
    void 0 === (n = function(t, e) {
        return function(t, e, i) {
            "use strict";
            e.createMethods.push("_createLazyload");
            var s = e.prototype;
            function n(t, e) {
                this.img = t,
                this.flickity = e,
                this.load()
            }
            return s._createLazyload = function() {
                this.on("select", this.lazyLoad)
            }
            ,
            s.lazyLoad = function() {
                var t = this.options.lazyLoad;
                if (t) {
                    var e = "number" == typeof t ? t : 0
                      , s = this.getAdjacentCellElements(e)
                      , r = [];
                    s.forEach((function(t) {
                        var e = function(t) {
                            if ("IMG" == t.nodeName) {
                                var e = t.getAttribute("data-flickity-lazyload")
                                  , s = t.getAttribute("data-flickity-lazyload-src")
                                  , n = t.getAttribute("data-flickity-lazyload-srcset");
                                if (e || s || n)
                                    return [t]
                            }
                            var r = t.querySelectorAll("img[data-flickity-lazyload], img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]");
                            return i.makeArray(r)
                        }(t);
                        r = r.concat(e)
                    }
                    )),
                    r.forEach((function(t) {
                        new n(t,this)
                    }
                    ), this)
                }
            }
            ,
            n.prototype.handleEvent = i.handleEvent,
            n.prototype.load = function() {
                this.img.addEventListener("load", this),
                this.img.addEventListener("error", this);
                var t = this.img.getAttribute("data-flickity-lazyload") || this.img.getAttribute("data-flickity-lazyload-src")
                  , e = this.img.getAttribute("data-flickity-lazyload-srcset");
                this.img.src = t,
                e && this.img.setAttribute("srcset", e),
                this.img.removeAttribute("data-flickity-lazyload"),
                this.img.removeAttribute("data-flickity-lazyload-src"),
                this.img.removeAttribute("data-flickity-lazyload-srcset")
            }
            ,
            n.prototype.onload = function(t) {
                this.complete(t, "flickity-lazyloaded")
            }
            ,
            n.prototype.onerror = function(t) {
                this.complete(t, "flickity-lazyerror")
            }
            ,
            n.prototype.complete = function(t, e) {
                this.img.removeEventListener("load", this),
                this.img.removeEventListener("error", this);
                var i = this.flickity.getParentCell(this.img)
                  , s = i && i.element;
                this.flickity.cellSizeChange(s),
                this.img.classList.add(e),
                this.flickity.dispatchEvent("lazyLoad", t, s)
            }
            ,
            e.LazyLoader = n,
            e
        }(0, t, e)
    }
    .apply(e, s)) || (t.exports = n)
}
, function(t, e) {
    t.exports = function(t) {
        return -1 !== Function.toString.call(t).indexOf("[native code]")
    }
}
, function(t, e, i) {
    var s = i(25);
    function n() {
        if ("undefined" == typeof Reflect || !Reflect.construct)
            return !1;
        if (Reflect.construct.sham)
            return !1;
        if ("function" == typeof Proxy)
            return !0;
        try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
            ))),
            !0
        } catch (t) {
            return !1
        }
    }
    function r(e, i, a) {
        return n() ? t.exports = r = Reflect.construct : t.exports = r = function(t, e, i) {
            var n = [null];
            n.push.apply(n, e);
            var r = new (Function.bind.apply(t, n));
            return i && s(r, i.prototype),
            r
        }
        ,
        r.apply(null, arguments)
    }
    t.exports = r
}
, , , , , , , , , , , , , , , , , , , , , , function(t, e, i) {
    "use strict";
    i.r(e);
    i(50),
    i(33),
    i(34);
    var s = i(26)
      , n = i(1)
      , r = i.n(n)
      , a = i(2)
      , o = i.n(a)
      , l = i(3)
      , h = i.n(l)
      , c = i(0)
      , u = i.n(c)
      , p = i(4)
      , d = i.n(p)
      , f = i(13)
      , m = i(18)
      , g = i.n(m)
      , y = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                var t = this;
                this.carouselSlides = this.querySelector('[class$="-slides"]') || this,
                window.addEventListener("load", (function() {
                    t.handleOptions(),
                    t.flickity = new g.a(t.carouselSlides,t.carouselOptions)
                }
                )),
                window.addEventListener("resize", Object(f.a)(250, (function() {
                    t.handleOptions(),
                    t.rebuildCarouselIfChanged()
                }
                )))
            }
        }, {
            key: "getMediaQuery",
            value: function() {
                var t = window.getComputedStyle(document.querySelector("body"), "::before").getPropertyValue("content") || !1;
                return !!t && t.replace(/["']/g, "")
            }
        }, {
            key: "handleOptions",
            value: function() {
                this.optionsChanged = !1;
                this.carouselOptions = {
                    arrowShape: "M22.4566257,37.2056786 L-21.4456527,71.9511488 C-22.9248661,72.9681457 -24.9073712,72.5311671 -25.8758148,70.9765924 L-26.9788683,69.2027424 C-27.9450684,67.6481676 -27.5292733,65.5646602 -26.0500598,64.5484493 L20.154796,28.2208967 C21.5532435,27.2597011 23.3600078,27.2597011 24.759951,28.2208967 L71.0500598,64.4659264 C72.5292733,65.4829232 72.9450684,67.5672166 71.9788683,69.1217913 L70.8750669,70.8956413 C69.9073712,72.4502161 67.9241183,72.8848368 66.4449048,71.8694118 L22.4566257,37.2056786 Z",
                    adaptiveHeight: !1,
                    imagesLoaded: !0,
                    pageDots: !1,
                    lazyLoad: 2
                }
            }
        }, {
            key: "didMQChange",
            value: function() {
                return this.changedBreakpoints = !1,
                "mq-xs" === this.getMediaQuery() && "xs" !== this.breakpoint && (this.changedBreakpoints = !0,
                this.breakpoint = "xs"),
                "mq-sm" === this.getMediaQuery() && "sm" !== this.breakpoint && (this.changedBreakpoints = !0,
                this.breakpoint = "sm"),
                "mq-md" === this.getMediaQuery() && "md" !== this.breakpoint && (this.changedBreakpoints = !0,
                this.breakpoint = "md"),
                "mq-lg" === this.getMediaQuery() && "lg" !== this.breakpoint && (this.changedBreakpoints = !0,
                this.breakpoint = "lg"),
                "mq-hk" === this.getMediaQuery() && "hk" !== this.breakpoint && (this.changedBreakpoints = !0,
                this.breakpoint = "hk"),
                "mq-xl" === this.getMediaQuery() && "xl" !== this.breakpoint && (this.changedBreakpoints = !0,
                this.breakpoint = "xl"),
                this.changedBreakpoints
            }
        }, {
            key: "rebuildCarouselIfChanged",
            value: function() {
                this.optionsChanged && (this.flickity.destroy(),
                this.flickity = new g.a(this.carouselSlides,this.carouselOptions))
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                this.flickity.destroy()
            }
        }]),
        e
    }(window.HTMLElement)
      , v = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                var t = this;
                window.addEventListener("load", (function() {
                    t.initCarousel(),
                    t.handleStartButton(),
                    t.handleAsideTrigger(),
                    t.flickity.on("change", (function(e) {
                        t.handleSlideChange(e)
                    }
                    ))
                }
                ))
            }
        }, {
            key: "initCarousel",
            value: function() {
                var t = this
                  , e = this.querySelector(".GalleryPage-slides")
                  , i = this.getAttribute("data-start-slide") || 0
                  , s = parseInt(window.location.hash.slice(7));
                s > 0 && (i = s);
                var n = {
                    arrowShape: "M22.4566257,37.2056786 L-21.4456527,71.9511488 C-22.9248661,72.9681457 -24.9073712,72.5311671 -25.8758148,70.9765924 L-26.9788683,69.2027424 C-27.9450684,67.6481676 -27.5292733,65.5646602 -26.0500598,64.5484493 L20.154796,28.2208967 C21.5532435,27.2597011 23.3600078,27.2597011 24.759951,28.2208967 L71.0500598,64.4659264 C72.5292733,65.4829232 72.9450684,67.5672166 71.9788683,69.1217913 L70.8750669,70.8956413 C69.9073712,72.4502161 67.9241183,72.8848368 66.4449048,71.8694118 L22.4566257,37.2056786 Z",
                    adaptiveHeight: !1,
                    hash: !0,
                    imagesLoaded: !0,
                    initialIndex: i,
                    pageDots: !1,
                    lazyLoad: 2
                };
                i > 0 && this.setState("gallery"),
                this.flickity = new g.a(e,n),
                "mq-lg" !== this.getMediaQuery() && "mq-xl" !== this.getMediaQuery() || "true" === this.getAttribute("data-with-aside") && "gallery" === this.getAttribute("data-state") && this.setAttribute("data-showing-aside", !0),
                this.handleSlideChange(i),
                window.addEventListener("load", (function() {
                    t.flickity.resize()
                }
                ))
            }
        }, {
            key: "handleSlideChange",
            value: function(t) {
                if (t > 0) {
                    var e = this.querySelectorAll(".ActionLink")
                      , i = this.flickity.selectedElement.querySelector(".GallerySlide-title")
                      , s = this.flickity.selectedElement.querySelector(".GallerySlide-infoDescription")
                      , n = this.flickity.selectedElement.querySelector(".GallerySlide-media")
                      , r = this.querySelector(".GalleryPage-aside-slideContent")
                      , a = this.querySelector(".GalleryPage-currentSlide");
                    r.innerHTML = "",
                    i && r && (r.innerHTML += i.outerHTML),
                    s && r && (r.innerHTML += s.outerHTML),
                    a && (a.innerHTML = t),
                    e && e.forEach((function(t) {
                        var e = t.getAttribute("href");
                        e && (e = e.split("?")[1]),
                        e && (e.indexOf("#slide") > -1 ? t.setAttribute("href", t.getAttribute("href").replace(/#slide-\d+/, window.location.hash)) : t.setAttribute("href", t.getAttribute("href").replace(window.location.pathname, window.location.pathname + window.location.hash)))
                    }
                    )),
                    document.body.dispatchEvent(new window.CustomEvent("Gallery:onSlideUpdate",{
                        detail: {
                            activeSlide: {
                                index: t,
                                title: i ? i.getAttribute("data-info-title") : "",
                                attribution: i ? i.getAttribute("data-info-attribution") : "",
                                bspId: n.getAttribute("data-image-bsp-id")
                            }
                        }
                    })),
                    this.preloadNextImage(t),
                    this.setState("gallery")
                } else
                    this.setState("start"),
                    this.setAttribute("data-showing-aside", !0)
            }
        }, {
            key: "preloadNextImage",
            value: function(t) {
                var e = t + 1
                  , i = null
                  , s = null;
                e <= this.flickity.cells.length && (i = this.flickity.cells[e].element) && (s = i.querySelector('[data-lazy-load="true"]')) && (s.dataset.src && (s.src = s.dataset.src,
                s.removeAttribute("data-src"),
                s.removeAttribute("data-lazy-load")),
                s.dataset.srcset && (s.srcset = s.dataset.srcset,
                s.removeAttribute("data-srcset"),
                s.removeAttribute("data-lazy-load")))
            }
        }, {
            key: "getMediaQuery",
            value: function() {
                var t = window.getComputedStyle(document.querySelector("body"), "::before").getPropertyValue("content") || !1;
                return !!t && t.replace(/["']/g, "")
            }
        }, {
            key: "setState",
            value: function(t) {
                this.setAttribute("data-state", t),
                "start" === this.getAttribute("data-state") && this.removeAttribute("data-showing-aside")
            }
        }, {
            key: "handleAsideTrigger",
            value: function() {
                var t = this;
                this.querySelector(".GalleryPage-infoButton").addEventListener("click", (function(e) {
                    e.preventDefault(),
                    t.toggleAside()
                }
                ))
            }
        }, {
            key: "toggleAside",
            value: function() {
                "true" === this.getAttribute("data-showing-aside") ? this.setAttribute("data-showing-aside", !1) : this.setAttribute("data-showing-aside", !0)
            }
        }, {
            key: "handleStartButton",
            value: function() {
                var t = this
                  , e = this.querySelector(".GalleryPage-start");
                e && e.addEventListener("click", (function(e) {
                    e.preventDefault(),
                    t.flickity.next()
                }
                ))
            }
        }]),
        e
    }(window.HTMLElement)
      , b = i(27)
      , w = function() {
        function t() {
            r()(this, t),
            this.selector = ".GoogleDfpAd",
            this.init()
        }
        return o()(t, [{
            key: "init",
            value: function() {
                var t = this;
                this.currentMediaQuery = this.getMediaQuery(),
                this.googleAds = document.querySelectorAll(this.selector),
                this.googleAds.length && (this.googleAds.forEach((function(e) {
                    t.processAd(e)
                }
                )),
                this.sendAdserverRequest())
            }
        }, {
            key: "sendAdserverRequest",
            value: function() {
                var t = this;
                window.googletag.cmd.push((function() {
                    window.googletag.pubads().refresh(window.dfpAdSlots),
                    t.createResizeListDner()
                }
                ))
            }
        }, {
            key: "processAd",
            value: function(t) {
                var e = t.getAttribute("data-hide-mobile") || !1
                  , i = t.getAttribute("data-hide-desktop") || !1
                  , s = !0;
                if ("xs" !== this.getMediaQuery && "sm" !== this.getMediaQuery || (s = !1),
                s && i || !s && e)
                    t.parentNode.remove();
                else {
                    var n, r = t.id, a = t.getAttribute("data-slot-name") || "", o = t.getAttribute("data-slot-sizes") || "", l = t.getAttribute("data-slot-adSizeMap") || "";
                    void 0 !== window.googletag && null !== window.googletag && window.googletag.cmd.push((function() {
                        n = window.googletag.defineSlot(a, JSON.parse(o), r).addService(window.googletag.pubads());
                        var e = -1
                          , i = -1
                          , s = window.innerWidth;
                        if (null != l && l.length > 0) {
                            var h = window.googletag.sizeMapping();
                            JSON.parse(l).forEach((function(t) {
                                var n = t.slice(1)
                                  , r = t[0][0]
                                  , a = !0;
                                1 === n.length && 0 === n[0][0] && 0 === n[0][1] && (n = [],
                                a = !1),
                                void 0 !== r && r <= s && (a && r > i ? i = r : !a && r > e && (e = r)),
                                h.addSize(t[0], n)
                            }
                            )),
                            n.defineSizeMapping(h.build())
                        }
                        e >= 0 && e > i && t.setAttribute("data-ad-size-map-hidden", !0),
                        window.googletag.display(r),
                        window.dfpAdSlots.push(n)
                    }
                    ))
                }
            }
        }, {
            key: "getMediaQuery",
            value: function() {
                var t = window.getComputedStyle(document.querySelector("body"), "::before").getPropertyValue("content") || !1;
                return !!t && t.replace(/["']/g, "")
            }
        }, {
            key: "createResizeListDner",
            value: function() {
                var t = this;
                window.addEventListener("resize", Object(f.a)(250, (function() {
                    t.getMediaQuery() !== t.currentMediaQuery && (t.currentMediaQuery = t.getMediaQuery(),
                    window.googletag.pubads().refresh())
                }
                )))
            }
        }]),
        t
    }()
      , S = i(6)
      , E = i.n(S)
      , P = i(9)
      , k = function(t) {
        function e() {
            var t;
            return r()(this, e),
            (t = h()(this, u()(e).call(this))).playing = !1,
            t.player = null,
            t
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                if (E()(u()(e.prototype), "init", this).call(this),
                this.player = this.querySelector("video"),
                this.accountId = this.player.getAttribute("data-account") || !1,
                this.playerId = this.player.getAttribute("data-player") || !1,
                this.videoId = this.player.getAttribute("data-video-id") || !1,
                this.category = this.getAttribute("data-category") || null,
                this.credit = this.getAttribute("data-credit") || null,
                this.location = this.getAttribute("data-location") || null,
                this.ownerSite = this.getAttribute("data-ownerSite") || "Global",
                this.source = this.getAttribute("data-source") || null,
                this.videoUuid = this.getAttribute("data-video-uuid") || !1,
                this.videoFileType = this.getAttribute("data-video-file-type") || !1,
                !(this.accountId && this.playerId && this.videoId))
                    return console.info("Brightcove Video Player: Cannot play video, no account, player or video ID found"),
                    !1;
                this.init()
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                window.videojs.getPlayers()["brightcove-video-" + this.videoId] && delete window.videojs.getPlayers()["brightcove-video-" + this.videoId]
            }
        }, {
            key: "init",
            value: function() {
                this.loadBrightcoveApi(this.accountId, this.playerId)
            }
        }, {
            key: "onBrightcoveAPIReady",
            value: function() {
                var t = this;
                this.videoPlayer = this.querySelector("video"),
                this.thePlayer = window.videojs(this.videoPlayer.id),
                this.prerollAdCode(),
                window.videojs(this.videoPlayer).on("loadedmetadata", (function() {
                    t.startVolume = t.thePlayer.volume(),
                    t.tieIntoEvents()
                }
                ))
            }
        }, {
            key: "getVideoDuration",
            value: function() {
                return this.player.duration || 0
            }
        }, {
            key: "loadBrightcoveApi",
            value: function(t, e) {
                var i = document.createElement("script");
                i.src = "https://players.brightcove.net/" + t + "/" + e + "_default/index.min.js",
                i.addEventListener("load", this.onBrightcoveAPIReady.bind(this));
                var s = document.getElementsByTagName("script")[0];
                s.parentNode.insertBefore(i, s)
            }
        }, {
            key: "prerollAdCode",
            value: function() {
                var t = this;
                this.thePlayer.ima3 && this.thePlayer.ima3.ready((function() {
                    t.thePlayer.ima3.settings.debug = !0;
                    var e = "https://pubads.g.doubleclick.net/gampad/ads?";
                    e += "sz=3x3",
                    e += "&iu=" + encodeURIComponent(t.getAttribute("data-ad-slot")),
                    e += "&ciu_szs",
                    e += "&gdfp_req=1",
                    e += "&env=vp",
                    e += "&output=xml_vast3",
                    e += "&ptype=" + t.getAttribute("data-ad-ptype"),
                    e += "&unviewed_position_start=1",
                    e += "&player=bc",
                    e += "&pos=pre",
                    e += "&muted=false",
                    e += "&player_width=" + t.videoPlayer.offsetWidth,
                    e += "&player_height=" + t.videoPlayer.offsetHeight,
                    e += "&exop=false",
                    e += "&pl=false",
                    e += "&vd=",
                    e += "&vt=",
                    e += "&vc=",
                    e += "&clip=" + t.videoId,
                    e += "&correlator=" + (new Date).getTime(),
                    e += "&tile=13",
                    t.thePlayer.ima3.settings.serverUrl = e
                }
                ))
            }
        }, {
            key: "tieIntoEvents",
            value: function() {
                var t = this;
                E()(u()(e.prototype), "onVideoReady", this).call(this),
                this.thePlayer.on("playing", (function(e) {
                    t.onPlayerPlay(e)
                }
                )),
                this.thePlayer.on("pause", (function(e) {
                    t.onPlayerPause(e)
                }
                )),
                this.thePlayer.on("timeupdate", (function(e) {
                    t.onPlayerTimeUpdate(e)
                }
                )),
                this.thePlayer.on("ended", (function(e) {
                    t.onPlayerEnd(e)
                }
                ))
            }
        }, {
            key: "onPlayerPlay",
            value: function(t) {
                this.playing ? E()(u()(e.prototype), "onVideoPlay", this).call(this, t) : (this.playing = !0,
                E()(u()(e.prototype), "onVideoStart", this).call(this, t))
            }
        }, {
            key: "onPlayerPause",
            value: function(t) {
                E()(u()(e.prototype), "onVideoPause", this).call(this, t)
            }
        }, {
            key: "onPlayerTimeUpdate",
            value: function(t) {
                E()(u()(e.prototype), "onVideoTimeUpdate", this).call(this, {
                    secondsElapsed: this.thePlayer.currentTime()
                })
            }
        }, {
            key: "onPlayerEnd",
            value: function(t) {
                this.playing = !1,
                E()(u()(e.prototype), "onVideoEnd", this).call(this, t)
            }
        }, {
            key: "play",
            value: function() {
                this.thePlayer.play()
            }
        }, {
            key: "pause",
            value: function() {
                this.thePlayer.pause()
            }
        }]),
        e
    }(P.a)
      , x = i(46)
      , C = i.n(x)
      , A = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        e
    }(function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                var t = this;
                this.plyr || (E()(u()(e.prototype), "connectedCallback", this).call(this),
                this.plyr = new C.a(this.plyrContainerElement,{
                    muted: this.muted,
                    autoplay: this.autoplay,
                    poster: this.poster,
                    loop: {
                        active: this.loop
                    },
                    clickToPlay: !this.disableClickToPlay,
                    hideControls: !1,
                    captions: {
                        active: !0
                    }
                }),
                setTimeout((function() {
                    t.plyr.poster = t.poster
                }
                )),
                this.plyr.once("ready", (function() {
                    return t.onReady()
                }
                )),
                this.plyr.on("timeupdate", (function() {
                    return t.onTimeUpdate()
                }
                )),
                this.plyr.on("volumechange", (function() {
                    return t.onVolumneChange()
                }
                )),
                this.plyr.on("enterfullscreen", (function() {
                    return t.onEnterFullScreen()
                }
                )),
                this.plyr.on("exitfullscreen", (function() {
                    return t.onExitFullscreen()
                }
                )),
                this.plyr.on("playing", (function() {
                    return t.onPlay()
                }
                )),
                this.plyr.on("pause", (function() {
                    return t.onPause()
                }
                )),
                this.plyr.on("ended", (function() {
                    return t.onEnded()
                }
                )),
                this.plyr.on("error", (function() {
                    return t.onError()
                }
                )))
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                this.state = {
                    currentTime: this.currentTime,
                    muted: this.muted,
                    playing: this.playing
                }
            }
        }, {
            key: "play",
            value: function() {
                this.plyr.play()
            }
        }, {
            key: "plyrContainerElement",
            get: function() {
                return this.querySelector("video")
            }
        }, {
            key: "currentTime",
            get: function() {
                return this.plyr.currentTime
            }
        }, {
            key: "duration",
            get: function() {
                return this.plyr.duration
            }
        }, {
            key: "playing",
            get: function() {
                return this.plyr.playing
            }
        }, {
            key: "fullscreen",
            get: function() {
                return this.plyr.fullscreen.active
            }
        }, {
            key: "muted",
            get: function() {
                return this.plyr ? this.plyr.muted : this.hasAttribute("muted")
            }
        }]),
        e
    }(P.a))
      , T = function() {
        function t() {
            var e = this;
            r()(this, t),
            "IntersectionObserver"in window ? "loading"in HTMLImageElement.prototype == !1 ? (this.modernBrowsers(),
            document.body.addEventListener("Ajax:Rendered", (function() {
                e.modernBrowsers()
            }
            ))) : (this.nativeLazyloadBrowsers(),
            document.body.addEventListener("Ajax:Rendered", (function() {
                e.nativeLazyloadBrowsers()
            }
            ))) : (this.oldskool(),
            document.body.addEventListener("Ajax:Rendered", (function() {
                e.oldskool()
            }
            )))
        }
        return o()(t, [{
            key: "nativeLazyloadBrowsers",
            value: function() {
                [].slice.call(document.querySelectorAll('[loading="lazy"]')).forEach((function(t) {
                    t.dataset.src && (t.src = t.dataset.src),
                    t.dataset.srcset && (t.srcset = t.dataset.srcset)
                }
                ))
            }
        }, {
            key: "modernBrowsers",
            value: function() {
                var t = [].slice.call(document.querySelectorAll('[loading="lazy"]'))
                  , e = new window.IntersectionObserver((function(t) {
                    t.forEach((function(t) {
                        if (t.isIntersecting) {
                            var i = t.target;
                            i.dataset.src && (i.src = i.dataset.src),
                            i.dataset.srcset && (i.srcset = i.dataset.srcset),
                            i.removeAttribute("loading"),
                            e.unobserve(i)
                        }
                    }
                    ))
                }
                ));
                t.forEach((function(t) {
                    e.observe(t)
                }
                ))
            }
        }, {
            key: "oldskool",
            value: function() {
                var t = !1
                  , e = [].slice.call(document.querySelectorAll('[loading="lazy"]'))
                  , i = function i() {
                    !1 === t && (t = !0,
                    setTimeout((function() {
                        e.forEach((function(t) {
                            t.getBoundingClientRect().top <= window.innerHeight && t.getBoundingClientRect().bottom >= 0 && "none" !== window.getComputedStyle(t).display && (t.dataset.src && (t.src = t.dataset.src),
                            t.dataset.srcset && (t.srcset = t.dataset.srcset),
                            t.removeAttribute("loading"),
                            0 === (e = e.filter((function(e) {
                                return e !== t
                            }
                            ))).length && (document.removeEventListener("scroll", i),
                            window.removeEventListener("resize", i),
                            window.removeEventListener("orientationchange", i)))
                        }
                        )),
                        t = !1
                    }
                    ), 200))
                };
                document.addEventListener("scroll", i),
                window.addEventListener("resize", i),
                window.addEventListener("orientationchange", i),
                i()
            }
        }]),
        t
    }()
      , _ = i(11)
      , M = i.n(_)
      , D = {
        selItems: "[data-list-loadmore-items]",
        selPagination: "[data-list-loadmore-pagination]",
        pageCacheRegex: /(page|p)=([0-9]*)$/
    }
      , I = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function(t) {
                this.el = this,
                this.settings = Object.assign({}, D, t),
                this.el.setAttribute("data-list-loadmore", ""),
                this.pageHrefCache = [1],
                this.init()
            }
        }, {
            key: "init",
            value: function() {
                this.elItems = this.el.querySelector(this.settings.selItems),
                this.setBinds()
            }
        }, {
            key: "loadMore",
            value: function(t, i) {
                var s = this
                  , n = this
                  , r = this.el.className
                  , a = e.findClassNameMatches(document, r)
                  , o = Array.from(a).indexOf(this.el);
                this.pageHrefCache.push(this.getPageNum(t)),
                this.el.setAttribute("data-list-loadmore", "loading"),
                window.fetch(t, {
                    credentials: "include"
                }).then((function(t) {
                    return s.el.setAttribute("data-list-loadmore", ""),
                    t.text()
                }
                )).then((function(t) {
                    var a = document.createElement("div");
                    a.innerHTML = t;
                    var l = e.findClassNameMatches(a, r)
                      , h = l[o].querySelector(n.settings.selItems)
                      , c = l[o].querySelector(n.settings.selPagination);
                    "function" == typeof i ? i(h, c, l[o]) : s.render(h, c, n.elItems, n.elPagination)
                }
                )).catch((function(t) {
                    console.log(t)
                }
                ))
            }
        }, {
            key: "next",
            value: function(t) {
                if (this.elPagination) {
                    var e = this.elPagination.querySelector("a");
                    e && this.loadMore(e.href, t)
                }
            }
        }, {
            key: "setBinds",
            value: function() {
                var t = this;
                this.elPagination && this.elPagination.addEventListener("click", (function(e) {
                    var i = e.target;
                    "A" === i.nodeName.toUpperCase() && (e.preventDefault(),
                    t.loadMore(i.href))
                }
                ))
            }
        }, {
            key: "getPageNum",
            value: function(t) {
                try {
                    var e = this.settings.pageCacheRegex.exec(t);
                    return parseInt(e[2])
                } catch (e) {
                    return console.info("ListLoadMore", "".concat(t, " not a new page number")),
                    0
                }
            }
        }, {
            key: "updatePaginationDOM",
            value: function(t) {
                var e = this;
                M()(t.querySelectorAll(":scope > a")).forEach((function(t) {
                    e.pageHrefCache.indexOf(e.getPageNum(t.href)) >= 0 && t.parentNode.removeChild(t)
                }
                )),
                this.elPagination.innerHTML = t.innerHTML
            }
        }, {
            key: "render",
            value: function(t, e) {
                t && this.elItems.insertAdjacentHTML("beforeend", t.innerHTML),
                e ? this.updatePaginationDOM(e) : this.elPagination.parentNode.removeChild(this.elPagination),
                this.dispatchRendered()
            }
        }, {
            key: "dispatchRendered",
            value: function() {
                var t = new window.CustomEvent("Ajax:Rendered",{
                    bubbles: !0
                });
                document.body.dispatchEvent(t)
            }
        }, {
            key: "elPagination",
            get: function() {
                return this.el.querySelector(this.settings.selPagination)
            }
        }], [{
            key: "findClassNameMatches",
            value: function(t, e) {
                return t.querySelectorAll("[class=".concat(e, "]"))
            }
        }]),
        e
    }(window.HTMLElement)
      , F = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                var t = this;
                this.quoteSlides = this.querySelector(".ListD-items"),
                this.quoteSlide = this.querySelectorAll(".ListD-items-item"),
                this.promoSlides = this.querySelectorAll(".PromoSlide");
                var e = {
                    x0: 20,
                    x1: 65,
                    y1: 45,
                    x2: 70,
                    y2: 40,
                    x3: 30
                };
                this.quoteSlide.length > 1 && window.addEventListener("load", (function() {
                    t.flickity = new g.a(t.quoteSlides,{
                        pageDots: !0,
                        groupCells: !0,
                        draggable: !0,
                        adaptiveHeight: !1,
                        wrapAround: !0,
                        freeScroll: !1,
                        arrowShape: e
                    }),
                    t.promoSlides.forEach((function(t) {
                        t.style.opacity = 1
                    }
                    ))
                }
                ))
            }
        }]),
        e
    }(window.HTMLElement)
      , L = i(47)
      , B = i.n(L)
      , V = i(48)
      , R = i.n(V)
      , N = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                console.log("[Lottie] connectedCallback"),
                this.hasAttribute("data-loop-frame") && (this.frameLoop = parseInt(this.getAttribute("data-loop-frame"))),
                this.hasAttribute("data-trigger-frames") && (this.segmentTriggers = JSON.parse(this.getAttribute("data-trigger-frames"))),
                this.hasAttribute("data-animation-path") && (this.animationPath = this.getAttribute("data-animation-path"),
                window.addEventListener("resize", this),
                this.initOrDestroy())
            }
        }, {
            key: "handleEvent",
            value: function(t) {
                "resize" === t.type && this.initOrDestroy()
            }
        }, {
            key: "initOrDestroy",
            value: function() {
                "none" !== window.getComputedStyle(this).display ? this.init() : this.destroy()
            }
        }, {
            key: "destroy",
            value: function() {
                this.anim && (this.anim.destroy(),
                delete this.anim)
            }
        }, {
            key: "init",
            value: function() {
                var t = this;
                if (!this.anim) {
                    this.anim = R.a.loadAnimation({
                        container: this,
                        renderer: "svg",
                        loop: !1,
                        autoplay: !1,
                        path: this.animationPath
                    }),
                    this.anim.addEventListener("data_ready", (function(e) {
                        for (var i = [t.anim.animationData.ip].concat(M()(t.segmentTriggers), [t.anim.animationData.op + 1]), s = 0; s < i.length - 1; s++) {
                            var n = i[s]
                              , r = i[s + 1] - 1;
                            i[s] = [n, r]
                        }
                        i.pop(),
                        t.anim.playSegments(i, !0)
                    }
                    ));
                    var e = 0;
                    this.anim.addEventListener("segmentStart", (function(i) {
                        t.segmentTriggers.indexOf(i.firstFrame) > -1 && t.setAttribute("data-trigger-" + ++e, "")
                    }
                    )),
                    this.frameLoop && this.anim.addEventListener("complete", (function(e) {
                        t.anim.playSegments([t.frameLoop, t.anim.animationData.op], !0)
                    }
                    ))
                }
            }
        }]),
        e
    }(B()(HTMLElement))
      , O = i(31)
      , q = i(14)
      , z = i(22)
      , H = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                var t = this;
                this.form = this.querySelector("form"),
                this.form.addEventListener("submit", (function(e) {
                    e.preventDefault(),
                    t.submitForm()
                }
                )),
                this.handleClearButton()
            }
        }, {
            key: "handleClearButton",
            value: function() {
                var t = this;
                this.querySelector(".NewsletterForm-success-more").addEventListener("click", (function(e) {
                    e.preventDefault(),
                    t.clearForm()
                }
                ))
            }
        }, {
            key: "submitForm",
            value: function() {
                var t = this
                  , e = this.form.getAttribute("action") || ""
                  , i = new window.FormData(this.form)
                  , s = Array.from(i, (function(t) {
                    return t.map(encodeURIComponent).join("=")
                }
                )).join("&");
                window.fetch(e, {
                    credentials: "include",
                    method: "POST",
                    body: s,
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    }
                }).then((function(e) {
                    if (200 === e.status) {
                        t.setFormSuccess();
                        var s = new window.CustomEvent("Newsletter:subscribe",{
                            bubbles: !0,
                            detail: {
                                email: i.get("email")
                            }
                        });
                        t.dispatchEvent(s)
                    }
                }
                )).catch((function(e) {
                    console.log("Newsletter Form Error: " + e),
                    t.setFormError()
                }
                ))
            }
        }, {
            key: "clearForm",
            value: function() {
                this.form.removeAttribute("data-form-success"),
                this.form.removeAttribute("data-form-error"),
                this.form.querySelectorAll("input").forEach((function(t) {
                    t.value = ""
                }
                ))
            }
        }, {
            key: "setFormSuccess",
            value: function() {
                this.form.setAttribute("data-form-success", !0)
            }
        }, {
            key: "setFormError",
            value: function() {
                this.form.setAttribute("data-form-error", !0)
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                return !1
            }
        }]),
        e
    }(window.HTMLElement)
      , G = i(28)
      , j = i(29)
      , W = i(23)
      , $ = i(30)
      , U = i(16)
      , Y = i.n(U)
      , X = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                this.init(),
                this.setEventListDners(),
                this.setSubNav(),
                this.dealWithMenuHover()
            }
        }, {
            key: "disconnectedCallback",
            value: function() {
                this.hoverListDner.destroy()
            }
        }, {
            key: "init",
            value: function() {
                this.childEls = this.querySelectorAll(".SectionNavigation-items-item"),
                this.childStack = Array.from(this.childEls),
                this.subNav = this.querySelector("[data-sub-trigger]"),
                this.subNavMenu = this.querySelector(".SectionNavigationItem-subNav"),
                this.childWidthTotal = this.getChildWidths(this.childStack),
                this.items = this.querySelector(".SectionNavigation-items")
            }
        }, {
            key: "dealWithMenuHover",
            value: function() {
                var t = this;
                this.subNav && (this.hoverListDner = Y()(this.subNav, (function() {
                    t.subNav.setAttribute("data-hover", "")
                }
                ), (function() {
                    t.subNav.removeAttribute("data-hover")
                }
                )),
                this.subNav.addEventListener("focus", (function() {
                    t.subNav.setAttribute("data-hover", "")
                }
                )),
                document.addEventListener("click", (function(e) {
                    t.subNav.contains(e.target) || t.subNav.removeAttribute("data-hover")
                }
                )))
            }
        }, {
            key: "setEventListDners",
            value: function() {
                var t = this;
                window.addEventListener("load", (function() {
                    t.checkWidths(),
                    window.innerWidth < 560 && t.setCarousel()
                }
                )),
                window.addEventListener("resize", Object(f.a)(250, (function() {
                    window.innerWidth < 560 && t.childWidthTotal > window.innerWidth ? t.setCarousel() : t.destroyCarousel()
                }
                )))
            }
        }, {
            key: "setCarousel",
            value: function() {
                this.childStack.forEach((function(t) {
                    t.removeAttribute("data-hide")
                }
                )),
                this.subNav.setAttribute("data-sub-trigger", "hide"),
                void 0 === this.flickity && (this.flickity = new g.a(this.items,{
                    contain: !0,
                    cellAlign: "left",
                    adaptiveHeight: !0,
                    prevNextButtons: !1,
                    pageDots: !1,
                    wrapAround: !0
                }),
                this.flickity.resize())
            }
        }, {
            key: "destroyCarousel",
            value: function() {
                this.flickity && (this.flickity.destroy(),
                this.checkWidths(),
                this.flickity = void 0)
            }
        }, {
            key: "getChildWidths",
            value: function(t) {
                for (var e = 0, i = 0; i < t.length; i++) {
                    var s = window.getComputedStyle(t[i]);
                    e += t[i].getBoundingClientRect().width + parseInt(s.marginLeft) + parseInt(s.marginRight)
                }
                return e
            }
        }, {
            key: "checkWidths",
            value: function() {
                this.childStack.forEach((function(t) {
                    t.removeAttribute("data-hide")
                }
                )),
                this.childWidthTotal > 480 ? (this.populateNav(),
                this.subNav.setAttribute("data-sub-trigger", "show")) : this.subNav && this.subNav.setAttribute("data-sub-trigger", "hide")
            }
        }, {
            key: "populateNav",
            value: function() {
                for (var t = this.childStack.length - 2; t >= 0; t--) {
                    var e = this.childStack.slice(0, t)
                      , i = this.getChildWidths(e);
                    if (this.childStack[t].setAttribute("data-hide", ""),
                    i < 480) {
                        for (var s = this.childStack.length - e.length - 1; s > 0; )
                            this.subNavMenuItems[this.subNavMenuItems.length - s].setAttribute("data-show", ""),
                            s--;
                        break
                    }
                }
            }
        }, {
            key: "setSubNav",
            value: function() {
                var t = this;
                this.childStack.slice(0, this.childStack.length - 1).forEach((function(e) {
                    t.subNavMenu.innerHTML += e.innerHTML
                }
                )),
                this.subNavMenu && (this.subNavMenuItems = this.subNavMenu.querySelectorAll(".SectionNavigationItem"))
            }
        }]),
        e
    }(window.HTMLElement)
      , J = i(32)
      , K = i(20)
      , Q = function(t) {
        function e() {
            var t;
            return r()(this, e),
            (t = h()(this, u()(e).call(this))).playing = !1,
            t.player = null,
            t
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                E()(u()(e.prototype), "init", this).call(this),
                this.init()
            }
        }, {
            key: "init",
            value: function() {
                window.VimeoAPIReady ? this.onVimeoAPIReady() : this.loadVimeoApi()
            }
        }, {
            key: "getVideoDuration",
            value: function() {
                return this.duration || 0
            }
        }, {
            key: "onVimeoAPIReady",
            value: function() {
                window.VimeoAPIReady = !0;
                var t = this.querySelector(".VimeoVideoPlayer-player");
                this.player = new window.Vimeo.Player(t),
                this.settings.muted && this.player.setVolume(0),
                this.settings.seekSeconds && this.player.setCurrentTime(this.settings.seekSeconds),
                this.getAttribute("data-autoplay") && (this.player.setVolume(0),
                this.play()),
                E()(u()(e.prototype), "onVideoReady", this).call(this),
                this.tieIntoEvents()
            }
        }, {
            key: "tieIntoEvents",
            value: function() {
                var t = this;
                this.player.on("play", (function(e) {
                    t.onPlayerPlay(e)
                }
                )),
                this.player.on("pause", (function(e) {
                    t.onPlayerPause(e)
                }
                )),
                this.player.on("timeupdate", (function(e) {
                    t.onPlayerTimeUpdate(e)
                }
                )),
                this.player.on("ended", (function(e) {
                    t.onPlayerEnd(e)
                }
                ))
            }
        }, {
            key: "loadVimeoApi",
            value: function() {
                var t = document.createElement("script");
                t.src = "https://player.vimeo.com/api/player.js",
                t.addEventListener("load", this.onVimeoAPIReady.bind(this));
                var e = document.getElementsByTagName("script")[0];
                e.parentNode.insertBefore(t, e)
            }
        }, {
            key: "onPlayerPlay",
            value: function(t) {
                this.playing ? E()(u()(e.prototype), "onVideoUnPause", this).call(this, t) : (this.playing = !0,
                this.duration = t.duration,
                E()(u()(e.prototype), "onVideoStart", this).call(this, t))
            }
        }, {
            key: "onPlayerPause",
            value: function(t) {
                E()(u()(e.prototype), "onVideoPause", this).call(this, t)
            }
        }, {
            key: "onPlayerTimeUpdate",
            value: function(t) {
                E()(u()(e.prototype), "onVideoTimeUpdate", this).call(this, {
                    secondsElapsed: t.seconds
                })
            }
        }, {
            key: "onPlayerEnd",
            value: function(t) {
                this.playing = !1,
                E()(u()(e.prototype), "onVideoEnd", this).call(this, t)
            }
        }, {
            key: "play",
            value: function() {
                this.player.play()
            }
        }, {
            key: "pause",
            value: function() {
                this.player.pause()
            }
        }, {
            key: "getPlatformName",
            value: function() {
                return "vimeo"
            }
        }]),
        e
    }(P.a)
      , Z = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                this.cacheElements(),
                this.playlist && (this.handlePlaylistOpening(),
                this.isVideoPage && this.markCurrentPlayListItem(window.location.href),
                this.handlePlayListItemClicks(),
                this.reactToVideoEnd())
            }
        }, {
            key: "cacheElements",
            value: function() {
                this.playlist = this.querySelector('[class$="-playlist"]'),
                this.PlayListItems = this.querySelectorAll(".PlayListItem"),
                this.isVideoPage ? this.videoWrapper = this.querySelector("[data-video-wrapper]") : this.videoWrapper = this.querySelector("[data-video-player-wrapper]")
            }
        }, {
            key: "reactToVideoEnd",
            value: function() {
                var t = this;
                this.querySelector("[data-video-player]").addEventListener("Video:onVideoEnded", (function(e) {
                    var i = t.playlist.querySelector('[data-current-item="true"]')
                      , s = i.nextElementSibling;
                    if (s || (s = i.parentElement.nextElementSibling.querySelector(".PlayListItem")),
                    s && null !== s.offsetParent) {
                        var n = s.getAttribute("data-item-url");
                        t.loadVideo(n)
                    }
                }
                ))
            }
        }, {
            key: "handlePlayListItemClicks",
            value: function() {
                var t = this;
                this.PlayListItems.forEach((function(e) {
                    var i = e.getAttribute("data-item-url");
                    e.addEventListener("click", (function(s) {
                        s.preventDefault(),
                        i && "true" !== e.getAttribute("data-current-item") && (t.loadVideo(i),
                        t.closePlaylist())
                    }
                    ))
                }
                ))
            }
        }, {
            key: "setLoadingState",
            value: function() {
                var t = document.createElement("div");
                t.classList.add("loading-icon"),
                this.videoWrapper.appendChild(t),
                this.setAttribute("data-loading", !0)
            }
        }, {
            key: "removeLoadingState",
            value: function() {
                var t = this.videoWrapper.querySelector(".loading-icon");
                t.parentNode.removeChild(t),
                this.removeAttribute("data-loading")
            }
        }, {
            key: "clearOldVideo",
            value: function() {
                this.videoWrapper.innerHTML = ""
            }
        }, {
            key: "loadVideo",
            value: function(t) {
                var e = this;
                this.clearOldVideo(),
                this.setLoadingState(),
                this.getItem(t).then((function(i) {
                    e.removeLoadingState(),
                    e.insertVideo(i, t)
                }
                ))
            }
        }, {
            key: "getItem",
            value: function(t) {
                return new Promise((function(e, i) {
                    window.fetch(t, {
                        credentials: "include"
                    }).then((function(t) {
                        e(t.text())
                    }
                    )).catch((function() {
                        i()
                    }
                    ))
                }
                ))
            }
        }, {
            key: "insertVideo",
            value: function(t, e) {
                var i = document.createElement("div");
                i.innerHTML = t;
                var s = "[data-video-player-wrapper]";
                this.isVideoPage && (s = "[data-video-wrapper]");
                var n = i.querySelector(s).innerHTML;
                if (n && (this.videoWrapper.innerHTML = n),
                this.isVideoPage) {
                    var r = i.querySelector("title").innerHTML;
                    window.history.replaceState({}, r, e),
                    document.title = r
                }
                this.markCurrentPlayListItem(e),
                this.reactToVideoEnd()
            }
        }, {
            key: "handlePlaylistOpening",
            value: function() {
                var t = this;
                if (this.playlist) {
                    var e = this.playlist.querySelector(".VideoPage-playlist-header");
                    e && e.addEventListener("click", (function() {
                        t.togglePlaylist()
                    }
                    ))
                }
            }
        }, {
            key: "markCurrentPlayListItem",
            value: function(t) {
                this.PlayListItems.forEach((function(e) {
                    e.removeAttribute("data-current-item");
                    var i = e.getAttribute("data-item-url");
                    i && t.indexOf(i) > -1 && e.setAttribute("data-current-item", !0)
                }
                ))
            }
        }, {
            key: "openPlaylist",
            value: function() {
                document.body.setAttribute("data-toggle-video-playlist", !0),
                this.setAttribute("data-toggle-video-playlist", !0)
            }
        }, {
            key: "closePlaylist",
            value: function() {
                document.body.removeAttribute("data-toggle-video-playlist"),
                this.removeAttribute("data-toggle-video-playlist")
            }
        }, {
            key: "togglePlaylist",
            value: function() {
                document.body.getAttribute("data-toggle-video-playlist") ? this.closePlaylist() : this.openPlaylist()
            }
        }, {
            key: "isVideoPage",
            get: function() {
                return !!document.querySelector("html").classList.contains("VideoPage")
            }
        }]),
        e
    }(window.HTMLElement)
      , tt = i(49)
      , et = i.n(tt)
      , it = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                var t = this;
                window.addEventListener("load", (function() {
                    et()(".DateInput-input", {
                        formatter: function(t, e, i) {
                            t.value = e.getDate() + "/" + (e.getMonth() + 1) + "/" + e.getUTCFullYear()
                        },
                        maxDate: new Date(3e3,1,1),
                        minDate: "true" === t.getAttribute("disablePastDatesAndWeekends") ? new Date : null,
                        onSelect: function() {
                            setTimeout((function() {
                                document.getElementsByClassName("qs-datepicker-container")[0].classList.add("qs-hidden");
                                var t = document.getElementsByClassName("DateInput-input")[0];
                                t.focus(),
                                t.blur()
                            }
                            ), 300)
                        },
                        noWeekends: "true" === t.getAttribute("disablePastDatesAndWeekends")
                    }).calendarContainer.style.setProperty("font-size", "2rem")
                }
                ))
            }
        }]),
        e
    }(window.HTMLElement)
      , st = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                window.addEventListener("load", this.setAnimation()),
                this.addEventListener(P.b.ready, this),
                this.addEventListener(P.b.playing, this),
                this.addEventListener("click", this),
                this.toggleTranscript()
            }
        }, {
            key: "setAnimation",
            value: function() {
                console.warn("loaded", this),
                this.setAttribute("data-dei-loaded", "")
            }
        }, {
            key: "handleEvent",
            value: function(t) {
                t.type === P.b.ready && (this.ready = !0,
                this.player = t.target),
                t.type === P.b.playing && (this.playing = !0),
                "click" === t.type && t.target.matches(".VideoLead-playButton") && this.player.play()
            }
        }, {
            key: "toggleTranscript",
            value: function() {
                var t = this;
                this.querySelector(".VideoPlayerControls-viewTranscript").addEventListener("click", (function(e) {
                    t.hasAttribute("data-transcript-visible") ? t.removeAttribute("data-transcript-visible", "") : t.setAttribute("data-transcript-visible", "")
                }
                ))
            }
        }, {
            key: "ready",
            set: function(t) {
                t ? this.setAttribute("ready", "") : this.removeAttribute("ready")
            }
        }, {
            key: "playing",
            set: function(t) {
                t ? this.setAttribute("playing", "") : this.removeAttribute("playing")
            }
        }]),
        e
    }(window.HTMLElement)
      , nt = function(t) {
        function e() {
            return r()(this, e),
            h()(this, u()(e).apply(this, arguments))
        }
        return d()(e, t),
        o()(e, [{
            key: "connectedCallback",
            value: function() {
                this.addEventListener(P.b.ready, this),
                this.addEventListener(P.b.playing, this),
                this.addEventListener("click", this)
            }
        }, {
            key: "handleEvent",
            value: function(t) {
                if (t.type === P.b.ready && (this.ready = !0,
                this.player = t.target,
                this.setAttribute("data-hide-player", !0)),
                t.type === P.b.playing) {
                    this.playing = !0,
                    this.removeAttribute("data-hide-player", !0);
                    var e = document.getElementById("page-above");
                    e && e.setAttribute("data-hide-above", !0)
                }
            }
        }, {
            key: "ready",
            get: function() {},
            set: function(t) {
                t ? this.setAttribute("ready", "") : this.removeAttribute("ready")
            }
        }, {
            key: "playing",
            get: function() {},
            set: function(t) {
                t ? this.setAttribute("playing", "") : this.removeAttribute("playing")
            }
        }]),
        e
    }(window.HTMLElement);
    function rt() {
        window.customElements.define("ps-banner", s.a),
        window.customElements.define("ps-carousel", y),
        window.customElements.define("ps-list-carousel", F),
        window.customElements.define("ps-date-picker", it),
        window.customElements.define("ps-gallery-page", v),
        window.customElements.define("ps-brightcoveplayer", k),
        window.customElements.define("ps-html5player", A),
        window.customElements.define("ps-list-loadmore", I),
        window.customElements.define("ps-lottie-animation", N),
        window.customElements.define("ps-form", O.a),
        window.customElements.define(q.a.name, q.a),
        window.customElements.define(z.a.name, z.a),
        window.customElements.define("ps-form-newsletter", H),
        window.customElements.define("ps-header", G.a),
        window.customElements.define("ps-section-nav", X),
        window.customElements.define("ps-search-results-module", $.a),
        window.customElements.define("ps-tabs", J.a),
        window.customElements.define("ps-toggler", j.a),
        window.customElements.define(W.a.name, W.a),
        window.customElements.define(K.a.name, K.a),
        window.customElements.define("ps-video-lead", st),
        window.customElements.define("ps-full-width-video", nt),
        window.customElements.define("ps-vimeoplayer", Q),
        window.customElements.define("ps-video-playlist", Z),
        window.customElements.define("ps-cookie-banner", b.a),
        new w,
        new T,
        function() {
            if (window.location.hash.length > 0 && ["#sign-in", "sign-in-customerzone", "#sign-in-internet"].indexOf(window.location.hash) < 0) {
                window.scroll(0, 0),
                setTimeout((function() {
                    window.scroll(0, 0)
                }
                ), 1);
                var t = window.location.hash;
                document.querySelector(t) && setTimeout((function() {
                    var e = document.querySelector(t).getBoundingClientRect().top + (window.pageYOffset - document.querySelector("ps-header").clientHeight);
                    window.scrollTo({
                        top: e,
                        behavior: "smooth"
                    })
                }
                ), 1e3)
            }
        }()
    }
    "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", rt) : rt();
    e.default = {}
}
]);
